!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon57
ALT	kern/console.c	219;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/writemotd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BSIZE	fs/fs.h	14;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
B_BUSY	fs/buf.h	10;"	d
B_DIRTY	fs/buf.h	12;"	d
B_VALID	fs/buf.h	11;"	d
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon58
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon58
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/writemotd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	225;"	d	file:
E1000IO	kern/e1000.h	15;"	d
E1000_AIT	kern/e1000_hw.h	148;"	d
E1000_ALGNERRC	kern/e1000_hw.h	211;"	d
E1000_BPRC	kern/e1000_hw.h	237;"	d
E1000_BPTC	kern/e1000_hw.h	265;"	d
E1000_CEXTERR	kern/e1000_hw.h	223;"	d
E1000_COLC	kern/e1000_hw.h	219;"	d
E1000_CPUVEC	kern/e1000_hw.h	313;"	d
E1000_CRCERRS	kern/e1000_hw.h	210;"	d
E1000_CTRL	kern/e1000_hw.h	114;"	d
E1000_CTRL_ASDE	kern/e1000_hw.h	530;"	d
E1000_CTRL_BEM	kern/e1000_hw.h	524;"	d
E1000_CTRL_BEM32	kern/e1000_hw.h	537;"	d
E1000_CTRL_DUP	kern/e1000_hw.h	115;"	d
E1000_CTRL_D_UD_EN	kern/e1000_hw.h	540;"	d
E1000_CTRL_D_UD_POLARITY	kern/e1000_hw.h	541;"	d
E1000_CTRL_EXT	kern/e1000_hw.h	119;"	d
E1000_CTRL_EXT_LINK_EN	kern/e1000_hw.h	543;"	d
E1000_CTRL_FD	kern/e1000_hw.h	523;"	d
E1000_CTRL_FORCE_PHY_RESET	kern/e1000_hw.h	542;"	d
E1000_CTRL_FRCDPX	kern/e1000_hw.h	539;"	d
E1000_CTRL_FRCSPD	kern/e1000_hw.h	538;"	d
E1000_CTRL_GIO_MASTER_DISABLE	kern/e1000_hw.h	526;"	d
E1000_CTRL_ILOS	kern/e1000_hw.h	532;"	d
E1000_CTRL_LRST	kern/e1000_hw.h	527;"	d
E1000_CTRL_PHY_RST	kern/e1000_hw.h	557;"	d
E1000_CTRL_PRIOR	kern/e1000_hw.h	525;"	d
E1000_CTRL_RFCE	kern/e1000_hw.h	553;"	d
E1000_CTRL_RST	kern/e1000_hw.h	552;"	d
E1000_CTRL_RTE	kern/e1000_hw.h	555;"	d
E1000_CTRL_SLE	kern/e1000_hw.h	529;"	d
E1000_CTRL_SLU	kern/e1000_hw.h	531;"	d
E1000_CTRL_SPD_10	kern/e1000_hw.h	534;"	d
E1000_CTRL_SPD_100	kern/e1000_hw.h	535;"	d
E1000_CTRL_SPD_1000	kern/e1000_hw.h	536;"	d
E1000_CTRL_SPD_SEL	kern/e1000_hw.h	533;"	d
E1000_CTRL_SW2FW_INT	kern/e1000_hw.h	558;"	d
E1000_CTRL_SWDPIN0	kern/e1000_hw.h	544;"	d
E1000_CTRL_SWDPIN1	kern/e1000_hw.h	545;"	d
E1000_CTRL_SWDPIN2	kern/e1000_hw.h	546;"	d
E1000_CTRL_SWDPIN3	kern/e1000_hw.h	547;"	d
E1000_CTRL_SWDPIO0	kern/e1000_hw.h	548;"	d
E1000_CTRL_SWDPIO1	kern/e1000_hw.h	549;"	d
E1000_CTRL_SWDPIO2	kern/e1000_hw.h	550;"	d
E1000_CTRL_SWDPIO3	kern/e1000_hw.h	551;"	d
E1000_CTRL_TFCE	kern/e1000_hw.h	554;"	d
E1000_CTRL_TME	kern/e1000_hw.h	528;"	d
E1000_CTRL_VME	kern/e1000_hw.h	556;"	d
E1000_DC	kern/e1000_hw.h	220;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_DPT	kern/e1000_hw.h	89;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_SPT	kern/e1000_hw.h	91;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_DPT	kern/e1000_hw.h	90;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_SPT	kern/e1000_hw.h	92;"	d
E1000_DEV_ID_82540EM	kern/e1000_hw.h	44;"	d
E1000_DEV_ID_82540EM_LOM	kern/e1000_hw.h	45;"	d
E1000_DEV_ID_82540EP	kern/e1000_hw.h	47;"	d
E1000_DEV_ID_82540EP_LOM	kern/e1000_hw.h	46;"	d
E1000_DEV_ID_82540EP_LP	kern/e1000_hw.h	48;"	d
E1000_DEV_ID_82541EI	kern/e1000_hw.h	57;"	d
E1000_DEV_ID_82541EI_MOBILE	kern/e1000_hw.h	58;"	d
E1000_DEV_ID_82541ER	kern/e1000_hw.h	60;"	d
E1000_DEV_ID_82541ER_LOM	kern/e1000_hw.h	59;"	d
E1000_DEV_ID_82541GI	kern/e1000_hw.h	62;"	d
E1000_DEV_ID_82541GI_LF	kern/e1000_hw.h	64;"	d
E1000_DEV_ID_82541GI_MOBILE	kern/e1000_hw.h	63;"	d
E1000_DEV_ID_82542	kern/e1000_hw.h	37;"	d
E1000_DEV_ID_82543GC_COPPER	kern/e1000_hw.h	39;"	d
E1000_DEV_ID_82543GC_FIBER	kern/e1000_hw.h	38;"	d
E1000_DEV_ID_82544EI_COPPER	kern/e1000_hw.h	40;"	d
E1000_DEV_ID_82544EI_FIBER	kern/e1000_hw.h	41;"	d
E1000_DEV_ID_82544GC_COPPER	kern/e1000_hw.h	42;"	d
E1000_DEV_ID_82544GC_LOM	kern/e1000_hw.h	43;"	d
E1000_DEV_ID_82545EM_COPPER	kern/e1000_hw.h	49;"	d
E1000_DEV_ID_82545EM_FIBER	kern/e1000_hw.h	50;"	d
E1000_DEV_ID_82545GM_COPPER	kern/e1000_hw.h	51;"	d
E1000_DEV_ID_82545GM_FIBER	kern/e1000_hw.h	52;"	d
E1000_DEV_ID_82545GM_SERDES	kern/e1000_hw.h	53;"	d
E1000_DEV_ID_82546EB_COPPER	kern/e1000_hw.h	54;"	d
E1000_DEV_ID_82546EB_FIBER	kern/e1000_hw.h	55;"	d
E1000_DEV_ID_82546EB_QUAD_COPPER	kern/e1000_hw.h	56;"	d
E1000_DEV_ID_82546GB_COPPER	kern/e1000_hw.h	65;"	d
E1000_DEV_ID_82546GB_FIBER	kern/e1000_hw.h	66;"	d
E1000_DEV_ID_82546GB_PCIE	kern/e1000_hw.h	68;"	d
E1000_DEV_ID_82546GB_QUAD_COPPER	kern/e1000_hw.h	69;"	d
E1000_DEV_ID_82546GB_QUAD_COPPER_KSP3	kern/e1000_hw.h	88;"	d
E1000_DEV_ID_82546GB_SERDES	kern/e1000_hw.h	67;"	d
E1000_DEV_ID_82547EI	kern/e1000_hw.h	70;"	d
E1000_DEV_ID_82547EI_MOBILE	kern/e1000_hw.h	71;"	d
E1000_DEV_ID_82547GI	kern/e1000_hw.h	61;"	d
E1000_DEV_ID_82571EB_COPPER	kern/e1000_hw.h	72;"	d
E1000_DEV_ID_82571EB_FIBER	kern/e1000_hw.h	73;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER	kern/e1000_hw.h	75;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER_LOWPROFILE	kern/e1000_hw.h	78;"	d
E1000_DEV_ID_82571EB_QUAD_FIBER	kern/e1000_hw.h	77;"	d
E1000_DEV_ID_82571EB_SERDES	kern/e1000_hw.h	74;"	d
E1000_DEV_ID_82571EB_SERDES_DUAL	kern/e1000_hw.h	79;"	d
E1000_DEV_ID_82571EB_SERDES_QUAD	kern/e1000_hw.h	80;"	d
E1000_DEV_ID_82571PT_QUAD_COPPER	kern/e1000_hw.h	76;"	d
E1000_DEV_ID_82572EI	kern/e1000_hw.h	84;"	d
E1000_DEV_ID_82572EI_COPPER	kern/e1000_hw.h	81;"	d
E1000_DEV_ID_82572EI_FIBER	kern/e1000_hw.h	82;"	d
E1000_DEV_ID_82572EI_SERDES	kern/e1000_hw.h	83;"	d
E1000_DEV_ID_82573E	kern/e1000_hw.h	85;"	d
E1000_DEV_ID_82573E_IAMT	kern/e1000_hw.h	86;"	d
E1000_DEV_ID_82573L	kern/e1000_hw.h	87;"	d
E1000_DEV_ID_ICH8_IFE	kern/e1000_hw.h	97;"	d
E1000_DEV_ID_ICH8_IFE_G	kern/e1000_hw.h	99;"	d
E1000_DEV_ID_ICH8_IFE_GT	kern/e1000_hw.h	98;"	d
E1000_DEV_ID_ICH8_IGP_AMT	kern/e1000_hw.h	95;"	d
E1000_DEV_ID_ICH8_IGP_C	kern/e1000_hw.h	96;"	d
E1000_DEV_ID_ICH8_IGP_M	kern/e1000_hw.h	100;"	d
E1000_DEV_ID_ICH8_IGP_M_AMT	kern/e1000_hw.h	94;"	d
E1000_ECOL	kern/e1000_hw.h	216;"	d
E1000_EEARBC	kern/e1000_hw.h	158;"	d
E1000_EECD	kern/e1000_hw.h	117;"	d
E1000_EECD_ADDR_BITS	kern/e1000_hw.h	607;"	d
E1000_EECD_AUPDEN	kern/e1000_hw.h	620;"	d
E1000_EECD_AUTO_RD	kern/e1000_hw.h	613;"	d
E1000_EECD_CS	kern/e1000_hw.h	596;"	d
E1000_EECD_DI	kern/e1000_hw.h	597;"	d
E1000_EECD_DO	kern/e1000_hw.h	598;"	d
E1000_EECD_FLUPD	kern/e1000_hw.h	619;"	d
E1000_EECD_FWE_DIS	kern/e1000_hw.h	600;"	d
E1000_EECD_FWE_EN	kern/e1000_hw.h	601;"	d
E1000_EECD_FWE_MASK	kern/e1000_hw.h	599;"	d
E1000_EECD_FWE_SHIFT	kern/e1000_hw.h	602;"	d
E1000_EECD_GNT	kern/e1000_hw.h	604;"	d
E1000_EECD_INITSRAM	kern/e1000_hw.h	618;"	d
E1000_EECD_NVADDS	kern/e1000_hw.h	616;"	d
E1000_EECD_PRES	kern/e1000_hw.h	605;"	d
E1000_EECD_REQ	kern/e1000_hw.h	603;"	d
E1000_EECD_SEC1VAL	kern/e1000_hw.h	622;"	d
E1000_EECD_SECVAL_SHIFT	kern/e1000_hw.h	623;"	d
E1000_EECD_SELSHAD	kern/e1000_hw.h	617;"	d
E1000_EECD_SHADV	kern/e1000_hw.h	621;"	d
E1000_EECD_SIZE	kern/e1000_hw.h	606;"	d
E1000_EECD_SIZE_EX_MASK	kern/e1000_hw.h	614;"	d
E1000_EECD_SIZE_EX_SHIFT	kern/e1000_hw.h	615;"	d
E1000_EECD_SK	kern/e1000_hw.h	595;"	d
E1000_EECD_TYPE	kern/e1000_hw.h	609;"	d
E1000_EEMNGCTL	kern/e1000_hw.h	156;"	d
E1000_EEPROM_CFG_DONE	kern/e1000_hw.h	667;"	d
E1000_EEPROM_CFG_DONE_PORT_1	kern/e1000_hw.h	668;"	d
E1000_EEPROM_GRANT_ATTEMPTS	kern/e1000_hw.h	611;"	d
E1000_EEPROM_LED_LOGIC	kern/e1000_hw.h	514;"	d
E1000_EEPROM_POLL_READ	kern/e1000_hw.h	520;"	d
E1000_EEPROM_POLL_WRITE	kern/e1000_hw.h	519;"	d
E1000_EEPROM_RW_ADDR_SHIFT	kern/e1000_hw.h	518;"	d
E1000_EEPROM_RW_REG_DATA	kern/e1000_hw.h	515;"	d
E1000_EEPROM_RW_REG_DONE	kern/e1000_hw.h	516;"	d
E1000_EEPROM_RW_REG_START	kern/e1000_hw.h	517;"	d
E1000_EEPROM_SWDPIN0	kern/e1000_hw.h	513;"	d
E1000_EERD	kern/e1000_hw.h	118;"	d
E1000_EEWR	kern/e1000_hw.h	160;"	d
E1000_ERT	kern/e1000_hw.h	165;"	d
E1000_EXTCNF_CTRL	kern/e1000_hw.h	150;"	d
E1000_EXTCNF_SIZE	kern/e1000_hw.h	151;"	d
E1000_FACTPS	kern/e1000_hw.h	306;"	d
E1000_FCAH	kern/e1000_hw.h	125;"	d
E1000_FCAL	kern/e1000_hw.h	124;"	d
E1000_FCRTH	kern/e1000_hw.h	167;"	d
E1000_FCRTL	kern/e1000_hw.h	166;"	d
E1000_FCRUC	kern/e1000_hw.h	229;"	d
E1000_FCT	kern/e1000_hw.h	126;"	d
E1000_FCTTV	kern/e1000_hw.h	141;"	d
E1000_FEXTNVM	kern/e1000_hw.h	123;"	d
E1000_FFLT	kern/e1000_hw.h	291;"	d
E1000_FFLT_DBG	kern/e1000_hw.h	309;"	d
E1000_FFMT	kern/e1000_hw.h	293;"	d
E1000_FFVT	kern/e1000_hw.h	294;"	d
E1000_FLA	kern/e1000_hw.h	120;"	d
E1000_FLASHT	kern/e1000_hw.h	159;"	d
E1000_FLASH_UPDATES	kern/e1000_hw.h	157;"	d
E1000_FLOP	kern/e1000_hw.h	164;"	d
E1000_FLSWCNT	kern/e1000_hw.h	163;"	d
E1000_FLSWCTL	kern/e1000_hw.h	161;"	d
E1000_FLSWDATA	kern/e1000_hw.h	162;"	d
E1000_FWSM	kern/e1000_hw.h	308;"	d
E1000_GCR	kern/e1000_hw.h	301;"	d
E1000_GORCH	kern/e1000_hw.h	241;"	d
E1000_GORCL	kern/e1000_hw.h	240;"	d
E1000_GOTCH	kern/e1000_hw.h	243;"	d
E1000_GOTCL	kern/e1000_hw.h	242;"	d
E1000_GPRC	kern/e1000_hw.h	236;"	d
E1000_GPTC	kern/e1000_hw.h	239;"	d
E1000_GSCL_1	kern/e1000_hw.h	302;"	d
E1000_GSCL_2	kern/e1000_hw.h	303;"	d
E1000_GSCL_3	kern/e1000_hw.h	304;"	d
E1000_GSCL_4	kern/e1000_hw.h	305;"	d
E1000_HICR	kern/e1000_hw.h	310;"	d
E1000_HICR_FW_RESET	kern/e1000_hw.h	625;"	d
E1000_HOST_IF	kern/e1000_hw.h	292;"	d
E1000_IAC	kern/e1000_hw.h	268;"	d
E1000_IAM	kern/e1000_hw.h	133;"	d
E1000_ICH_NVM_SIG_MASK	kern/e1000_hw.h	629;"	d
E1000_ICH_NVM_SIG_WORD	kern/e1000_hw.h	628;"	d
E1000_ICR	kern/e1000_hw.h	128;"	d
E1000_ICRXATC	kern/e1000_hw.h	270;"	d
E1000_ICRXDMTC	kern/e1000_hw.h	275;"	d
E1000_ICRXOC	kern/e1000_hw.h	276;"	d
E1000_ICRXPTC	kern/e1000_hw.h	269;"	d
E1000_ICR_ACK	kern/e1000_hw.h	368;"	d
E1000_ICR_ALL_PARITY	kern/e1000_hw.h	378;"	d
E1000_ICR_DOCK	kern/e1000_hw.h	370;"	d
E1000_ICR_DSW	kern/e1000_hw.h	379;"	d
E1000_ICR_EPRST	kern/e1000_hw.h	381;"	d
E1000_ICR_GPI_EN0	kern/e1000_hw.h	362;"	d
E1000_ICR_GPI_EN1	kern/e1000_hw.h	363;"	d
E1000_ICR_GPI_EN2	kern/e1000_hw.h	364;"	d
E1000_ICR_GPI_EN3	kern/e1000_hw.h	365;"	d
E1000_ICR_HOST_ARB_PAR	kern/e1000_hw.h	374;"	d
E1000_ICR_INT_ASSERTED	kern/e1000_hw.h	371;"	d
E1000_ICR_LSC	kern/e1000_hw.h	355;"	d
E1000_ICR_MDAC	kern/e1000_hw.h	360;"	d
E1000_ICR_MNG	kern/e1000_hw.h	369;"	d
E1000_ICR_PB_PAR	kern/e1000_hw.h	375;"	d
E1000_ICR_PHYINT	kern/e1000_hw.h	380;"	d
E1000_ICR_RXCFG	kern/e1000_hw.h	361;"	d
E1000_ICR_RXDMT0	kern/e1000_hw.h	357;"	d
E1000_ICR_RXD_FIFO_PAR0	kern/e1000_hw.h	372;"	d
E1000_ICR_RXD_FIFO_PAR1	kern/e1000_hw.h	376;"	d
E1000_ICR_RXO	kern/e1000_hw.h	358;"	d
E1000_ICR_RXSEQ	kern/e1000_hw.h	356;"	d
E1000_ICR_RXT0	kern/e1000_hw.h	359;"	d
E1000_ICR_SRPD	kern/e1000_hw.h	367;"	d
E1000_ICR_TXDW	kern/e1000_hw.h	353;"	d
E1000_ICR_TXD_FIFO_PAR0	kern/e1000_hw.h	373;"	d
E1000_ICR_TXD_FIFO_PAR1	kern/e1000_hw.h	377;"	d
E1000_ICR_TXD_LOW	kern/e1000_hw.h	366;"	d
E1000_ICR_TXQE	kern/e1000_hw.h	354;"	d
E1000_ICS	kern/e1000_hw.h	130;"	d
E1000_ICS_ACK	kern/e1000_hw.h	399;"	d
E1000_ICS_DOCK	kern/e1000_hw.h	401;"	d
E1000_ICS_DSW	kern/e1000_hw.h	408;"	d
E1000_ICS_EPRST	kern/e1000_hw.h	410;"	d
E1000_ICS_GPI_EN0	kern/e1000_hw.h	393;"	d
E1000_ICS_GPI_EN1	kern/e1000_hw.h	394;"	d
E1000_ICS_GPI_EN2	kern/e1000_hw.h	395;"	d
E1000_ICS_GPI_EN3	kern/e1000_hw.h	396;"	d
E1000_ICS_HOST_ARB_PAR	kern/e1000_hw.h	404;"	d
E1000_ICS_LSC	kern/e1000_hw.h	386;"	d
E1000_ICS_MDAC	kern/e1000_hw.h	391;"	d
E1000_ICS_MNG	kern/e1000_hw.h	400;"	d
E1000_ICS_PB_PAR	kern/e1000_hw.h	405;"	d
E1000_ICS_PHYINT	kern/e1000_hw.h	409;"	d
E1000_ICS_RXCFG	kern/e1000_hw.h	392;"	d
E1000_ICS_RXDMT0	kern/e1000_hw.h	388;"	d
E1000_ICS_RXD_FIFO_PAR0	kern/e1000_hw.h	402;"	d
E1000_ICS_RXD_FIFO_PAR1	kern/e1000_hw.h	406;"	d
E1000_ICS_RXO	kern/e1000_hw.h	389;"	d
E1000_ICS_RXSEQ	kern/e1000_hw.h	387;"	d
E1000_ICS_RXT0	kern/e1000_hw.h	390;"	d
E1000_ICS_SRPD	kern/e1000_hw.h	398;"	d
E1000_ICS_TXDW	kern/e1000_hw.h	384;"	d
E1000_ICS_TXD_FIFO_PAR0	kern/e1000_hw.h	403;"	d
E1000_ICS_TXD_FIFO_PAR1	kern/e1000_hw.h	407;"	d
E1000_ICS_TXD_LOW	kern/e1000_hw.h	397;"	d
E1000_ICS_TXQE	kern/e1000_hw.h	385;"	d
E1000_ICTXATC	kern/e1000_hw.h	272;"	d
E1000_ICTXPTC	kern/e1000_hw.h	271;"	d
E1000_ICTXQEC	kern/e1000_hw.h	273;"	d
E1000_ICTXQMTC	kern/e1000_hw.h	274;"	d
E1000_IMC	kern/e1000_hw.h	132;"	d
E1000_IMC_ACK	kern/e1000_hw.h	457;"	d
E1000_IMC_DOCK	kern/e1000_hw.h	459;"	d
E1000_IMC_DSW	kern/e1000_hw.h	466;"	d
E1000_IMC_EPRST	kern/e1000_hw.h	468;"	d
E1000_IMC_GPI_EN0	kern/e1000_hw.h	451;"	d
E1000_IMC_GPI_EN1	kern/e1000_hw.h	452;"	d
E1000_IMC_GPI_EN2	kern/e1000_hw.h	453;"	d
E1000_IMC_GPI_EN3	kern/e1000_hw.h	454;"	d
E1000_IMC_HOST_ARB_PAR	kern/e1000_hw.h	462;"	d
E1000_IMC_LSC	kern/e1000_hw.h	444;"	d
E1000_IMC_MDAC	kern/e1000_hw.h	449;"	d
E1000_IMC_MNG	kern/e1000_hw.h	458;"	d
E1000_IMC_PB_PAR	kern/e1000_hw.h	463;"	d
E1000_IMC_PHYINT	kern/e1000_hw.h	467;"	d
E1000_IMC_RXCFG	kern/e1000_hw.h	450;"	d
E1000_IMC_RXDMT0	kern/e1000_hw.h	446;"	d
E1000_IMC_RXD_FIFO_PAR0	kern/e1000_hw.h	460;"	d
E1000_IMC_RXD_FIFO_PAR1	kern/e1000_hw.h	464;"	d
E1000_IMC_RXO	kern/e1000_hw.h	447;"	d
E1000_IMC_RXSEQ	kern/e1000_hw.h	445;"	d
E1000_IMC_RXT0	kern/e1000_hw.h	448;"	d
E1000_IMC_SRPD	kern/e1000_hw.h	456;"	d
E1000_IMC_TXDW	kern/e1000_hw.h	442;"	d
E1000_IMC_TXD_FIFO_PAR0	kern/e1000_hw.h	461;"	d
E1000_IMC_TXD_FIFO_PAR1	kern/e1000_hw.h	465;"	d
E1000_IMC_TXD_LOW	kern/e1000_hw.h	455;"	d
E1000_IMC_TXQE	kern/e1000_hw.h	443;"	d
E1000_IMS	kern/e1000_hw.h	131;"	d
E1000_IMS_ACK	kern/e1000_hw.h	428;"	d
E1000_IMS_DOCK	kern/e1000_hw.h	430;"	d
E1000_IMS_DSW	kern/e1000_hw.h	437;"	d
E1000_IMS_EPRST	kern/e1000_hw.h	439;"	d
E1000_IMS_GPI_EN0	kern/e1000_hw.h	422;"	d
E1000_IMS_GPI_EN1	kern/e1000_hw.h	423;"	d
E1000_IMS_GPI_EN2	kern/e1000_hw.h	424;"	d
E1000_IMS_GPI_EN3	kern/e1000_hw.h	425;"	d
E1000_IMS_HOST_ARB_PAR	kern/e1000_hw.h	433;"	d
E1000_IMS_LSC	kern/e1000_hw.h	415;"	d
E1000_IMS_MDAC	kern/e1000_hw.h	420;"	d
E1000_IMS_MNG	kern/e1000_hw.h	429;"	d
E1000_IMS_PB_PAR	kern/e1000_hw.h	434;"	d
E1000_IMS_PHYINT	kern/e1000_hw.h	438;"	d
E1000_IMS_RXCFG	kern/e1000_hw.h	421;"	d
E1000_IMS_RXDMT0	kern/e1000_hw.h	417;"	d
E1000_IMS_RXD_FIFO_PAR0	kern/e1000_hw.h	431;"	d
E1000_IMS_RXD_FIFO_PAR1	kern/e1000_hw.h	435;"	d
E1000_IMS_RXO	kern/e1000_hw.h	418;"	d
E1000_IMS_RXSEQ	kern/e1000_hw.h	416;"	d
E1000_IMS_RXT0	kern/e1000_hw.h	419;"	d
E1000_IMS_SRPD	kern/e1000_hw.h	427;"	d
E1000_IMS_TXDW	kern/e1000_hw.h	413;"	d
E1000_IMS_TXD_FIFO_PAR0	kern/e1000_hw.h	432;"	d
E1000_IMS_TXD_FIFO_PAR1	kern/e1000_hw.h	436;"	d
E1000_IMS_TXD_LOW	kern/e1000_hw.h	426;"	d
E1000_IMS_TXQE	kern/e1000_hw.h	414;"	d
E1000_IP4AT	kern/e1000_hw.h	287;"	d
E1000_IP6AT	kern/e1000_hw.h	288;"	d
E1000_IPAV	kern/e1000_hw.h	286;"	d
E1000_ITR	kern/e1000_hw.h	129;"	d
E1000_KABGTXD	kern/e1000_hw.h	187;"	d
E1000_KUMCTRLSTA	kern/e1000_hw.h	296;"	d
E1000_LATECOL	kern/e1000_hw.h	218;"	d
E1000_LEDCTL	kern/e1000_hw.h	149;"	d
E1000_MANC	kern/e1000_hw.h	285;"	d
E1000_MANC2H	kern/e1000_hw.h	298;"	d
E1000_MANC_0298_EN	kern/e1000_hw.h	830;"	d
E1000_MANC_ARP_EN	kern/e1000_hw.h	834;"	d
E1000_MANC_ARP_RES_EN	kern/e1000_hw.h	837;"	d
E1000_MANC_ASF_EN	kern/e1000_hw.h	827;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	kern/e1000_hw.h	842;"	d
E1000_MANC_BR_EN	kern/e1000_hw.h	850;"	d
E1000_MANC_EN_IP_ADDR_FILTER	kern/e1000_hw.h	847;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	kern/e1000_hw.h	843;"	d
E1000_MANC_EN_MNG2HOST	kern/e1000_hw.h	845;"	d
E1000_MANC_EN_XSUM_FILTER	kern/e1000_hw.h	849;"	d
E1000_MANC_IPV4_EN	kern/e1000_hw.h	831;"	d
E1000_MANC_IPV6_EN	kern/e1000_hw.h	832;"	d
E1000_MANC_NEIGHBOR_EN	kern/e1000_hw.h	835;"	d
E1000_MANC_RCV_ALL	kern/e1000_hw.h	841;"	d
E1000_MANC_RCV_TCO_EN	kern/e1000_hw.h	839;"	d
E1000_MANC_REPORT_STATUS	kern/e1000_hw.h	840;"	d
E1000_MANC_RMCP_EN	kern/e1000_hw.h	829;"	d
E1000_MANC_R_ON_FORCE	kern/e1000_hw.h	828;"	d
E1000_MANC_SMBUS_EN	kern/e1000_hw.h	826;"	d
E1000_MANC_SMB_CLK_IN	kern/e1000_hw.h	853;"	d
E1000_MANC_SMB_CLK_OUT	kern/e1000_hw.h	856;"	d
E1000_MANC_SMB_CLK_OUT_SHIFT	kern/e1000_hw.h	859;"	d
E1000_MANC_SMB_DATA_IN	kern/e1000_hw.h	854;"	d
E1000_MANC_SMB_DATA_OUT	kern/e1000_hw.h	855;"	d
E1000_MANC_SMB_DATA_OUT_SHIFT	kern/e1000_hw.h	858;"	d
E1000_MANC_SMB_GNT	kern/e1000_hw.h	852;"	d
E1000_MANC_SMB_REQ	kern/e1000_hw.h	851;"	d
E1000_MANC_SNAP_EN	kern/e1000_hw.h	833;"	d
E1000_MANC_TCO_RESET	kern/e1000_hw.h	838;"	d
E1000_MCC	kern/e1000_hw.h	217;"	d
E1000_MDIC	kern/e1000_hw.h	121;"	d
E1000_MDIC_DATA_MASK	kern/e1000_hw.h	632;"	d
E1000_MDIC_ERROR	kern/e1000_hw.h	641;"	d
E1000_MDIC_INT_EN	kern/e1000_hw.h	640;"	d
E1000_MDIC_OP_READ	kern/e1000_hw.h	638;"	d
E1000_MDIC_OP_WRITE	kern/e1000_hw.h	637;"	d
E1000_MDIC_PHY_MASK	kern/e1000_hw.h	635;"	d
E1000_MDIC_PHY_SHIFT	kern/e1000_hw.h	636;"	d
E1000_MDIC_READY	kern/e1000_hw.h	639;"	d
E1000_MDIC_REG_MASK	kern/e1000_hw.h	633;"	d
E1000_MDIC_REG_SHIFT	kern/e1000_hw.h	634;"	d
E1000_MDPHYA	kern/e1000_hw.h	297;"	d
E1000_MGTPDC	kern/e1000_hw.h	250;"	d
E1000_MGTPRC	kern/e1000_hw.h	249;"	d
E1000_MGTPTC	kern/e1000_hw.h	251;"	d
E1000_MPC	kern/e1000_hw.h	214;"	d
E1000_MPRC	kern/e1000_hw.h	238;"	d
E1000_MPTC	kern/e1000_hw.h	264;"	d
E1000_MRQC	kern/e1000_hw.h	314;"	d
E1000_MTA	kern/e1000_hw.h	279;"	d
E1000_PBA	kern/e1000_hw.h	154;"	d
E1000_PBS	kern/e1000_hw.h	155;"	d
E1000_PHY_CTRL	kern/e1000_hw.h	152;"	d
E1000_PRC1023	kern/e1000_hw.h	234;"	d
E1000_PRC127	kern/e1000_hw.h	231;"	d
E1000_PRC1522	kern/e1000_hw.h	235;"	d
E1000_PRC255	kern/e1000_hw.h	232;"	d
E1000_PRC511	kern/e1000_hw.h	233;"	d
E1000_PRC64	kern/e1000_hw.h	230;"	d
E1000_PSRCTL	kern/e1000_hw.h	168;"	d
E1000_PTC1023	kern/e1000_hw.h	262;"	d
E1000_PTC127	kern/e1000_hw.h	259;"	d
E1000_PTC1522	kern/e1000_hw.h	263;"	d
E1000_PTC255	kern/e1000_hw.h	260;"	d
E1000_PTC511	kern/e1000_hw.h	261;"	d
E1000_PTC64	kern/e1000_hw.h	258;"	d
E1000_RA	kern/e1000_hw.h	280;"	d
E1000_RADV	kern/e1000_hw.h	183;"	d
E1000_RAH_AV	kern/e1000_hw.h	773;"	d
E1000_RAID	kern/e1000_hw.h	185;"	d
E1000_RCTL	kern/e1000_hw.h	134;"	d
E1000_RCTL_BAM	kern/e1000_hw.h	492;"	d
E1000_RCTL_BSEX	kern/e1000_hw.h	507;"	d
E1000_RCTL_CFI	kern/e1000_hw.h	504;"	d
E1000_RCTL_CFIEN	kern/e1000_hw.h	503;"	d
E1000_RCTL_DPF	kern/e1000_hw.h	505;"	d
E1000_RCTL_DTYP_MASK	kern/e1000_hw.h	481;"	d
E1000_RCTL_DTYP_PS	kern/e1000_hw.h	482;"	d
E1000_RCTL_EN	kern/e1000_hw.h	472;"	d
E1000_RCTL_FLXBUF_MASK	kern/e1000_hw.h	509;"	d
E1000_RCTL_FLXBUF_SHIFT	kern/e1000_hw.h	510;"	d
E1000_RCTL_LBM_MAC	kern/e1000_hw.h	478;"	d
E1000_RCTL_LBM_NO	kern/e1000_hw.h	477;"	d
E1000_RCTL_LBM_SLP	kern/e1000_hw.h	479;"	d
E1000_RCTL_LBM_TCVR	kern/e1000_hw.h	480;"	d
E1000_RCTL_LPE	kern/e1000_hw.h	476;"	d
E1000_RCTL_MDR	kern/e1000_hw.h	491;"	d
E1000_RCTL_MO_0	kern/e1000_hw.h	487;"	d
E1000_RCTL_MO_1	kern/e1000_hw.h	488;"	d
E1000_RCTL_MO_2	kern/e1000_hw.h	489;"	d
E1000_RCTL_MO_3	kern/e1000_hw.h	490;"	d
E1000_RCTL_MO_SHIFT	kern/e1000_hw.h	486;"	d
E1000_RCTL_MPE	kern/e1000_hw.h	475;"	d
E1000_RCTL_PMCF	kern/e1000_hw.h	506;"	d
E1000_RCTL_RDMTS_EIGTH	kern/e1000_hw.h	485;"	d
E1000_RCTL_RDMTS_HALF	kern/e1000_hw.h	483;"	d
E1000_RCTL_RDMTS_QUAT	kern/e1000_hw.h	484;"	d
E1000_RCTL_RST	kern/e1000_hw.h	471;"	d
E1000_RCTL_SBP	kern/e1000_hw.h	473;"	d
E1000_RCTL_SECRC	kern/e1000_hw.h	508;"	d
E1000_RCTL_SZ_1024	kern/e1000_hw.h	495;"	d
E1000_RCTL_SZ_16384	kern/e1000_hw.h	499;"	d
E1000_RCTL_SZ_2048	kern/e1000_hw.h	494;"	d
E1000_RCTL_SZ_256	kern/e1000_hw.h	497;"	d
E1000_RCTL_SZ_4096	kern/e1000_hw.h	501;"	d
E1000_RCTL_SZ_512	kern/e1000_hw.h	496;"	d
E1000_RCTL_SZ_8192	kern/e1000_hw.h	500;"	d
E1000_RCTL_UPE	kern/e1000_hw.h	474;"	d
E1000_RCTL_VFE	kern/e1000_hw.h	502;"	d
E1000_RDBAH	kern/e1000_hw.h	170;"	d
E1000_RDBAH0	kern/e1000_hw.h	176;"	d
E1000_RDBAH1	kern/e1000_hw.h	137;"	d
E1000_RDBAL	kern/e1000_hw.h	169;"	d
E1000_RDBAL0	kern/e1000_hw.h	175;"	d
E1000_RDBAL1	kern/e1000_hw.h	136;"	d
E1000_RDH	kern/e1000_hw.h	172;"	d
E1000_RDH0	kern/e1000_hw.h	178;"	d
E1000_RDH1	kern/e1000_hw.h	139;"	d
E1000_RDLEN	kern/e1000_hw.h	171;"	d
E1000_RDLEN0	kern/e1000_hw.h	177;"	d
E1000_RDLEN1	kern/e1000_hw.h	138;"	d
E1000_RDT	kern/e1000_hw.h	173;"	d
E1000_RDT0	kern/e1000_hw.h	179;"	d
E1000_RDT1	kern/e1000_hw.h	140;"	d
E1000_RDTR	kern/e1000_hw.h	174;"	d
E1000_RDTR0	kern/e1000_hw.h	180;"	d
E1000_RDTR1	kern/e1000_hw.h	135;"	d
E1000_RETA	kern/e1000_hw.h	315;"	d
E1000_RFC	kern/e1000_hw.h	246;"	d
E1000_RFCTL	kern/e1000_hw.h	278;"	d
E1000_RJC	kern/e1000_hw.h	248;"	d
E1000_RLEC	kern/e1000_hw.h	224;"	d
E1000_RNBC	kern/e1000_hw.h	244;"	d
E1000_ROC	kern/e1000_hw.h	247;"	d
E1000_RSRPD	kern/e1000_hw.h	184;"	d
E1000_RSSIM	kern/e1000_hw.h	317;"	d
E1000_RSSIR	kern/e1000_hw.h	318;"	d
E1000_RSSRK	kern/e1000_hw.h	316;"	d
E1000_RUC	kern/e1000_hw.h	245;"	d
E1000_RXCSUM	kern/e1000_hw.h	277;"	d
E1000_RXCW	kern/e1000_hw.h	143;"	d
E1000_RXDCTL	kern/e1000_hw.h	181;"	d
E1000_RXDCTL1	kern/e1000_hw.h	182;"	d
E1000_RXDEXT_STATERR_CE	kern/e1000_hw.h	761;"	d
E1000_RXDEXT_STATERR_CXE	kern/e1000_hw.h	764;"	d
E1000_RXDEXT_STATERR_IPE	kern/e1000_hw.h	766;"	d
E1000_RXDEXT_STATERR_RXE	kern/e1000_hw.h	767;"	d
E1000_RXDEXT_STATERR_SE	kern/e1000_hw.h	762;"	d
E1000_RXDEXT_STATERR_SEQ	kern/e1000_hw.h	763;"	d
E1000_RXDEXT_STATERR_TCPE	kern/e1000_hw.h	765;"	d
E1000_RXDPS_HDRSTAT_HDRLEN_MASK	kern/e1000_hw.h	770;"	d
E1000_RXDPS_HDRSTAT_HDRSP	kern/e1000_hw.h	769;"	d
E1000_RXD_ERR_CE	kern/e1000_hw.h	748;"	d
E1000_RXD_ERR_CXE	kern/e1000_hw.h	751;"	d
E1000_RXD_ERR_IPE	kern/e1000_hw.h	753;"	d
E1000_RXD_ERR_RXE	kern/e1000_hw.h	754;"	d
E1000_RXD_ERR_SE	kern/e1000_hw.h	749;"	d
E1000_RXD_ERR_SEQ	kern/e1000_hw.h	750;"	d
E1000_RXD_ERR_TCPE	kern/e1000_hw.h	752;"	d
E1000_RXD_SPC_CFI_MASK	kern/e1000_hw.h	758;"	d
E1000_RXD_SPC_CFI_SHIFT	kern/e1000_hw.h	759;"	d
E1000_RXD_SPC_PRI_MASK	kern/e1000_hw.h	756;"	d
E1000_RXD_SPC_PRI_SHIFT	kern/e1000_hw.h	757;"	d
E1000_RXD_SPC_VLAN_MASK	kern/e1000_hw.h	755;"	d
E1000_RXD_STAT_ACK	kern/e1000_hw.h	747;"	d
E1000_RXD_STAT_DD	kern/e1000_hw.h	737;"	d
E1000_RXD_STAT_EOP	kern/e1000_hw.h	738;"	d
E1000_RXD_STAT_IPCS	kern/e1000_hw.h	743;"	d
E1000_RXD_STAT_IPIDV	kern/e1000_hw.h	745;"	d
E1000_RXD_STAT_IXSM	kern/e1000_hw.h	739;"	d
E1000_RXD_STAT_PIF	kern/e1000_hw.h	744;"	d
E1000_RXD_STAT_TCPCS	kern/e1000_hw.h	742;"	d
E1000_RXD_STAT_UDPCS	kern/e1000_hw.h	741;"	d
E1000_RXD_STAT_UDPV	kern/e1000_hw.h	746;"	d
E1000_RXD_STAT_VP	kern/e1000_hw.h	740;"	d
E1000_RXERRC	kern/e1000_hw.h	213;"	d
E1000_SCC	kern/e1000_hw.h	215;"	d
E1000_SCTL	kern/e1000_hw.h	122;"	d
E1000_SEC	kern/e1000_hw.h	222;"	d
E1000_SHADOW_RAM_WORDS	kern/e1000_hw.h	627;"	d
E1000_STATUS	kern/e1000_hw.h	116;"	d
E1000_STATUS_ASDV	kern/e1000_hw.h	575;"	d
E1000_STATUS_BMC_CRYPTO	kern/e1000_hw.h	586;"	d
E1000_STATUS_BMC_LITE	kern/e1000_hw.h	587;"	d
E1000_STATUS_BMC_SKU_0	kern/e1000_hw.h	583;"	d
E1000_STATUS_BMC_SKU_1	kern/e1000_hw.h	584;"	d
E1000_STATUS_BMC_SKU_2	kern/e1000_hw.h	585;"	d
E1000_STATUS_BUS64	kern/e1000_hw.h	580;"	d
E1000_STATUS_DOCK_CI	kern/e1000_hw.h	576;"	d
E1000_STATUS_FD	kern/e1000_hw.h	561;"	d
E1000_STATUS_FUNC_0	kern/e1000_hw.h	565;"	d
E1000_STATUS_FUNC_1	kern/e1000_hw.h	566;"	d
E1000_STATUS_FUNC_MASK	kern/e1000_hw.h	563;"	d
E1000_STATUS_FUNC_SHIFT	kern/e1000_hw.h	564;"	d
E1000_STATUS_FUSE_8	kern/e1000_hw.h	589;"	d
E1000_STATUS_FUSE_9	kern/e1000_hw.h	590;"	d
E1000_STATUS_GIO_MASTER_ENABLE	kern/e1000_hw.h	577;"	d
E1000_STATUS_LAN_INIT_DONE	kern/e1000_hw.h	573;"	d
E1000_STATUS_LU	kern/e1000_hw.h	562;"	d
E1000_STATUS_MTXCKOK	kern/e1000_hw.h	578;"	d
E1000_STATUS_PCI66	kern/e1000_hw.h	579;"	d
E1000_STATUS_PCIX_MODE	kern/e1000_hw.h	581;"	d
E1000_STATUS_PCIX_SPEED	kern/e1000_hw.h	582;"	d
E1000_STATUS_RGMII_ENABLE	kern/e1000_hw.h	588;"	d
E1000_STATUS_SERDES0_DIS	kern/e1000_hw.h	591;"	d
E1000_STATUS_SERDES1_DIS	kern/e1000_hw.h	592;"	d
E1000_STATUS_SPEED_10	kern/e1000_hw.h	570;"	d
E1000_STATUS_SPEED_100	kern/e1000_hw.h	571;"	d
E1000_STATUS_SPEED_1000	kern/e1000_hw.h	572;"	d
E1000_STATUS_SPEED_MASK	kern/e1000_hw.h	569;"	d
E1000_STATUS_TBIMODE	kern/e1000_hw.h	568;"	d
E1000_STATUS_TXOFF	kern/e1000_hw.h	567;"	d
E1000_STM_OPCODE	kern/e1000_hw.h	624;"	d
E1000_SWSM	kern/e1000_hw.h	307;"	d
E1000_SW_FW_SYNC	kern/e1000_hw.h	299;"	d
E1000_SYMERRS	kern/e1000_hw.h	212;"	d
E1000_TADV	kern/e1000_hw.h	200;"	d
E1000_TARC0	kern/e1000_hw.h	202;"	d
E1000_TARC1	kern/e1000_hw.h	209;"	d
E1000_TBT	kern/e1000_hw.h	147;"	d
E1000_TCTL	kern/e1000_hw.h	144;"	d
E1000_TCTL_BCE	kern/e1000_hw.h	716;"	d
E1000_TCTL_COLD	kern/e1000_hw.h	719;"	d
E1000_TCTL_CT	kern/e1000_hw.h	718;"	d
E1000_TCTL_EN	kern/e1000_hw.h	715;"	d
E1000_TCTL_EXT	kern/e1000_hw.h	145;"	d
E1000_TCTL_MULR	kern/e1000_hw.h	724;"	d
E1000_TCTL_NRTU	kern/e1000_hw.h	723;"	d
E1000_TCTL_PBE	kern/e1000_hw.h	721;"	d
E1000_TCTL_PSP	kern/e1000_hw.h	717;"	d
E1000_TCTL_RST	kern/e1000_hw.h	714;"	d
E1000_TCTL_RTLC	kern/e1000_hw.h	722;"	d
E1000_TCTL_SWXOFF	kern/e1000_hw.h	720;"	d
E1000_TDBAH	kern/e1000_hw.h	194;"	d
E1000_TDBAH1	kern/e1000_hw.h	204;"	d
E1000_TDBAL	kern/e1000_hw.h	193;"	d
E1000_TDBAL1	kern/e1000_hw.h	203;"	d
E1000_TDFH	kern/e1000_hw.h	188;"	d
E1000_TDFHS	kern/e1000_hw.h	190;"	d
E1000_TDFPC	kern/e1000_hw.h	192;"	d
E1000_TDFT	kern/e1000_hw.h	189;"	d
E1000_TDFTS	kern/e1000_hw.h	191;"	d
E1000_TDH	kern/e1000_hw.h	196;"	d
E1000_TDH1	kern/e1000_hw.h	206;"	d
E1000_TDLEN	kern/e1000_hw.h	195;"	d
E1000_TDLEN1	kern/e1000_hw.h	205;"	d
E1000_TDT	kern/e1000_hw.h	197;"	d
E1000_TDT1	kern/e1000_hw.h	207;"	d
E1000_TIDV	kern/e1000_hw.h	198;"	d
E1000_TIPG	kern/e1000_hw.h	146;"	d
E1000_TNCRS	kern/e1000_hw.h	221;"	d
E1000_TORH	kern/e1000_hw.h	253;"	d
E1000_TORL	kern/e1000_hw.h	252;"	d
E1000_TOTH	kern/e1000_hw.h	255;"	d
E1000_TOTL	kern/e1000_hw.h	254;"	d
E1000_TPR	kern/e1000_hw.h	256;"	d
E1000_TPT	kern/e1000_hw.h	257;"	d
E1000_TSCTC	kern/e1000_hw.h	266;"	d
E1000_TSCTFC	kern/e1000_hw.h	267;"	d
E1000_TSPMT	kern/e1000_hw.h	201;"	d
E1000_TXCW	kern/e1000_hw.h	142;"	d
E1000_TXDCTL	kern/e1000_hw.h	199;"	d
E1000_TXDCTL1	kern/e1000_hw.h	208;"	d
E1000_TXDMAC	kern/e1000_hw.h	186;"	d
E1000_TXD_CMD_DEXT	kern/e1000_hw.h	701;"	d
E1000_TXD_CMD_EOP	kern/e1000_hw.h	696;"	d
E1000_TXD_CMD_IC	kern/e1000_hw.h	698;"	d
E1000_TXD_CMD_IDE	kern/e1000_hw.h	703;"	d
E1000_TXD_CMD_IFCS	kern/e1000_hw.h	697;"	d
E1000_TXD_CMD_IP	kern/e1000_hw.h	709;"	d
E1000_TXD_CMD_RPS	kern/e1000_hw.h	700;"	d
E1000_TXD_CMD_RS	kern/e1000_hw.h	699;"	d
E1000_TXD_CMD_TCP	kern/e1000_hw.h	708;"	d
E1000_TXD_CMD_TSE	kern/e1000_hw.h	710;"	d
E1000_TXD_CMD_VLE	kern/e1000_hw.h	702;"	d
E1000_TXD_DTYP_C	kern/e1000_hw.h	693;"	d
E1000_TXD_DTYP_D	kern/e1000_hw.h	692;"	d
E1000_TXD_POPTS_IXSM	kern/e1000_hw.h	694;"	d
E1000_TXD_POPTS_TXSM	kern/e1000_hw.h	695;"	d
E1000_TXD_STAT_DD	kern/e1000_hw.h	704;"	d
E1000_TXD_STAT_EC	kern/e1000_hw.h	705;"	d
E1000_TXD_STAT_LC	kern/e1000_hw.h	706;"	d
E1000_TXD_STAT_TC	kern/e1000_hw.h	711;"	d
E1000_TXD_STAT_TU	kern/e1000_hw.h	707;"	d
E1000_VET	kern/e1000_hw.h	127;"	d
E1000_VFTA	kern/e1000_hw.h	281;"	d
E1000_WUC	kern/e1000_hw.h	282;"	d
E1000_WUFC	kern/e1000_hw.h	283;"	d
E1000_WUPL	kern/e1000_hw.h	289;"	d
E1000_WUPM	kern/e1000_hw.h	290;"	d
E1000_WUS	kern/e1000_hw.h	284;"	d
E1000_XOFFRXC	kern/e1000_hw.h	227;"	d
E1000_XOFFTXC	kern/e1000_hw.h	228;"	d
E1000_XONRXC	kern/e1000_hw.h	225;"	d
E1000_XONTXC	kern/e1000_hw.h	226;"	d
E1000_transmit	kern/e1000.c	/^int E1000_transmit(char* buf,int length){$/;"	f
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEPROM_CFG	kern/e1000_hw.h	663;"	d
EEPROM_CHECKSUM_REG	kern/e1000_hw.h	665;"	d
EEPROM_COMPAT	kern/e1000_hw.h	651;"	d
EEPROM_ERASE_OPCODE_MICROWIRE	kern/e1000_hw.h	646;"	d
EEPROM_EWDS_OPCODE_MICROWIRE	kern/e1000_hw.h	648;"	d
EEPROM_EWEN_OPCODE_MICROWIRE	kern/e1000_hw.h	647;"	d
EEPROM_FLASH_VERSION	kern/e1000_hw.h	664;"	d
EEPROM_ID_LED_SETTINGS	kern/e1000_hw.h	652;"	d
EEPROM_INIT_3GIO_3	kern/e1000_hw.h	660;"	d
EEPROM_INIT_CONTROL1_REG	kern/e1000_hw.h	656;"	d
EEPROM_INIT_CONTROL2_REG	kern/e1000_hw.h	657;"	d
EEPROM_INIT_CONTROL3_PORT_A	kern/e1000_hw.h	662;"	d
EEPROM_INIT_CONTROL3_PORT_B	kern/e1000_hw.h	659;"	d
EEPROM_PHY_CLASS_WORD	kern/e1000_hw.h	655;"	d
EEPROM_READ_OPCODE_MICROWIRE	kern/e1000_hw.h	644;"	d
EEPROM_SERDES_AMPLITUDE	kern/e1000_hw.h	654;"	d
EEPROM_SUM	kern/e1000_hw.h	862;"	d
EEPROM_SWDEF_PINS_CTRL_PORT_0	kern/e1000_hw.h	661;"	d
EEPROM_SWDEF_PINS_CTRL_PORT_1	kern/e1000_hw.h	658;"	d
EEPROM_VERSION	kern/e1000_hw.h	653;"	d
EEPROM_WRITE_OPCODE_MICROWIRE	kern/e1000_hw.h	645;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon4
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon4
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon4
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon4
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon4
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	96;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon5
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	= 12,	\/\/ Bad path$/;"	e	enum:__anon5
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon5
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon5
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	= 13,	\/\/ File already exists$/;"	e	enum:__anon5
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon5
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon5
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	= 10,	\/\/ Too many files are open$/;"	e	enum:__anon5
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	= 14,	\/\/ File not a valid executable$/;"	e	enum:__anon5
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	= 11, 	\/\/ File or block not found$/;"	e	enum:__anon5
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	= 15,	\/\/ Operation not supported$/;"	e	enum:__anon5
E_NO_DISK	inc/error.h	/^	E_NO_DISK	= 9,	\/\/ No free space left on disk$/;"	e	enum:__anon5
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon5
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon5
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon5
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FEXTNVM_SW_CONFIG	kern/e1000_hw.h	153;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon6
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon6
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon6
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon6
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon6
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon6
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon6
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon6
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOMEMBASE	inc/memlayout.h	145;"	d
IOMEM_PADDR	inc/memlayout.h	143;"	d
IOPHYSMEM	inc/memlayout.h	95;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	132;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	99;"	d
KSTKGAP	inc/memlayout.h	101;"	d
KSTKSIZE	inc/memlayout.h	100;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon10	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	inc/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	inc/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	inc/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	inc/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	inc/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	inc/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	inc/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOGSIZE	fs/fs.h	13;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon15
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon15
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon15
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon15
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon15
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon15
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon15
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon12
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon15
M88E1000_EXT_PHY_SPEC_CTRL	kern/e1000_hw.h	343;"	d
M88E1000_INT_ENABLE	kern/e1000_hw.h	341;"	d
M88E1000_INT_STATUS	kern/e1000_hw.h	342;"	d
M88E1000_PHY_EXT_CTRL	kern/e1000_hw.h	346;"	d
M88E1000_PHY_GEN_CONTROL	kern/e1000_hw.h	348;"	d
M88E1000_PHY_PAGE_SELECT	kern/e1000_hw.h	347;"	d
M88E1000_PHY_SPEC_CTRL	kern/e1000_hw.h	339;"	d
M88E1000_PHY_SPEC_STATUS	kern/e1000_hw.h	340;"	d
M88E1000_PHY_VCO_REG_BIT11	kern/e1000_hw.h	350;"	d
M88E1000_PHY_VCO_REG_BIT8	kern/e1000_hw.h	349;"	d
M88E1000_RX_ERR_CNTR	kern/e1000_hw.h	344;"	d
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	170;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon5
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon2	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_PHY_MULTI_PAGE_REG	kern/e1000_hw.h	336;"	d
MAX_PHY_REG_ADDRESS	kern/e1000_hw.h	335;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	15;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon11
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon34
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon35
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon35
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	42;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	140;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon10	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NBUF	fs/bio.c	5;"	d	file:
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	30;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	336;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
NO	kern/console.c	215;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon8
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon8
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon8
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon8
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon8
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon8
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon8
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon8
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon8
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon8
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon8
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon8
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon7
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon10	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	164;"	d
O_CREAT	inc/lib.h	166;"	d
O_EXCL	inc/lib.h	168;"	d
O_MKDIR	inc/lib.h	169;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	161;"	d
O_RDWR	inc/lib.h	163;"	d
O_TRUNC	inc/lib.h	167;"	d
O_WRONLY	inc/lib.h	162;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Thu Dec 1 17:59:43 EST 2011$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon20
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon20
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon21
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon21
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon20
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon21
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon21
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon20
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon13	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon13	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon13	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon13	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon13	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon13	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon13	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	135;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon12
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon12
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon12
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon12
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon12
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon12
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon12
PHY_1000T_CTRL	kern/e1000_hw.h	331;"	d
PHY_1000T_STATUS	kern/e1000_hw.h	332;"	d
PHY_AUTONEG_ADV	kern/e1000_hw.h	326;"	d
PHY_AUTONEG_EXP	kern/e1000_hw.h	328;"	d
PHY_CTRL	kern/e1000_hw.h	322;"	d
PHY_EXT_STATUS	kern/e1000_hw.h	333;"	d
PHY_ID1	kern/e1000_hw.h	324;"	d
PHY_ID2	kern/e1000_hw.h	325;"	d
PHY_LP_ABILITY	kern/e1000_hw.h	327;"	d
PHY_LP_NEXT_PAGE	kern/e1000_hw.h	330;"	d
PHY_NEXT_PAGE_TX	kern/e1000_hw.h	329;"	d
PHY_STATUS	kern/e1000_hw.h	323;"	d
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon13	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	111;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROOTDEV	fs/fs.h	15;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	63;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon7
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon7
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon7
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon7
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon7
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon7
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon7
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon7
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon7
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon7
SYS_map_kernel_page	inc/syscall.h	/^	SYS_map_kernel_page,$/;"	e	enum:__anon7
SYS_net_try_send	inc/syscall.h	/^    SYS_net_try_send,$/;"	e	enum:__anon7
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon7
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon7
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon7
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon7
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon7
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TX_DESC_RING_BASE	kern/e1000.h	25;"	d
TX_DESC_RING_LENGTH	kern/e1000.h	17;"	d
TX_DESC_RING_SIZE	kern/e1000.h	16;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	114;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	102;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	112;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	137;"	d
USTACKTOP	inc/memlayout.h	126;"	d
UTEMP	inc/memlayout.h	132;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	129;"	d
UTOP	inc/memlayout.h	121;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	110;"	d
UXSTACKTOP	inc/memlayout.h	123;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon10	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WHITESPACE	kern/monitor.c	169;"	d	file:
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_E1000_HW_H_	kern/e1000_hw.h	33;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^ _alltraps:								$/;"	l
_alltraps	obj/kern/kernel.asm	/^ _alltraps:								$/;"	l
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/evilhello2.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/writemotd.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
a	obj/kern/kernel.asm	/^		a = (a + 1) % ncpu;$/;"	d
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::__anon29
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon17	typeref:struct:netifapi_msg_msg::__anon17::__anon18
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^  addr = diskaddr(blockno);$/;"	d
addr	obj/kern/kernel.asm	/^	addr = (char*)page2kva(pp0);$/;"	d
addr	obj/net/ns.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr	obj/net/testinput.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/net/testoutput.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc	obj/fs/fs.asm	/^      alloc = 0;      \/\/ we did not allocate a block$/;"	d
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/writemotd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/writemotd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon26::__anon30
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon22::__anon25
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/writemotd.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon26::__anon33
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/writemotd.asm	/^			base = 10;$/;"	d
base	obj/user/writemotd.asm	/^			base = 16;$/;"	d
base	obj/user/writemotd.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::__anon28
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bcache	fs/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon9
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bget	fs/bio.c	/^bget(uint32_t dev, uint32_t sector)$/;"	f	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/writemotd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
binit	fs/bio.c	/^binit(void)$/;"	f
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef int bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
bread	fs/bio.c	/^bread(uint32_t dev, uint32_t sector)$/;"	f
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
brelse	fs/bio.c	/^brelse(struct buf *b)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	fs/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon9	typeref:struct:__anon9::buf	file:
buf	fs/buf.h	/^struct buf {$/;"	s
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon56	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon11
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buffer_addr	kern/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	kern/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_addr	kern/e1000_hw.h	/^    uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
busy	fs/log.c	/^  int busy;$/;"	m	struct:log	file:
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/writemotd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::__anon24
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/writemotd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char tmp[2*PGSIZE];$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/writemotd.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab2.sh	/^check () {$/;"	f
check	obj/kern/kernel.asm	/^			check = &head;$/;"	d
check	obj/kern/kernel.asm	/^			check = check->pp_link;$/;"	d
check	obj/kern/kernel.asm	/^		check = check->pp_link;$/;"	d
check	obj/kern/kernel.asm	/^	check = page_free_list;$/;"	d
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_continuous	kern/pmap.c	/^check_continuous(struct Page *pp)$/;"	f	file:
check_four_pages	kern/pmap.c	/^check_four_pages(void)$/;"	f	file:
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
checktolast	obj/kern/kernel.asm	/^		checktolast = checktolast->pp_link;$/;"	d
child	obj/user/icode.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chunck_list	kern/pmap.c	/^static struct Page chunck_list;$/;"	v	typeref:struct:Page	file:
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e1000_hw.h	/^            uint8_t cmd;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon51::__anon52
cmd	kern/e1000_hw.h	/^            uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon41::__anon42
cmd_and_length	kern/e1000_hw.h	/^    uint32_t cmd_and_length;    \/* *\/$/;"	m	struct:e1000_context_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/writemotd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon17	typeref:struct:netifapi_msg_msg::__anon17::__anon19
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon56	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/writemotd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/writemotd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon36::__anon37	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000_hw.h	/^            uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon41::__anon42
css	kern/e1000_hw.h	/^            uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon43::__anon44
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon14
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon14	typeref:struct:cstate::__anon14::ip
csum	kern/e1000_hw.h	/^    uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon22::__anon24
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello2.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/writemotd.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	fs/buf.h	/^  uchar data[512];$/;"	m	struct:buf
data	kern/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_context_desc::__anon49
data	kern/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon51
data	kern/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon53
data	kern/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon41
data	kern/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon43
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon1
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon26::__anon30
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	11;"	d	file:
debug	net/serv.c	34;"	d	file:
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/evilhello2.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/writemotd.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	fs/buf.h	/^  uint dev;$/;"	m	struct:buf
dev	fs/log.c	/^  int dev;$/;"	m	struct:log	file:
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon11
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_overflow	kern/monitor.c	/^do_overflow(void)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
doover	obj/kern/kernel.asm	/^	doover = do_overflow;$/;"	d
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/writemotd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000	kern/e1000.h	/^volatile uint8_t *e1000;				\/\/ used as extern in cpu.h like lapic$/;"	v
e1000	obj/kern/kernel.asm	/^	e1000 = (void*)(E1000IO);	\/\/used like lapic$/;"	d
e1000_context_desc	kern/e1000_hw.h	/^struct e1000_context_desc {$/;"	s
e1000_data_desc	kern/e1000_hw.h	/^struct e1000_data_desc {$/;"	s
e1000_rx_desc	kern/e1000_hw.h	/^struct e1000_rx_desc {$/;"	s
e1000_tx_desc	kern/e1000_hw.h	/^struct e1000_tx_desc {$/;"	s
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = *((uint32_t*)ebp);		$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	obj/kern/kernel.asm	/^		eip = *((uint32_t*)ebp+1);$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = NULL;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/writemotd.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envidnum	obj/net/ns.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/net/testinput.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/net/testoutput.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/user/forktree.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/user/pingpong.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/user/pingpongs.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/user/primes.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/user/spin.asm	/^	envidnum = sys_exofork();$/;"	d
envidnum	obj/user/stresssched.asm	/^	envidnum = sys_exofork();$/;"	d
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + hdr->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/evilhello2.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello2.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/writemotd.asm	/^				err = -err;$/;"	d
err	obj/user/writemotd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/writemotd.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^err:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	kern/e1000_hw.h	/^    uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon17::__anon19
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
evil	user/evilhello2.c	/^void evil()$/;"	f
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon22::__anon24
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 30 12 00       	mov    $0x123000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 30 12 f0       	mov    $0xf0123000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 39 01 00 00       	call   f0100177 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_warn>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010004d	obj/kern/kernel.asm	/^f010004d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	c7 04 24 80 7f 10 f0 	movl   $0xf0107f80,(%esp)$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 e7 43 00 00       	call   f010444b <cprintf>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	e8 a5 43 00 00       	call   f0104418 <vcprintf>$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	c7 04 24 b7 92 10 f0 	movl   $0xf01092b7,(%esp)$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	e8 cc 43 00 00       	call   f010444b <cprintf>$/;"	l
f010007f	obj/kern/kernel.asm	/^f010007f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	5b                   	pop    %ebx$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	5d                   	pop    %ebp$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	c3                   	ret    $/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085 <_panic>:$/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085:	55                   	push   %ebp$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 e5                	mov    %esp,%ebp$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	56                   	push   %esi$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	53                   	push   %ebx$/;"	l
f010008a	obj/kern/kernel.asm	/^f010008a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	83 3d 8c 5e 27 f0 00 	cmpl   $0x0,0xf0275e8c$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	75 46                	jne    f01000df <_panic+0x5a>$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	89 35 8c 5e 27 f0    	mov    %esi,0xf0275e8c$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	fa                   	cli    $/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	fc                   	cld    $/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	e8 69 6f 00 00       	call   f0107012 <cpunum>$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	c7 04 24 18 80 10 f0 	movl   $0xf0108018,(%esp)$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	e8 84 43 00 00       	call   f010444b <cprintf>$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	e8 45 43 00 00       	call   f0104418 <vcprintf>$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	c7 04 24 b7 92 10 f0 	movl   $0xf01092b7,(%esp)$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	e8 6c 43 00 00       	call   f010444b <cprintf>$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	e8 38 0a 00 00       	call   f0100b23 <monitor>$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	eb f2                	jmp    f01000df <_panic+0x5a>$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed <mp_main>:$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed:	55                   	push   %ebp$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01000f0	obj/kern/kernel.asm	/^f01000f0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	89 c2                	mov    %eax,%edx$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	77 20                	ja     f0100121 <mp_main+0x34>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	f0 $/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	00 $/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	c7 04 24 9a 7f 10 f0 	movl   $0xf0107f9a,(%esp)$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	e8 64 ff ff ff       	call   f0100085 <_panic>$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0100127	obj/kern/kernel.asm	/^f0100127:	0f 22 da             	mov    %edx,%cr3$/;"	l
f010012a	obj/kern/kernel.asm	/^f010012a:	e8 e3 6e 00 00       	call   f0107012 <cpunum>$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	c7 04 24 a6 7f 10 f0 	movl   $0xf0107fa6,(%esp)$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	e8 0c 43 00 00       	call   f010444b <cprintf>$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	e8 ea 6e 00 00       	call   f010702e <lapic_init>$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	e8 27 39 00 00       	call   f0103a70 <env_init_percpu>$/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	e8 42 43 00 00       	call   f0104490 <trap_init_percpu>$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	66 90                	xchg   %ax,%ax$/;"	l
f0100150	obj/kern/kernel.asm	/^f0100150:	e8 bd 6e 00 00       	call   f0107012 <cpunum>$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	81 c2 24 80 27 f0    	add    $0xf0278024,%edx$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	c7 04 24 80 53 12 f0 	movl   $0xf0125380,(%esp)$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	e8 63 72 00 00       	call   f01073d5 <spin_lock>$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	e8 c9 50 00 00       	call   f0105240 <sched_yield>$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177 <i386_init>:$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	55                   	push   %ebp$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	89 e5                	mov    %esp,%ebp$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	57                   	push   %edi$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	56                   	push   %esi$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	53                   	push   %ebx$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	81 ec 2c 01 00 00    	sub    $0x12c,%esp$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f0100187	obj/kern/kernel.asm	/^f0100187:	c6 45 e6 00          	movb   $0x0,-0x1a(%ebp)$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	8d bd e6 fe ff ff    	lea    -0x11a(%ebp),%edi$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	66 89 07             	mov    %ax,(%edi)$/;"	l
f010019e	obj/kern/kernel.asm	/^f010019e:	83 c7 02             	add    $0x2,%edi$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	83 ea 02             	sub    $0x2,%edx$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	89 d1                	mov    %edx,%ecx$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	74 06                	je     f01001b6 <i386_init+0x3f>$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	66 89 07             	mov    %ax,(%edi)$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	83 c7 02             	add    $0x2,%edi$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	83 e2 01             	and    $0x1,%edx$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	85 d2                	test   %edx,%edx$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	74 02                	je     f01001bf <i386_init+0x48>$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	88 07                	mov    %al,(%edi)$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	b8 04 90 2b f0       	mov    $0xf02b9004,%eax$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	2d df 46 27 f0       	sub    $0xf02746df,%eax$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	00 $/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	c7 04 24 df 46 27 f0 	movl   $0xf02746df,(%esp)$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	e8 85 67 00 00       	call   f0106966 <memset>$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	e8 33 06 00 00       	call   f0100819 <cons_init>$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	8d 45 e6             	lea    -0x1a(%ebp),%eax$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	8d 5d e7             	lea    -0x19(%ebp),%ebx$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	00 $/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	c7 04 24 60 80 10 f0 	movl   $0xf0108060,(%esp)$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	e8 43 42 00 00       	call   f010444b <cprintf>$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	0f be 45 e6          	movsbl -0x1a(%ebp),%eax$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	0f be 45 e7          	movsbl -0x19(%ebp),%eax$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	c7 04 24 bc 7f 10 f0 	movl   $0xf0107fbc,(%esp)$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	e8 27 42 00 00       	call   f010444b <cprintf>$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	00 $/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	c7 04 24 d5 7f 10 f0 	movl   $0xf0107fd5,(%esp)$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	e8 13 42 00 00       	call   f010444b <cprintf>$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	c7 44 24 08 ff 00 00 	movl   $0xff,0x8(%esp)$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	00 $/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	00 $/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	8d b5 e6 fe ff ff    	lea    -0x11a(%ebp),%esi$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	e8 10 67 00 00       	call   f0106966 <memset>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	c7 04 24 d3 7f 10 f0 	movl   $0xf0107fd3,(%esp)$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	e8 e1 41 00 00       	call   f010444b <cprintf>$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	0f be 45 e7          	movsbl -0x19(%ebp),%eax$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	c7 04 24 d8 7f 10 f0 	movl   $0xf0107fd8,(%esp)$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	e8 cd 41 00 00       	call   f010444b <cprintf>$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	c7 44 24 04 cc 6b 10 	movl   $0xf0106bcc,0x4(%esp)$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	f0 $/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	c7 04 24 e4 7f 10 f0 	movl   $0xf0107fe4,(%esp)$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	e8 b9 41 00 00       	call   f010444b <cprintf>$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	c7 44 24 04 ed 00 10 	movl   $0xf01000ed,0x4(%esp)$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	f0 $/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	c7 04 24 01 80 10 f0 	movl   $0xf0108001,(%esp)$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	e8 a5 41 00 00       	call   f010444b <cprintf>$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	e8 6a 25 00 00       	call   f0102815 <mem_init>$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	e8 ea 37 00 00       	call   f0103a9a <env_init>$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	e8 ea 44 00 00       	call   f010479f <trap_init>$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	e8 70 6a 00 00       	call   f0106d2a <mp_init>$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	e8 6f 6d 00 00       	call   f010702e <lapic_init>$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	90                   	nop$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	e8 c7 40 00 00       	call   f010438c <pic_init>$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	e8 d6 79 00 00       	call   f0107ca0 <time_init>$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	e8 38 77 00 00       	call   f0107a07 <pci_init>$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	c7 04 24 80 53 12 f0 	movl   $0xf0125380,(%esp)$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	e8 fa 70 00 00       	call   f01073d5 <spin_lock>$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	83 3d 94 5e 27 f0 07 	cmpl   $0x7,0xf0275e94$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	77 24                	ja     f0100308 <i386_init+0x191>$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	00 $/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	f0 $/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	00 $/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	c7 04 24 9a 7f 10 f0 	movl   $0xf0107f9a,(%esp)$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	e8 7d fd ff ff       	call   f0100085 <_panic>$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	b8 46 6c 10 f0       	mov    $0xf0106c46,%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	2d cc 6b 10 f0       	sub    $0xf0106bcc,%eax$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	c7 44 24 04 cc 6b 10 	movl   $0xf0106bcc,0x4(%esp)$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	f0 $/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	e8 9b 66 00 00       	call   f01069c5 <memmove>$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	6b 05 c4 83 27 f0 74 	imul   $0x74,0xf02783c4,%eax$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	05 20 80 27 f0       	add    $0xf0278020,%eax$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	3d 20 80 27 f0       	cmp    $0xf0278020,%eax$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	76 65                	jbe    f01003a2 <i386_init+0x22b>$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	bb 20 80 27 f0       	mov    $0xf0278020,%ebx$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	e8 c6 6c 00 00       	call   f0107012 <cpunum>$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	05 20 80 27 f0       	add    $0xf0278020,%eax$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	39 d8                	cmp    %ebx,%eax$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	74 34                	je     f010038c <i386_init+0x215>$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	89 f0                	mov    %esi,%eax$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	8d 80 00 10 28 f0    	lea    -0xfd7f000(%eax),%eax$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	a3 90 5e 27 f0       	mov    %eax,0xf0275e90$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	00 $/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	e8 14 6e 00 00       	call   f0107198 <lapic_startap>$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	75 f8                	jne    f0100384 <i386_init+0x20d>$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	83 c6 74             	add    $0x74,%esi$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	6b 05 c4 83 27 f0 74 	imul   $0x74,0xf02783c4,%eax$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	05 20 80 27 f0       	add    $0xf0278020,%eax$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	39 c3                	cmp    %eax,%ebx$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	72 a5                	jb     f0100347 <i386_init+0x1d0>$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	00 $/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	c7 44 24 04 c0 4f 00 	movl   $0x4fc0,0x4(%esp)$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	00 $/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	c7 04 24 74 b1 16 f0 	movl   $0xf016b174,(%esp)$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	e8 a4 3d 00 00       	call   f0104167 <env_create>$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	75 dc                	jne    f01003a7 <i386_init+0x230>$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	00 $/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	c7 44 24 04 0b 97 01 	movl   $0x1970b,0x4(%esp)$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	00 $/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	c7 04 24 25 57 1d f0 	movl   $0xf01d5725,(%esp)$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	e8 80 3d 00 00       	call   f0104167 <env_create>$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	00 $/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	c7 44 24 04 d5 b0 04 	movl   $0x4b0d5,0x4(%esp)$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	00 $/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	c7 04 24 0a 96 22 f0 	movl   $0xf022960a,(%esp)$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	e8 64 3d 00 00       	call   f0104167 <env_create>$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	e8 38 4e 00 00       	call   f0105240 <sched_yield>$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410 <delay>:$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	55                   	push   %ebp$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 e5                	mov    %esp,%ebp$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	ec                   	in     (%dx),%al$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	ec                   	in     (%dx),%al$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	ec                   	in     (%dx),%al$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	ec                   	in     (%dx),%al$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	5d                   	pop    %ebp$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	c3                   	ret    $/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e <serial_proc_data>:$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	55                   	push   %ebp$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	ec                   	in     (%dx),%al$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	89 c2                	mov    %eax,%edx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	74 09                	je     f010043c <serial_proc_data+0x1e>$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	ec                   	in     (%dx),%al$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	5d                   	pop    %ebp$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	c3                   	ret    $/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e <cons_intr>:$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	55                   	push   %ebp$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	57                   	push   %edi$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	56                   	push   %esi$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	53                   	push   %ebx$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	89 c6                	mov    %eax,%esi$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	bb 24 52 27 f0       	mov    $0xf0275224,%ebx$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	bf 20 50 27 f0       	mov    $0xf0275020,%edi$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	eb 1b                	jmp    f0100470 <cons_intr+0x32>$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	85 c0                	test   %eax,%eax$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	74 17                	je     f0100470 <cons_intr+0x32>$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	8b 13                	mov    (%ebx),%edx$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	88 04 3a             	mov    %al,(%edx,%edi,1)$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	ff d6                	call   *%esi$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	75 de                	jne    f0100455 <cons_intr+0x17>$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	5b                   	pop    %ebx$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	5e                   	pop    %esi$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	5f                   	pop    %edi$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	5d                   	pop    %ebp$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	c3                   	ret    $/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f <kbd_intr>:$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	55                   	push   %ebp$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	89 e5                	mov    %esp,%ebp$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	b8 1a 07 10 f0       	mov    $0xf010071a,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	e8 af ff ff ff       	call   f010043e <cons_intr>$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	c9                   	leave  $/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	c3                   	ret    $/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491 <serial_intr>:$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	55                   	push   %ebp$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	89 e5                	mov    %esp,%ebp$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	83 3d 04 50 27 f0 00 	cmpl   $0x0,0xf0275004$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	74 0a                	je     f01004aa <serial_intr+0x19>$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	b8 1e 04 10 f0       	mov    $0xf010041e,%eax$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	e8 94 ff ff ff       	call   f010043e <cons_intr>$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	c9                   	leave  $/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	c3                   	ret    $/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac <cons_getc>:$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	55                   	push   %ebp$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	e8 da ff ff ff       	call   f0100491 <serial_intr>$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	e8 c3 ff ff ff       	call   f010047f <kbd_intr>$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	8b 15 20 52 27 f0    	mov    0xf0275220,%edx$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	3b 15 24 52 27 f0    	cmp    0xf0275224,%edx$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	74 1e                	je     f01004ed <cons_getc+0x41>$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	0f b6 82 20 50 27 f0 	movzbl -0xfd8afe0(%edx),%eax$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	89 15 20 52 27 f0    	mov    %edx,0xf0275220$/;"	l
f01004ed	obj/kern/kernel.asm	/^f01004ed:	c9                   	leave  $/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	c3                   	ret    $/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef <getchar>:$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	55                   	push   %ebp$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	e8 b2 ff ff ff       	call   f01004ac <cons_getc>$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	85 c0                	test   %eax,%eax$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	74 f7                	je     f01004f5 <getchar+0x6>$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	c9                   	leave  $/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	c3                   	ret    $/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500 <iscons>:$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	55                   	push   %ebp$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	89 e5                	mov    %esp,%ebp$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	5d                   	pop    %ebp$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	c3                   	ret    $/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a <cons_putc>:$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	55                   	push   %ebp$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	89 e5                	mov    %esp,%ebp$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	57                   	push   %edi$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	56                   	push   %esi$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	53                   	push   %ebx$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	89 c7                	mov    %eax,%edi$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	ec                   	in     (%dx),%al$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	a8 20                	test   $0x20,%al$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	75 21                	jne    f0100540 <cons_putc+0x36>$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	e8 e2 fe ff ff       	call   f0100410 <delay>$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	89 f2                	mov    %esi,%edx$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	ec                   	in     (%dx),%al$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	a8 20                	test   $0x20,%al$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	75 0b                	jne    f0100540 <cons_putc+0x36>$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	75 e9                	jne    f0100529 <cons_putc+0x1f>$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	89 fa                	mov    %edi,%edx$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	89 f8                	mov    %edi,%eax$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	ee                   	out    %al,(%dx)$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	b2 79                	mov    $0x79,%dl$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	ec                   	in     (%dx),%al$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	84 c0                	test   %al,%al$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	78 21                	js     f0100575 <cons_putc+0x6b>$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	e8 ad fe ff ff       	call   f0100410 <delay>$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	89 f2                	mov    %esi,%edx$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	ec                   	in     (%dx),%al$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	84 c0                	test   %al,%al$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	78 0b                	js     f0100575 <cons_putc+0x6b>$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	75 e9                	jne    f010055e <cons_putc+0x54>$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010057a	obj/kern/kernel.asm	/^f010057a:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	ee                   	out    %al,(%dx)$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	ee                   	out    %al,(%dx)$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010058c	obj/kern/kernel.asm	/^f010058c:	ee                   	out    %al,(%dx)$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	89 f8                	mov    %edi,%eax$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	80 cc 07             	or     $0x7,%ah$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	f7 c7 00 ff ff ff    	test   $0xffffff00,%edi$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	89 f8                	mov    %edi,%eax$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	0f 84 89 00 00 00    	je     f0100634 <cons_putc+0x12a>$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	7f 12                	jg     f01005c2 <cons_putc+0xb8>$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	0f 85 af 00 00 00    	jne    f0100668 <cons_putc+0x15e>$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	eb 18                	jmp    f01005da <cons_putc+0xd0>$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	74 40                	je     f010060a <cons_putc+0x100>$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	0f 85 92 00 00 00    	jne    f0100668 <cons_putc+0x15e>$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	66 90                	xchg   %ax,%ax$/;"	l
f01005d8	obj/kern/kernel.asm	/^f01005d8:	eb 38                	jmp    f0100612 <cons_putc+0x108>$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	0f b7 05 10 50 27 f0 	movzwl 0xf0275010,%eax$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	66 85 c0             	test   %ax,%ax$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	0f 84 e8 00 00 00    	je     f01006d2 <cons_putc+0x1c8>$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	66 a3 10 50 27 f0    	mov    %ax,0xf0275010$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	83 cf 20             	or     $0x20,%edi$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	8b 15 0c 50 27 f0    	mov    0xf027500c,%edx$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	eb 7b                	jmp    f0100685 <cons_putc+0x17b>$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	66 83 05 10 50 27 f0 	addw   $0x50,0xf0275010$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	50 $/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	0f b7 05 10 50 27 f0 	movzwl 0xf0275010,%eax$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	66 c1 e8 06          	shr    $0x6,%ax$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	66 a3 10 50 27 f0    	mov    %ax,0xf0275010$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	eb 51                	jmp    f0100685 <cons_putc+0x17b>$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	e8 cc fe ff ff       	call   f010050a <cons_putc>$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	e8 c2 fe ff ff       	call   f010050a <cons_putc>$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	e8 b8 fe ff ff       	call   f010050a <cons_putc>$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	e8 ae fe ff ff       	call   f010050a <cons_putc>$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	e8 a4 fe ff ff       	call   f010050a <cons_putc>$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	eb 1d                	jmp    f0100685 <cons_putc+0x17b>$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	0f b7 05 10 50 27 f0 	movzwl 0xf0275010,%eax$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	8b 15 0c 50 27 f0    	mov    0xf027500c,%edx$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	66 89 3c 4a          	mov    %di,(%edx,%ecx,2)$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	66 a3 10 50 27 f0    	mov    %ax,0xf0275010$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	66 81 3d 10 50 27 f0 	cmpw   $0x7cf,0xf0275010$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	cf 07 $/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	76 42                	jbe    f01006d2 <cons_putc+0x1c8>$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	a1 0c 50 27 f0       	mov    0xf027500c,%eax$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	00 $/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	e8 16 63 00 00       	call   f01069c5 <memmove>$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	8b 15 0c 50 27 f0    	mov    0xf027500c,%edx$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01006c0	obj/kern/kernel.asm	/^f01006c0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	75 f0                	jne    f01006ba <cons_putc+0x1b0>$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	66 83 2d 10 50 27 f0 	subw   $0x50,0xf0275010$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	50 $/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	8b 0d 08 50 27 f0    	mov    0xf0275008,%ecx$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	89 cb                	mov    %ecx,%ebx$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	89 ca                	mov    %ecx,%edx$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	ee                   	out    %al,(%dx)$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	0f b7 35 10 50 27 f0 	movzwl 0xf0275010,%esi$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	89 f0                	mov    %esi,%eax$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	89 ca                	mov    %ecx,%edx$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	ee                   	out    %al,(%dx)$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	89 da                	mov    %ebx,%edx$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	ee                   	out    %al,(%dx)$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	89 f0                	mov    %esi,%eax$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	89 ca                	mov    %ecx,%edx$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	ee                   	out    %al,(%dx)$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	5b                   	pop    %ebx$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	5e                   	pop    %esi$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	5f                   	pop    %edi$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	5d                   	pop    %ebp$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	c3                   	ret    $/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a <cputchar>:$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	55                   	push   %ebp$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	89 e5                	mov    %esp,%ebp$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	e8 f2 fd ff ff       	call   f010050a <cons_putc>$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	c9                   	leave  $/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	c3                   	ret    $/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a <kbd_proc_data>:$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	55                   	push   %ebp$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	89 e5                	mov    %esp,%ebp$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	53                   	push   %ebx$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	ec                   	in     (%dx),%al$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	a8 01                	test   $0x1,%al$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	0f 84 dd 00 00 00    	je     f0100811 <kbd_proc_data+0xf7>$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	b2 60                	mov    $0x60,%dl$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	ec                   	in     (%dx),%al$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	75 11                	jne    f010074c <kbd_proc_data+0x32>$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	83 0d 00 50 27 f0 40 	orl    $0x40,0xf0275000$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	e9 c5 00 00 00       	jmp    f0100811 <kbd_proc_data+0xf7>$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	84 c0                	test   %al,%al$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	79 35                	jns    f0100785 <kbd_proc_data+0x6b>$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	8b 15 00 50 27 f0    	mov    0xf0275000,%edx$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	89 c1                	mov    %eax,%ecx$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	83 e1 7f             	and    $0x7f,%ecx$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	f6 c2 40             	test   $0x40,%dl$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	0f 44 c1             	cmove  %ecx,%eax$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	0f b6 80 e0 80 10 f0 	movzbl -0xfef7f20(%eax),%eax$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	83 c8 40             	or     $0x40,%eax$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	f7 d0                	not    %eax$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	21 c2                	and    %eax,%edx$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	89 15 00 50 27 f0    	mov    %edx,0xf0275000$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	e9 8c 00 00 00       	jmp    f0100811 <kbd_proc_data+0xf7>$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	8b 15 00 50 27 f0    	mov    0xf0275000,%edx$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	f6 c2 40             	test   $0x40,%dl$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	74 0c                	je     f010079c <kbd_proc_data+0x82>$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	89 15 00 50 27 f0    	mov    %edx,0xf0275000$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	0f b6 90 e0 80 10 f0 	movzbl -0xfef7f20(%eax),%edx$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	0b 15 00 50 27 f0    	or     0xf0275000,%edx$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	0f b6 88 e0 81 10 f0 	movzbl -0xfef7e20(%eax),%ecx$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	31 ca                	xor    %ecx,%edx$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	89 15 00 50 27 f0    	mov    %edx,0xf0275000$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	89 d1                	mov    %edx,%ecx$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	8b 0c 8d e0 82 10 f0 	mov    -0xfef7d20(,%ecx,4),%ecx$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	0f b6 1c 01          	movzbl (%ecx,%eax,1),%ebx$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	f6 c2 08             	test   $0x8,%dl$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	74 1b                	je     f01007eb <kbd_proc_data+0xd1>$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	89 d9                	mov    %ebx,%ecx$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	8d 43 9f             	lea    -0x61(%ebx),%eax$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	77 05                	ja     f01007df <kbd_proc_data+0xc5>$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	eb 0c                	jmp    f01007eb <kbd_proc_data+0xd1>$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	83 e9 41             	sub    $0x41,%ecx$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	8d 43 20             	lea    0x20(%ebx),%eax$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	0f 46 d8             	cmovbe %eax,%ebx$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	f7 d2                	not    %edx$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	f6 c2 06             	test   $0x6,%dl$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	75 1f                	jne    f0100811 <kbd_proc_data+0xf7>$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	75 17                	jne    f0100811 <kbd_proc_data+0xf7>$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	c7 04 24 a3 80 10 f0 	movl   $0xf01080a3,(%esp)$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	e8 45 3c 00 00       	call   f010444b <cprintf>$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	ee                   	out    %al,(%dx)$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	89 d8                	mov    %ebx,%eax$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	5b                   	pop    %ebx$/;"	l
f0100817	obj/kern/kernel.asm	/^f0100817:	5d                   	pop    %ebp$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	c3                   	ret    $/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819 <cons_init>:$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	55                   	push   %ebp$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	89 e5                	mov    %esp,%ebp$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	57                   	push   %edi$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	56                   	push   %esi$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	53                   	push   %ebx$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	b8 00 80 0b f0       	mov    $0xf00b8000,%eax$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	0f b7 10             	movzwl (%eax),%edx$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	74 11                	je     f0100849 <cons_init+0x30>$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	c7 05 08 50 27 f0 b4 	movl   $0x3b4,0xf0275008$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	03 00 00 $/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	eb 16                	jmp    f010085f <cons_init+0x46>$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	c7 05 08 50 27 f0 d4 	movl   $0x3d4,0xf0275008$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	03 00 00 $/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	8b 0d 08 50 27 f0    	mov    0xf0275008,%ecx$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	89 ca                	mov    %ecx,%edx$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	ee                   	out    %al,(%dx)$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	89 ca                	mov    %ecx,%edx$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	ec                   	in     (%dx),%al$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	89 da                	mov    %ebx,%edx$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	ee                   	out    %al,(%dx)$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	89 ca                	mov    %ecx,%edx$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	ec                   	in     (%dx),%al$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	89 35 0c 50 27 f0    	mov    %esi,0xf027500c$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	09 cf                	or     %ecx,%edi$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	66 89 3d 10 50 27 f0 	mov    %di,0xf0275010$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	e8 e2 fb ff ff       	call   f010047f <kbd_intr>$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	0f b7 05 70 53 12 f0 	movzwl 0xf0125370,%eax$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	e8 6a 3a 00 00       	call   f010431b <irq_setmask_8259A>$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	89 da                	mov    %ebx,%edx$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	ee                   	out    %al,(%dx)$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	ee                   	out    %al,(%dx)$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	89 ca                	mov    %ecx,%edx$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	ee                   	out    %al,(%dx)$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	ee                   	out    %al,(%dx)$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	ee                   	out    %al,(%dx)$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	ee                   	out    %al,(%dx)$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	ee                   	out    %al,(%dx)$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	ec                   	in     (%dx),%al$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	3c ff                	cmp    $0xff,%al$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	0f 95 c0             	setne  %al$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	0f b6 f0             	movzbl %al,%esi$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	89 35 04 50 27 f0    	mov    %esi,0xf0275004$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	89 da                	mov    %ebx,%edx$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	ec                   	in     (%dx),%al$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	89 ca                	mov    %ecx,%edx$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	ec                   	in     (%dx),%al$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	85 f6                	test   %esi,%esi$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	75 0c                	jne    f010091a <cons_init+0x101>$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	c7 04 24 af 80 10 f0 	movl   $0xf01080af,(%esp)$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	e8 31 3b 00 00       	call   f010444b <cprintf>$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	5b                   	pop    %ebx$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	5e                   	pop    %esi$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	5f                   	pop    %edi$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	5d                   	pop    %ebp$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	c3                   	ret    $/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930 <read_eip>:$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	55                   	push   %ebp$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	89 e5                	mov    %esp,%ebp$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	5d                   	pop    %ebp$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	c3                   	ret    $/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938 <start_overflow>:$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	55                   	push   %ebp$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	89 e5                	mov    %esp,%ebp$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	57                   	push   %edi$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	56                   	push   %esi$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	53                   	push   %ebx$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	81 ec 3c 01 00 00    	sub    $0x13c,%esp$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	8d bd e8 fe ff ff    	lea    -0x118(%ebp),%edi$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	b9 40 00 00 00       	mov    $0x40,%ecx$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	8d 95 e8 fe ff ff    	lea    -0x118(%ebp),%edx$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	c6 04 02 20          	movb   $0x20,(%edx,%eax,1)$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	75 f2                	jne    f010095c <start_overflow+0x24>$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	8d 45 04             	lea    0x4(%ebp),%eax$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	89 e8                	mov    %ebp,%eax$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	c7 85 d8 fe ff ff fa 	movl   $0xf01009fa,-0x128(%ebp)$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	09 10 f0 $/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	8d bd e8 fe ff ff    	lea    -0x118(%ebp),%edi$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	8d 43 03             	lea    0x3(%ebx),%eax$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	85 db                	test   %ebx,%ebx$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	0f 49 c3             	cmovns %ebx,%eax$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecx$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	8b b4 85 d8 fe ff ff 	mov    -0x128(%ebp,%eax,4),%esi$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	d3 ee                	shr    %cl,%esi$/;"	d
f01009a5	obj/kern/kernel.asm	/^f01009a5:	81 e6 ff 00 00 00    	and    $0xff,%esi$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	c6 84 35 e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%esi,1)$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	00 $/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	01 d8                	add    %ebx,%eax$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	c7 04 24 d3 7f 10 f0 	movl   $0xf0107fd3,(%esp)$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	e8 7c 3a 00 00       	call   f010444b <cprintf>$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	c6 84 35 e8 fe ff ff 	movb   $0x20,-0x118(%ebp,%esi,1)$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	20 $/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	75 ab                	jne    f010098a <start_overflow+0x52>$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	81 c4 3c 01 00 00    	add    $0x13c,%esp$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	5b                   	pop    %ebx$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	5e                   	pop    %esi$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	5f                   	pop    %edi$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	5d                   	pop    %ebp$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	c3                   	ret    $/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea <overflow_me>:$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	55                   	push   %ebp$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	e8 43 ff ff ff       	call   f0100938 <start_overflow>$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	c9                   	leave  $/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	c3                   	ret    $/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7 <do_overflow>:$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	55                   	push   %ebp$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	c7 04 24 f0 82 10 f0 	movl   $0xf01082f0,(%esp)$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	e8 42 3a 00 00       	call   f010444b <cprintf>$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	c9                   	leave  $/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	c3                   	ret    $/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b <mon_kerninfo>:$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	55                   	push   %ebp$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	c7 04 24 02 83 10 f0 	movl   $0xf0108302,(%esp)$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	e8 2e 3a 00 00       	call   f010444b <cprintf>$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	00 $/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	f0 $/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	c7 04 24 cc 83 10 f0 	movl   $0xf01083cc,(%esp)$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	e8 12 3a 00 00       	call   f010444b <cprintf>$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	c7 44 24 08 65 7f 10 	movl   $0x107f65,0x8(%esp)$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	00 $/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	c7 44 24 04 65 7f 10 	movl   $0xf0107f65,0x4(%esp)$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	f0 $/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	c7 04 24 f0 83 10 f0 	movl   $0xf01083f0,(%esp)$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	e8 f6 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	c7 44 24 08 df 46 27 	movl   $0x2746df,0x8(%esp)$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	00 $/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	c7 44 24 04 df 46 27 	movl   $0xf02746df,0x4(%esp)$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	f0 $/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	c7 04 24 14 84 10 f0 	movl   $0xf0108414,(%esp)$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	e8 da 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	c7 44 24 08 04 90 2b 	movl   $0x2b9004,0x8(%esp)$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	00 $/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	c7 44 24 04 04 90 2b 	movl   $0xf02b9004,0x4(%esp)$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	f0 $/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	c7 04 24 38 84 10 f0 	movl   $0xf0108438,(%esp)$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	e8 be 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	b8 03 94 2b f0       	mov    $0xf02b9403,%eax$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	85 c0                	test   %eax,%eax$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	c7 04 24 5c 84 10 f0 	movl   $0xf010845c,(%esp)$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	e8 96 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	c9                   	leave  $/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	c3                   	ret    $/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc <mon_help>:$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	55                   	push   %ebp$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	89 e5                	mov    %esp,%ebp$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	a1 64 85 10 f0       	mov    0xf0108564,%eax$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	a1 60 85 10 f0       	mov    0xf0108560,%eax$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	c7 04 24 1b 83 10 f0 	movl   $0xf010831b,(%esp)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	e8 6b 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	a1 70 85 10 f0       	mov    0xf0108570,%eax$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	a1 6c 85 10 f0       	mov    0xf010856c,%eax$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	c7 04 24 1b 83 10 f0 	movl   $0xf010831b,(%esp)$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	e8 4d 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	a1 7c 85 10 f0       	mov    0xf010857c,%eax$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	a1 78 85 10 f0       	mov    0xf0108578,%eax$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	c7 04 24 1b 83 10 f0 	movl   $0xf010831b,(%esp)$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	e8 2f 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	c9                   	leave  $/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	c3                   	ret    $/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23 <monitor>:$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	55                   	push   %ebp$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	57                   	push   %edi$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	56                   	push   %esi$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	53                   	push   %ebx$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	c7 04 24 88 84 10 f0 	movl   $0xf0108488,(%esp)$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	e8 13 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	c7 04 24 ac 84 10 f0 	movl   $0xf01084ac,(%esp)$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	e8 07 39 00 00       	call   f010444b <cprintf>$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	74 0b                	je     f0100b55 <monitor+0x32>$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	e8 b6 3a 00 00       	call   f010460b <print_trapframe>$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	c7 04 24 24 83 10 f0 	movl   $0xf0108324,(%esp)$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	e8 4f 5b 00 00       	call   f01066b0 <readline>$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	85 c0                	test   %eax,%eax$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	74 ee                	je     f0100b55 <monitor+0x32>$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	eb 06                	jmp    f0100b7b <monitor+0x58>$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	84 c0                	test   %al,%al$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	74 6a                	je     f0100bec <monitor+0xc9>$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	0f be c0             	movsbl %al,%eax$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	c7 04 24 28 83 10 f0 	movl   $0xf0108328,(%esp)$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	e8 76 5d 00 00       	call   f010690b <strchr>$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	85 c0                	test   %eax,%eax$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	75 dc                	jne    f0100b75 <monitor+0x52>$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	74 4e                	je     f0100bec <monitor+0xc9>$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	75 16                	jne    f0100bb9 <monitor+0x96>$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	00 $/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	c7 04 24 2d 83 10 f0 	movl   $0xf010832d,(%esp)$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	e8 94 38 00 00       	call   f010444b <cprintf>$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	eb 9c                	jmp    f0100b55 <monitor+0x32>$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	84 c0                	test   %al,%al$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	75 0c                	jne    f0100bd3 <monitor+0xb0>$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	eb b2                	jmp    f0100b7b <monitor+0x58>$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	84 c0                	test   %al,%al$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	74 a8                	je     f0100b7b <monitor+0x58>$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	0f be c0             	movsbl %al,%eax$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	c7 04 24 28 83 10 f0 	movl   $0xf0108328,(%esp)$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	e8 25 5d 00 00       	call   f010690b <strchr>$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	85 c0                	test   %eax,%eax$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	74 df                	je     f0100bc9 <monitor+0xa6>$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	eb 8f                	jmp    f0100b7b <monitor+0x58>$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	00 $/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	85 f6                	test   %esi,%esi$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	0f 84 59 ff ff ff    	je     f0100b55 <monitor+0x32>$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	bb 60 85 10 f0       	mov    $0xf0108560,%ebx$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	e8 7e 5c 00 00       	call   f0106895 <strcmp>$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	85 c0                	test   %eax,%eax$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	75 23                	jne    f0100c3e <monitor+0x11b>$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	6b ff 0c             	imul   $0xc,%edi,%edi$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	ff 97 68 85 10 f0    	call   *-0xfef7a98(%edi)$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	85 c0                	test   %eax,%eax$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	78 28                	js     f0100c61 <monitor+0x13e>$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	e9 17 ff ff ff       	jmp    f0100b55 <monitor+0x32>$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	83 ff 03             	cmp    $0x3,%edi$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	75 bd                	jne    f0100c06 <monitor+0xe3>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	c7 04 24 4a 83 10 f0 	movl   $0xf010834a,(%esp)$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	e8 ef 37 00 00       	call   f010444b <cprintf>$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	e9 f4 fe ff ff       	jmp    f0100b55 <monitor+0x32>$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	5b                   	pop    %ebx$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	5e                   	pop    %esi$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	5f                   	pop    %edi$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	5d                   	pop    %ebp$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	c3                   	ret    $/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69 <mon_backtrace>:$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	55                   	push   %ebp$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	57                   	push   %edi$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	56                   	push   %esi$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	53                   	push   %ebx$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	89 eb                	mov    %ebp,%ebx$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	e8 b7 fc ff ff       	call   f0100930 <read_eip>$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	89 c7                	mov    %eax,%edi$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	c7 44 24 08 05 00 00 	movl   $0x5,0x8(%esp)$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	00 $/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	00 $/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	8d 45 bc             	lea    -0x44(%ebp),%eax$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	e8 d0 5c 00 00       	call   f0106966 <memset>$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	c7 04 24 60 83 10 f0 	movl   $0xf0108360,(%esp)$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	e8 a9 37 00 00       	call   f010444b <cprintf>$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	8d 75 bc             	lea    -0x44(%ebp),%esi$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	c7 04 24 d4 84 10 f0 	movl   $0xf01084d4,(%esp)$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	e8 6f 37 00 00       	call   f010444b <cprintf>$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	e8 23 50 00 00       	call   f0105d0e <debuginfo_eip>$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	2b 7d e0             	sub    -0x20(%ebp),%edi$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	c7 04 24 72 83 10 f0 	movl   $0xf0108372,(%esp)$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	e8 38 37 00 00       	call   f010444b <cprintf>$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	8b 7b 04             	mov    0x4(%ebx),%edi$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	8b 54 83 08          	mov    0x8(%ebx,%eax,4),%edx$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	89 14 86             	mov    %edx,(%esi,%eax,4)$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	75 f1                	jne    f0100d1d <mon_backtrace+0xb4>$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	85 db                	test   %ebx,%ebx$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	0f 85 71 ff ff ff    	jne    f0100ca5 <mon_backtrace+0x3c>$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	e8 b1 fc ff ff       	call   f01009ea <overflow_me>$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	c7 04 24 81 83 10 f0 	movl   $0xf0108381,(%esp)$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	e8 06 37 00 00       	call   f010444b <cprintf>$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	5b                   	pop    %ebx$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	5e                   	pop    %esi$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	5f                   	pop    %edi$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	5d                   	pop    %ebp$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	c3                   	ret    $/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60 <boot_alloc>:$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	55                   	push   %ebp$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	89 c2                	mov    %eax,%edx$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	83 3d 28 52 27 f0 00 	cmpl   $0x0,0xf0275228$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	75 0f                	jne    f0100d7d <boot_alloc+0x1d>$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	b8 03 a0 2b f0       	mov    $0xf02ba003,%eax$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	a3 28 52 27 f0       	mov    %eax,0xf0275228$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	a1 28 52 27 f0       	mov    0xf0275228,%eax$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	8d 14 10             	lea    (%eax,%edx,1),%edx$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	89 15 28 52 27 f0    	mov    %edx,0xf0275228$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	5d                   	pop    %ebp$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	c3                   	ret    $/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97 <page_free>:$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	55                   	push   %ebp$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	75 0d                	jne    f0100db1 <page_free+0x1a>$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	8b 15 30 52 27 f0    	mov    0xf0275230,%edx$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	89 10                	mov    %edx,(%eax)$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	a3 30 52 27 f0       	mov    %eax,0xf0275230$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	5d                   	pop    %ebp$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	c3                   	ret    $/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3 <page_free_4pages>:$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	55                   	push   %ebp$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	53                   	push   %ebx$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	85 c0                	test   %eax,%eax$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	75 2d                	jne    f0100dee <page_free_4pages+0x3b>$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	eb 20                	jmp    f0100de3 <page_free_4pages+0x30>$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	8b 15 34 52 27 f0    	mov    0xf0275234,%edx$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	89 11                	mov    %edx,(%ecx)$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	8b 18                	mov    (%eax),%ebx$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	e8 c2 ff ff ff       	call   f0100d97 <page_free>$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	89 d8                	mov    %ebx,%eax$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	85 db                	test   %ebx,%ebx$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	75 f0                	jne    f0100dcb <page_free_4pages+0x18>$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	89 1d 34 52 27 f0    	mov    %ebx,0xf0275234$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	eb 05                	jmp    f0100de8 <page_free_4pages+0x35>$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	5b                   	pop    %ebx$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	5d                   	pop    %ebp$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	c3                   	ret    $/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	8b 10                	mov    (%eax),%edx$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	85 d2                	test   %edx,%edx$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	74 ef                	je     f0100de3 <page_free_4pages+0x30>$/;"	l
f0100df4	obj/kern/kernel.asm	/^f0100df4:	8b 12                	mov    (%edx),%edx$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	85 d2                	test   %edx,%edx$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	74 e9                	je     f0100de3 <page_free_4pages+0x30>$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	85 c9                	test   %ecx,%ecx$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	75 c3                	jne    f0100dc3 <page_free_4pages+0x10>$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	eb e1                	jmp    f0100de3 <page_free_4pages+0x30>$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02 <page_decref>:$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	55                   	push   %ebp$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	0f b7 50 04          	movzwl 0x4(%eax),%edx$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	66 85 d2             	test   %dx,%dx$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	75 08                	jne    f0100e23 <page_decref+0x21>$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	e8 74 ff ff ff       	call   f0100d97 <page_free>$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	c9                   	leave  $/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	c3                   	ret    $/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25 <tlb_invalidate>:$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	55                   	push   %ebp$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	e8 e2 61 00 00       	call   f0107012 <cpunum>$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	83 b8 28 80 27 f0 00 	cmpl   $0x0,-0xfd87fd8(%eax)$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	74 16                	je     f0100e52 <tlb_invalidate+0x2d>$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	e8 d1 61 00 00       	call   f0107012 <cpunum>$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	8b 90 28 80 27 f0    	mov    -0xfd87fd8(%eax),%edx$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	39 42 60             	cmp    %eax,0x60(%edx)$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	75 06                	jne    f0100e58 <tlb_invalidate+0x33>$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	0f 01 38             	invlpg (%eax)$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	c9                   	leave  $/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	c3                   	ret    $/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a <check_va2pa>:$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	55                   	push   %ebp$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	89 d1                	mov    %edx,%ecx$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	a8 01                	test   $0x1,%al$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	74 4d                	je     f0100eb9 <check_va2pa+0x5f>$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	3b 0d 94 5e 27 f0    	cmp    0xf0275e94,%ecx$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	72 20                	jb     f0100e9e <check_va2pa+0x44>$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	f0 $/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	c7 44 24 04 2c 04 00 	movl   $0x42c,0x4(%esp)$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	00 $/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	e8 e7 f1 ff ff       	call   f0100085 <_panic>$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	a8 01                	test   $0x1,%al$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	74 07                	je     f0100eb9 <check_va2pa+0x5f>$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	eb 05                	jmp    f0100ebe <check_va2pa+0x64>$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	c9                   	leave  $/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	c3                   	ret    $/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0 <nvram_read>:$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	55                   	push   %ebp$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	e8 0a 34 00 00       	call   f01042e0 <mc146818_read>$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	89 c6                	mov    %eax,%esi$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	e8 fd 33 00 00       	call   f01042e0 <mc146818_read>$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	09 f0                	or     %esi,%eax$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	89 ec                	mov    %ebp,%esp$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	5d                   	pop    %ebp$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	c3                   	ret    $/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2 <check_page_free_list>:$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	55                   	push   %ebp$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	57                   	push   %edi$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	56                   	push   %esi$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	53                   	push   %ebx$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	19 f6                	sbb    %esi,%esi$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	8b 1d 30 52 27 f0    	mov    0xf0275230,%ebx$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	85 db                	test   %ebx,%ebx$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	75 1c                	jne    f0100f2f <check_page_free_list+0x3d>$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	c7 44 24 08 84 85 10 	movl   $0xf0108584,0x8(%esp)$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	f0 $/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	c7 44 24 04 58 03 00 	movl   $0x358,0x4(%esp)$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	00 $/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	e8 56 f1 ff ff       	call   f0100085 <_panic>$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	85 c0                	test   %eax,%eax$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	74 52                	je     f0100f85 <check_page_free_list+0x93>$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	8b 0d 9c 5e 27 f0    	mov    0xf0275e9c,%ecx$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	29 c8                	sub    %ecx,%eax$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	39 c6                	cmp    %eax,%esi$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	0f 96 c0             	setbe  %al$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	89 1a                	mov    %ebx,(%edx)$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	85 db                	test   %ebx,%ebx$/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	75 de                	jne    f0100f45 <check_page_free_list+0x53>$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	89 10                	mov    %edx,(%eax)$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	89 1d 30 52 27 f0    	mov    %ebx,0xf0275230$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	85 db                	test   %ebx,%ebx$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	74 67                	je     f0100fec <check_page_free_list+0xfa>$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	89 c2                	mov    %eax,%edx$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	39 d6                	cmp    %edx,%esi$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	76 4a                	jbe    f0100fe6 <check_page_free_list+0xf4>$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	89 c2                	mov    %eax,%edx$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	72 20                	jb     f0100fc9 <check_page_free_list+0xd7>$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	f0 $/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	00 $/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	e8 bc f0 ff ff       	call   f0100085 <_panic>$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	00 $/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	00 $/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	e8 80 59 00 00       	call   f0106966 <memset>$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	85 db                	test   %ebx,%ebx$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	75 99                	jne    f0100f85 <check_page_free_list+0x93>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	e8 6a fd ff ff       	call   f0100d60 <boot_alloc>$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	8b 15 30 52 27 f0    	mov    0xf0275230,%edx$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	85 d2                	test   %edx,%edx$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	0f 84 3c 02 00 00    	je     f0101243 <check_page_free_list+0x351>$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	8b 1d 9c 5e 27 f0    	mov    0xf0275e9c,%ebx$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	39 da                	cmp    %ebx,%edx$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	72 51                	jb     f0101062 <check_page_free_list+0x170>$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	39 c2                	cmp    %eax,%edx$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	73 68                	jae    f010108b <check_page_free_list+0x199>$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	89 d0                	mov    %edx,%eax$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	29 d8                	sub    %ebx,%eax$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	a8 07                	test   $0x7,%al$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	0f 85 86 00 00 00    	jne    f01010b8 <check_page_free_list+0x1c6>$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	85 c0                	test   %eax,%eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	0f 84 a6 00 00 00    	je     f01010e6 <check_page_free_list+0x1f4>$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	0f 84 c6 00 00 00    	je     f0101111 <check_page_free_list+0x21f>$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	0f 85 0a 01 00 00    	jne    f0101160 <check_page_free_list+0x26e>$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	66 90                	xchg   %ax,%ax$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	e9 df 00 00 00       	jmp    f010113c <check_page_free_list+0x24a>$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	73 24                	jae    f0101086 <check_page_free_list+0x194>$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	c7 44 24 0c bb 8c 10 	movl   $0xf0108cbb,0xc(%esp)$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	f0 $/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	f0 $/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	c7 44 24 04 73 03 00 	movl   $0x373,0x4(%esp)$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	00 $/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	e8 ff ef ff ff       	call   f0100085 <_panic>$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	72 24                	jb     f01010af <check_page_free_list+0x1bd>$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	c7 44 24 0c dc 8c 10 	movl   $0xf0108cdc,0xc(%esp)$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	f0 $/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	f0 $/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	c7 44 24 04 74 03 00 	movl   $0x374,0x4(%esp)$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	00 $/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	e8 d6 ef ff ff       	call   f0100085 <_panic>$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	89 d0                	mov    %edx,%eax$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	a8 07                	test   $0x7,%al$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	74 24                	je     f01010dc <check_page_free_list+0x1ea>$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	c7 44 24 0c a8 85 10 	movl   $0xf01085a8,0xc(%esp)$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	f0 $/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	f0 $/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	c7 44 24 04 75 03 00 	movl   $0x375,0x4(%esp)$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	00 $/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	e8 a9 ef ff ff       	call   f0100085 <_panic>$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	85 c0                	test   %eax,%eax$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	75 24                	jne    f010110a <check_page_free_list+0x218>$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	c7 44 24 0c f0 8c 10 	movl   $0xf0108cf0,0xc(%esp)$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	f0 $/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	f0 $/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	c7 44 24 04 78 03 00 	movl   $0x378,0x4(%esp)$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	00 $/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	e8 7b ef ff ff       	call   f0100085 <_panic>$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	75 24                	jne    f0101135 <check_page_free_list+0x243>$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	c7 44 24 0c 01 8d 10 	movl   $0xf0108d01,0xc(%esp)$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	f0 $/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	f0 $/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	c7 44 24 04 79 03 00 	movl   $0x379,0x4(%esp)$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	00 $/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	e8 50 ef ff ff       	call   f0100085 <_panic>$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	75 31                	jne    f010116d <check_page_free_list+0x27b>$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	c7 44 24 0c dc 85 10 	movl   $0xf01085dc,0xc(%esp)$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	f0 $/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	f0 $/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	c7 44 24 04 7a 03 00 	movl   $0x37a,0x4(%esp)$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	00 $/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	e8 25 ef ff ff       	call   f0100085 <_panic>$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101172	obj/kern/kernel.asm	/^f0101172:	75 24                	jne    f0101198 <check_page_free_list+0x2a6>$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	c7 44 24 0c 1a 8d 10 	movl   $0xf0108d1a,0xc(%esp)$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	f0 $/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	f0 $/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	c7 44 24 04 7b 03 00 	movl   $0x37b,0x4(%esp)$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	00 $/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	e8 ed ee ff ff       	call   f0100085 <_panic>$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	89 c1                	mov    %eax,%ecx$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	76 59                	jbe    f01011fa <check_page_free_list+0x308>$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	89 c3                	mov    %eax,%ebx$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	77 20                	ja     f01011cb <check_page_free_list+0x2d9>$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	f0 $/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	00 $/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	e8 ba ee ff ff       	call   f0100085 <_panic>$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	76 24                	jbe    f01011fa <check_page_free_list+0x308>$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	c7 44 24 0c 00 86 10 	movl   $0xf0108600,0xc(%esp)$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	f0 $/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	f0 $/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	c7 44 24 04 7c 03 00 	movl   $0x37c,0x4(%esp)$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	00 $/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	e8 8b ee ff ff       	call   f0100085 <_panic>$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	75 24                	jne    f0101225 <check_page_free_list+0x333>$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	c7 44 24 0c 34 8d 10 	movl   $0xf0108d34,0xc(%esp)$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	f0 $/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	f0 $/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	c7 44 24 04 7e 03 00 	movl   $0x37e,0x4(%esp)$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	00 $/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	e8 60 ee ff ff       	call   f0100085 <_panic>$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	77 05                	ja     f0101232 <check_page_free_list+0x340>$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	eb 03                	jmp    f0101235 <check_page_free_list+0x343>$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	8b 12                	mov    (%edx),%edx$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	85 d2                	test   %edx,%edx$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	0f 85 1e fe ff ff    	jne    f010105d <check_page_free_list+0x16b>$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	85 ff                	test   %edi,%edi$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	7f 24                	jg     f0101267 <check_page_free_list+0x375>$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	c7 44 24 0c 51 8d 10 	movl   $0xf0108d51,0xc(%esp)$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	f0 $/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	f0 $/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	c7 44 24 04 86 03 00 	movl   $0x386,0x4(%esp)$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	00 $/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	e8 1e ee ff ff       	call   f0100085 <_panic>$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	85 f6                	test   %esi,%esi$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	7f 24                	jg     f010128f <check_page_free_list+0x39d>$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	c7 44 24 0c 63 8d 10 	movl   $0xf0108d63,0xc(%esp)$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	f0 $/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	f0 $/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	c7 44 24 04 87 03 00 	movl   $0x387,0x4(%esp)$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	00 $/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	e8 f6 ed ff ff       	call   f0100085 <_panic>$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	5b                   	pop    %ebx$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	5e                   	pop    %esi$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	5f                   	pop    %edi$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	5d                   	pop    %ebp$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	c3                   	ret    $/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297 <page_init>:$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	55                   	push   %ebp$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	89 e5                	mov    %esp,%ebp$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	57                   	push   %edi$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	56                   	push   %esi$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	53                   	push   %ebx$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	77 1c                	ja     f01012c6 <page_init+0x2f>$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	c7 44 24 08 48 86 10 	movl   $0xf0108648,0x8(%esp)$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	f0 $/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	00 $/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	e8 bf ed ff ff       	call   f0100085 <_panic>$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	c7 05 30 52 27 f0 00 	movl   $0x0,0xf0275230$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	00 00 00 $/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	85 c0                	test   %eax,%eax$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	0f 85 a4 00 00 00    	jne    f010137c <page_init+0xe5>$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	e9 b6 00 00 00       	jmp    f0101393 <page_init+0xfc>$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	8d 34 dd 00 00 00 00 	lea    0x0(,%ebx,8),%esi$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	a1 9c 5e 27 f0       	mov    0xf0275e9c,%eax$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	66 c7 44 30 04 00 00 	movw   $0x0,0x4(%eax,%esi,1)$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	85 db                	test   %ebx,%ebx$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	74 71                	je     f0101365 <page_init+0xce>$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	89 f0                	mov    %esi,%eax$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	74 65                	je     f0101365 <page_init+0xce>$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	3d ff ff 09 00       	cmp    $0x9ffff,%eax$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	76 4b                	jbe    f0101355 <page_init+0xbe>$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	72 29                	jb     f010133e <page_init+0xa7>$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	89 3d 30 52 27 f0    	mov    %edi,0xf0275230$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	f0 $/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	00 $/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	e8 47 ed ff ff       	call   f0100085 <_panic>$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	e8 18 fa ff ff       	call   f0100d60 <boot_alloc>$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	39 d0                	cmp    %edx,%eax$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	77 10                	ja     f0101365 <page_init+0xce>$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	a1 9c 5e 27 f0       	mov    0xf0275e9c,%eax$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	89 3c 30             	mov    %edi,(%eax,%esi,1)$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	89 f7                	mov    %esi,%edi$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	03 3d 9c 5e 27 f0    	add    0xf0275e9c,%edi$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	39 1d 94 5e 27 f0    	cmp    %ebx,0xf0275e94$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	0f 87 69 ff ff ff    	ja     f01012dd <page_init+0x46>$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	89 3d 30 52 27 f0    	mov    %edi,0xf0275230$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	eb 17                	jmp    f0101393 <page_init+0xfc>$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	a1 9c 5e 27 f0       	mov    0xf0275e9c,%eax$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	eb d2                	jmp    f0101365 <page_init+0xce>$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	5b                   	pop    %ebx$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	5e                   	pop    %esi$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	5f                   	pop    %edi$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	5d                   	pop    %ebp$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	c3                   	ret    $/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b <page_alloc_4pages>:$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	55                   	push   %ebp$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	89 e5                	mov    %esp,%ebp$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	57                   	push   %edi$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	56                   	push   %esi$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	53                   	push   %ebx$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	a1 30 52 27 f0       	mov    0xf0275230,%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	85 c0                	test   %eax,%eax$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	0f 84 cc 02 00 00    	je     f010169c <page_alloc_4pages+0x301>$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	8b 00                	mov    (%eax),%eax$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	85 c0                	test   %eax,%eax$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	75 fa                	jne    f01013d0 <page_alloc_4pages+0x35>$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
f01013e9	obj/kern/kernel.asm	/^f01013e9:	e9 58 01 00 00       	jmp    f0101546 <page_alloc_4pages+0x1ab>$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	89 df                	mov    %ebx,%edi$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	2b 35 9c 5e 27 f0    	sub    0xf0275e9c,%esi$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	8d 34 37             	lea    (%edi,%esi,1),%esi$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	89 f0                	mov    %esi,%eax$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	8b 15 94 5e 27 f0    	mov    0xf0275e94,%edx$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	39 d0                	cmp    %edx,%eax$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	0f 83 0f 01 00 00    	jae    f0101527 <page_alloc_4pages+0x18c>$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	81 fe ff ff 09 00    	cmp    $0x9ffff,%esi$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	76 38                	jbe    f0101458 <page_alloc_4pages+0xbd>$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	39 d0                	cmp    %edx,%eax$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	72 20                	jb     f0101444 <page_alloc_4pages+0xa9>$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	f0 $/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	c7 44 24 04 9e 01 00 	movl   $0x19e,0x4(%esp)$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	00 $/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	e8 41 ec ff ff       	call   f0100085 <_panic>$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	e8 12 f9 ff ff       	call   f0100d60 <boot_alloc>$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0101454	obj/kern/kernel.asm	/^f0101454:	39 f0                	cmp    %esi,%eax$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	77 55                	ja     f01014ad <page_alloc_4pages+0x112>$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	a1 9c 5e 27 f0       	mov    0xf0275e9c,%eax$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	29 c2                	sub    %eax,%edx$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	01 d7                	add    %edx,%edi$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	3b 3d 94 5e 27 f0    	cmp    0xf0275e94,%edi$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	72 1c                	jb     f0101491 <page_alloc_4pages+0xf6>$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	c7 44 24 08 48 86 10 	movl   $0xf0108648,0x8(%esp)$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	f0 $/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	00 $/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	e8 f4 eb ff ff       	call   f0100085 <_panic>$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	8d 04 f8             	lea    (%eax,%edi,8),%eax$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	74 14                	je     f01014ad <page_alloc_4pages+0x112>$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	66 c7 40 04 ff ff    	movw   $0xffff,0x4(%eax)$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	0f 85 43 ff ff ff    	jne    f01013ee <page_alloc_4pages+0x53>$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	eb 05                	jmp    f01014b2 <page_alloc_4pages+0x117>$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	75 75                	jne    f0101527 <page_alloc_4pages+0x18c>$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	eb 61                	jmp    f0101527 <page_alloc_4pages+0x18c>$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	89 f3                	mov    %esi,%ebx$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	2b 1d 9c 5e 27 f0    	sub    0xf0275e9c,%ebx$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	89 df                	mov    %ebx,%edi$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	89 c1                	mov    %eax,%ecx$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	2b 0d 9c 5e 27 f0    	sub    0xf0275e9c,%ecx$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	85 f6                	test   %esi,%esi$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	74 28                	je     f0101519 <page_alloc_4pages+0x17e>$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	39 f9                	cmp    %edi,%ecx$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	72 24                	jb     f0101519 <page_alloc_4pages+0x17e>$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	81 c3 00 30 00 00    	add    $0x3000,%ebx$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	72 17                	jb     f0101519 <page_alloc_4pages+0x17e>$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	39 55 b4             	cmp    %edx,-0x4c(%ebp)$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	75 0c                	jne    f0101513 <page_alloc_4pages+0x178>$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	29 f9                	sub    %edi,%ecx$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	c7 44 8d d0 00 00 00 	movl   $0x0,-0x30(%ebp,%ecx,4)$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	00 $/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	eb 06                	jmp    f0101519 <page_alloc_4pages+0x17e>$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	29 f9                	sub    %edi,%ecx$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	89 54 8d d0          	mov    %edx,-0x30(%ebp,%ecx,4)$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	8b 12                	mov    (%edx),%edx$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	85 d2                	test   %edx,%edx$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	75 08                	jne    f010152d <page_alloc_4pages+0x192>$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	eb 58                	jmp    f010157f <page_alloc_4pages+0x1e4>$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	8b 75 bc             	mov    -0x44(%ebp),%esi$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	8b 02                	mov    (%edx),%eax$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	66 83 78 04 ff       	cmpw   $0xffffffff,0x4(%eax)$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	74 90                	je     f01014c6 <page_alloc_4pages+0x12b>$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	74 40                	je     f010157f <page_alloc_4pages+0x1e4>$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	85 c0                	test   %eax,%eax$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	74 3c                	je     f010157f <page_alloc_4pages+0x1e4>$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	75 db                	jne    f0101527 <page_alloc_4pages+0x18c>$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	89 c6                	mov    %eax,%esi$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	2b 35 9c 5e 27 f0    	sub    0xf0275e9c,%esi$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	89 f0                	mov    %esi,%eax$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	8b 15 94 5e 27 f0    	mov    0xf0275e94,%edx$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	39 c2                	cmp    %eax,%edx$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	0f 87 9b fe ff ff    	ja     f0101418 <page_alloc_4pages+0x7d>$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	eb a8                	jmp    f0101527 <page_alloc_4pages+0x18c>$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	0f 84 13 01 00 00    	je     f010169c <page_alloc_4pages+0x301>$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	8b 15 9c 5e 27 f0    	mov    0xf0275e9c,%edx$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	89 c8                	mov    %ecx,%eax$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	29 d0                	sub    %edx,%eax$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	25 ff ff 0f 00       	and    $0xfffff,%eax$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	72 3f                	jb     f01015e5 <page_alloc_4pages+0x24a>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	eb 21                	jmp    f01015c9 <page_alloc_4pages+0x22e>$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	8b 15 9c 5e 27 f0    	mov    0xf0275e9c,%edx$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	29 d0                	sub    %edx,%eax$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	8d 04 30             	lea    (%eax,%esi,1),%eax$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	25 ff ff 0f 00       	and    $0xfffff,%eax$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	83 c6 01             	add    $0x1,%esi$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	72 34                	jb     f01015fd <page_alloc_4pages+0x262>$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	c7 44 24 08 48 86 10 	movl   $0xf0108648,0x8(%esp)$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	f0 $/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	00 $/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	e8 a0 ea ff ff       	call   f0100085 <_panic>$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	8d 7d d0             	lea    -0x30(%ebp),%edi$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	83 e1 01             	and    $0x1,%ecx$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	8d 1c c2             	lea    (%edx,%eax,8),%ebx$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	8b 44 b7 fc          	mov    -0x4(%edi,%esi,4),%eax$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	85 c0                	test   %eax,%eax$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	75 09                	jne    f0101611 <page_alloc_4pages+0x276>$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	8b 03                	mov    (%ebx),%eax$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	a3 30 52 27 f0       	mov    %eax,0xf0275230$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	eb 04                	jmp    f0101615 <page_alloc_4pages+0x27a>$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	8b 13                	mov    (%ebx),%edx$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	89 10                	mov    %edx,(%eax)$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	74 58                	je     f0101679 <page_alloc_4pages+0x2de>$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	89 d8                	mov    %ebx,%eax$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	89 c2                	mov    %eax,%edx$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	72 20                	jb     f010165c <page_alloc_4pages+0x2c1>$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	f0 $/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	00 $/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	e8 29 ea ff ff       	call   f0100085 <_panic>$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	00 $/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	00 $/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	e8 ed 52 00 00       	call   f0106966 <memset>$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	75 0b                	jne    f0101689 <page_alloc_4pages+0x2ee>$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	e9 1f ff ff ff       	jmp    f01015a8 <page_alloc_4pages+0x20d>$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	89 18                	mov    %ebx,(%eax)$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	83 fe 03             	cmp    $0x3,%esi$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	0f 8e 0e ff ff ff    	jle    f01015a8 <page_alloc_4pages+0x20d>$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	eb 07                	jmp    f01016a3 <page_alloc_4pages+0x308>$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	5b                   	pop    %ebx$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	5e                   	pop    %esi$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	5f                   	pop    %edi$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	5d                   	pop    %ebp$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	c3                   	ret    $/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae <page_alloc>:$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	55                   	push   %ebp$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	89 e5                	mov    %esp,%ebp$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	53                   	push   %ebx$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	8b 1d 30 52 27 f0    	mov    0xf0275230,%ebx$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	85 db                	test   %ebx,%ebx$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	74 6b                	je     f010172a <page_alloc+0x7c>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	8b 03                	mov    (%ebx),%eax$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	a3 30 52 27 f0       	mov    %eax,0xf0275230$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	74 58                	je     f0101724 <page_alloc+0x76>$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	89 c2                	mov    %eax,%edx$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	72 20                	jb     f0101707 <page_alloc+0x59>$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	f0 $/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	00 $/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	e8 7e e9 ff ff       	call   f0100085 <_panic>$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	00 $/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	00 $/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	e8 42 52 00 00       	call   f0106966 <memset>$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	89 d8                	mov    %ebx,%eax$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	5b                   	pop    %ebx$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	5d                   	pop    %ebp$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	c3                   	ret    $/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732 <pgdir_walk>:$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	55                   	push   %ebp$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	89 e5                	mov    %esp,%ebp$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	89 de                	mov    %ebx,%esi$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	8b 06                	mov    (%esi),%eax$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	a8 01                	test   $0x1,%al$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	74 47                	je     f010179f <pgdir_walk+0x6d>$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	89 c2                	mov    %eax,%edx$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	72 20                	jb     f010178a <pgdir_walk+0x58>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	f0 $/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	c7 44 24 04 59 02 00 	movl   $0x259,0x4(%esp)$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	00 $/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	e8 fb e8 ff ff       	call   f0100085 <_panic>$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	e9 a4 00 00 00       	jmp    f0101843 <pgdir_walk+0x111>$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	85 ff                	test   %edi,%edi$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	0f 84 97 00 00 00    	je     f010183e <pgdir_walk+0x10c>$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	e8 fb fe ff ff       	call   f01016ae <page_alloc>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	85 c0                	test   %eax,%eax$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	0f 84 83 00 00 00    	je     f010183e <pgdir_walk+0x10c>$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	89 c2                	mov    %eax,%edx$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	89 d0                	mov    %edx,%eax$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	72 20                	jb     f01017fb <pgdir_walk+0xc9>$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	f0 $/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	00 $/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	e8 8a e8 ff ff       	call   f0100085 <_panic>$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	77 20                	ja     f0101828 <pgdir_walk+0xf6>$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	f0 $/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	c7 44 24 04 65 02 00 	movl   $0x265,0x4(%esp)$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	00 $/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	e8 5d e8 ff ff       	call   f0100085 <_panic>$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	83 cf 07             	or     $0x7,%edi$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	09 fa                	or     %edi,%edx$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	89 16                	mov    %edx,(%esi)$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	89 da                	mov    %ebx,%edx$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	81 e2 fc 0f 00 00    	and    $0xffc,%edx$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	01 d0                	add    %edx,%eax$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	eb 05                	jmp    f0101843 <pgdir_walk+0x111>$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	89 ec                	mov    %ebp,%esp$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	5d                   	pop    %ebp$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	c3                   	ret    $/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850 <user_mem_check>:$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	55                   	push   %ebp$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	89 e5                	mov    %esp,%ebp$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	57                   	push   %edi$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	56                   	push   %esi$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	53                   	push   %ebx$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	89 c2                	mov    %eax,%edx$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	83 cf 05             	or     $0x5,%edi$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	39 d0                	cmp    %edx,%eax$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	77 61                	ja     f01018d5 <user_mem_check+0x85>$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	89 c3                	mov    %eax,%ebx$/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	76 17                	jbe    f0101894 <user_mem_check+0x44>$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	eb 08                	jmp    f0101887 <user_mem_check+0x37>$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	76 0d                	jbe    f0101894 <user_mem_check+0x44>$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	89 1d 3c 52 27 f0    	mov    %ebx,0xf027523c$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	eb 46                	jmp    f01018da <user_mem_check+0x8a>$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	00 $/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	e8 87 fe ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	85 c0                	test   %eax,%eax$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	74 08                	je     f01018b7 <user_mem_check+0x67>$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	8b 00                	mov    (%eax),%eax$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	21 f8                	and    %edi,%eax$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	39 c7                	cmp    %eax,%edi$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	74 0d                	je     f01018c4 <user_mem_check+0x74>$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	89 1d 3c 52 27 f0    	mov    %ebx,0xf027523c$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	eb 16                	jmp    f01018da <user_mem_check+0x8a>$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	73 aa                	jae    f010187f <user_mem_check+0x2f>$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	5b                   	pop    %ebx$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	5e                   	pop    %esi$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	5f                   	pop    %edi$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	5d                   	pop    %ebp$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	c3                   	ret    $/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2 <user_mem_assert>:$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	55                   	push   %ebp$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	53                   	push   %ebx$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	83 c8 04             	or     $0x4,%eax$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	e8 44 ff ff ff       	call   f0101850 <user_mem_check>$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	85 c0                	test   %eax,%eax$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	79 24                	jns    f0101934 <user_mem_assert+0x52>$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	a1 3c 52 27 f0       	mov    0xf027523c,%eax$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	c7 04 24 68 86 10 f0 	movl   $0xf0108668,(%esp)$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	e8 1f 2b 00 00       	call   f010444b <cprintf>$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	e8 9d 25 00 00       	call   f0103ed1 <env_destroy>$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	5b                   	pop    %ebx$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	5d                   	pop    %ebp$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	c3                   	ret    $/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a <page_lookup>:$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	55                   	push   %ebp$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	89 e5                	mov    %esp,%ebp$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	53                   	push   %ebx$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	00 $/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	e8 d4 fd ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	85 c0                	test   %eax,%eax$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	74 38                	je     f010199f <page_lookup+0x65>$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	85 db                	test   %ebx,%ebx$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	74 02                	je     f010196d <page_lookup+0x33>$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	89 03                	mov    %eax,(%ebx)$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	8b 10                	mov    (%eax),%edx$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	72 1c                	jb     f0101996 <page_lookup+0x5c>$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	c7 44 24 08 48 86 10 	movl   $0xf0108648,0x8(%esp)$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	f0 $/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	00 $/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	e8 ef e6 ff ff       	call   f0100085 <_panic>$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	03 15 9c 5e 27 f0    	add    0xf0275e9c,%edx$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	89 d0                	mov    %edx,%eax$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	83 c4 14             	add    $0x14,%esp$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	5b                   	pop    %ebx$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	5d                   	pop    %ebp$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	c3                   	ret    $/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7 <page_remove>:$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	55                   	push   %ebp$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	e8 6e ff ff ff       	call   f010193a <page_lookup>$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	85 c0                	test   %eax,%eax$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	74 1d                	je     f01019ed <page_remove+0x46>$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	e8 21 f4 ff ff       	call   f0100e02 <page_decref>$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8:	e8 38 f4 ff ff       	call   f0100e25 <tlb_invalidate>$/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	89 ec                	mov    %ebp,%esp$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	5d                   	pop    %ebp$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c3                   	ret    $/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7 <page_insert>:$/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	55                   	push   %ebp$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	00 $/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	e8 0f fd ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	89 c3                	mov    %eax,%ebx$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	83 cf 01             	or     $0x1,%edi$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	85 c0                	test   %eax,%eax$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	74 19                	je     f0101a4d <page_insert+0x56>$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	74 3c                	je     f0101a75 <page_insert+0x7e>$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	e8 5c ff ff ff       	call   f01019a7 <page_remove>$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	eb 28                	jmp    f0101a75 <page_insert+0x7e>$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	e8 cf fc ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	89 c3                	mov    %eax,%ebx$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	85 c0                	test   %eax,%eax$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	75 0c                	jne    f0101a75 <page_insert+0x7e>$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	66 83 6e 04 01       	subw   $0x1,0x4(%esi)$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	eb 15                	jmp    f0101a8a <page_insert+0x93>$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	2b 35 9c 5e 27 f0    	sub    0xf0275e9c,%esi$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	09 f7                	or     %esi,%edi$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	89 3b                	mov    %edi,(%ebx)$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	89 ec                	mov    %ebp,%esp$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	5d                   	pop    %ebp$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	c3                   	ret    $/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97 <boot_map_region>:$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	55                   	push   %ebp$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	57                   	push   %edi$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	56                   	push   %esi$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	53                   	push   %ebx$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	74 40                	je     f0101ae9 <boot_map_region+0x52>$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	83 ce 01             	or     $0x1,%esi$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	00 $/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	8d 04 03             	lea    (%ebx,%eax,1),%eax$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101acc	obj/kern/kernel.asm	/^f0101acc:	e8 61 fc ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	09 f2                	or     %esi,%edx$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	89 10                	mov    %edx,(%eax)$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	39 5d 10             	cmp    %ebx,0x10(%ebp)$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	77 cb                	ja     f0101ab4 <boot_map_region+0x1d>$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	5b                   	pop    %ebx$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	5e                   	pop    %esi$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	5f                   	pop    %edi$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	5d                   	pop    %ebp$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	c3                   	ret    $/;"	l
f0101af1	obj/kern/kernel.asm	/^f0101af1 <check_page>:$/;"	l
f0101af1	obj/kern/kernel.asm	/^f0101af1:	55                   	push   %ebp$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	89 e5                	mov    %esp,%ebp$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	57                   	push   %edi$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	56                   	push   %esi$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	53                   	push   %ebx$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	e8 a8 fb ff ff       	call   f01016ae <page_alloc>$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	89 c6                	mov    %eax,%esi$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	85 c0                	test   %eax,%eax$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	75 24                	jne    f0101b30 <check_page+0x3f>$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	c7 44 24 0c 74 8d 10 	movl   $0xf0108d74,0xc(%esp)$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	f0 $/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	f0 $/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	c7 44 24 04 42 04 00 	movl   $0x442,0x4(%esp)$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	00 $/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	e8 55 e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	e8 72 fb ff ff       	call   f01016ae <page_alloc>$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	89 c7                	mov    %eax,%edi$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	85 c0                	test   %eax,%eax$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	75 24                	jne    f0101b66 <check_page+0x75>$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	c7 44 24 0c 8a 8d 10 	movl   $0xf0108d8a,0xc(%esp)$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	f0 $/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	f0 $/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	c7 44 24 04 43 04 00 	movl   $0x443,0x4(%esp)$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	00 $/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	e8 1f e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	e8 3c fb ff ff       	call   f01016ae <page_alloc>$/;"	l
f0101b72	obj/kern/kernel.asm	/^f0101b72:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	85 c0                	test   %eax,%eax$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	75 24                	jne    f0101b9c <check_page+0xab>$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	c7 44 24 0c a0 8d 10 	movl   $0xf0108da0,0xc(%esp)$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	f0 $/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	f0 $/;"	l
f0101b88	obj/kern/kernel.asm	/^f0101b88:	c7 44 24 04 44 04 00 	movl   $0x444,0x4(%esp)$/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	00 $/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	e8 e9 e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	39 fe                	cmp    %edi,%esi$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	75 24                	jne    f0101bc4 <check_page+0xd3>$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	c7 44 24 0c b6 8d 10 	movl   $0xf0108db6,0xc(%esp)$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	f0 $/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101baf	obj/kern/kernel.asm	/^f0101baf:	f0 $/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	c7 44 24 04 47 04 00 	movl   $0x447,0x4(%esp)$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	00 $/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	e8 c1 e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	39 c7                	cmp    %eax,%edi$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	74 04                	je     f0101bcc <check_page+0xdb>$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	39 c6                	cmp    %eax,%esi$/;"	l
f0101bca	obj/kern/kernel.asm	/^f0101bca:	75 24                	jne    f0101bf0 <check_page+0xff>$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	c7 44 24 0c a0 86 10 	movl   $0xf01086a0,0xc(%esp)$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	f0 $/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	f0 $/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	00 $/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	e8 95 e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	a1 30 52 27 f0       	mov    0xf0275230,%eax$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	c7 05 30 52 27 f0 00 	movl   $0x0,0xf0275230$/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	00 00 00 $/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	e8 a0 fa ff ff       	call   f01016ae <page_alloc>$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	85 c0                	test   %eax,%eax$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	74 24                	je     f0101c36 <check_page+0x145>$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	c7 44 24 0c c8 8d 10 	movl   $0xf0108dc8,0xc(%esp)$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	f0 $/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	f0 $/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	c7 44 24 04 4f 04 00 	movl   $0x44f,0x4(%esp)$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	00 $/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101c31	obj/kern/kernel.asm	/^f0101c31:	e8 4f e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	00 $/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c4d	obj/kern/kernel.asm	/^f0101c4d:	e8 e8 fc ff ff       	call   f010193a <page_lookup>$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	85 c0                	test   %eax,%eax$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	74 24                	je     f0101c7a <check_page+0x189>$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	c7 44 24 0c c0 86 10 	movl   $0xf01086c0,0xc(%esp)$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	f0 $/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	f0 $/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	c7 44 24 04 52 04 00 	movl   $0x452,0x4(%esp)$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	00 $/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	e8 0b e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	00 $/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	00 $/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	e8 5c fd ff ff       	call   f01019f7 <page_insert>$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	85 c0                	test   %eax,%eax$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	78 24                	js     f0101cc3 <check_page+0x1d2>$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	c7 44 24 0c f8 86 10 	movl   $0xf01086f8,0xc(%esp)$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	f0 $/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	f0 $/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	c7 44 24 04 55 04 00 	movl   $0x455,0x4(%esp)$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	00 $/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	e8 c2 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	e8 cc f0 ff ff       	call   f0100d97 <page_free>$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	00 $/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	00 $/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	e8 0b fd ff ff       	call   f01019f7 <page_insert>$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	85 c0                	test   %eax,%eax$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	74 24                	je     f0101d14 <check_page+0x223>$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	c7 44 24 0c 28 87 10 	movl   $0xf0108728,0xc(%esp)$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	f0 $/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	f0 $/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	c7 44 24 04 59 04 00 	movl   $0x459,0x4(%esp)$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	00 $/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	e8 71 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	89 f2                	mov    %esi,%edx$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101d34	obj/kern/kernel.asm	/^f0101d34:	74 24                	je     f0101d5a <check_page+0x269>$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	f0 $/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	f0 $/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	c7 44 24 04 5a 04 00 	movl   $0x45a,0x4(%esp)$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	00 $/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	e8 2b e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	e8 f6 f0 ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	89 fa                	mov    %edi,%edx$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	74 24                	je     f0101d9d <check_page+0x2ac>$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	c7 44 24 0c 80 87 10 	movl   $0xf0108780,0xc(%esp)$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	f0 $/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	f0 $/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	c7 44 24 04 5b 04 00 	movl   $0x45b,0x4(%esp)$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	00 $/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	e8 e8 e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	74 24                	je     f0101dc8 <check_page+0x2d7>$/;"	l
f0101da4	obj/kern/kernel.asm	/^f0101da4:	c7 44 24 0c d7 8d 10 	movl   $0xf0108dd7,0xc(%esp)$/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	f0 $/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	f0 $/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	c7 44 24 04 5c 04 00 	movl   $0x45c,0x4(%esp)$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	00 $/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	e8 bd e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	74 24                	je     f0101df3 <check_page+0x302>$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	c7 44 24 0c e8 8d 10 	movl   $0xf0108de8,0xc(%esp)$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	f0 $/;"	l
f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	f0 $/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	c7 44 24 04 5d 04 00 	movl   $0x45d,0x4(%esp)$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	00 $/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	e8 92 e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101df3	obj/kern/kernel.asm	/^f0101df3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	00 $/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	00 $/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	e8 e3 fb ff ff       	call   f01019f7 <page_insert>$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	85 c0                	test   %eax,%eax$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	74 24                	je     f0101e3c <check_page+0x34b>$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	c7 44 24 0c b0 87 10 	movl   $0xf01087b0,0xc(%esp)$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	f0 $/;"	l
f0101e20	obj/kern/kernel.asm	/^f0101e20:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	f0 $/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	c7 44 24 04 5f 04 00 	movl   $0x45f,0x4(%esp)$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	00 $/;"	l
f0101e30	obj/kern/kernel.asm	/^f0101e30:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	e8 49 e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	e8 0f f0 ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	89 da                	mov    %ebx,%edx$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	74 24                	je     f0101e84 <check_page+0x393>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	c7 44 24 0c ec 87 10 	movl   $0xf01087ec,0xc(%esp)$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	f0 $/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	f0 $/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	c7 44 24 04 60 04 00 	movl   $0x460,0x4(%esp)$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	00 $/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101e7f	obj/kern/kernel.asm	/^f0101e7f:	e8 01 e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	74 24                	je     f0101eaf <check_page+0x3be>$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	c7 44 24 0c f9 8d 10 	movl   $0xf0108df9,0xc(%esp)$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	f0 $/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	f0 $/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	c7 44 24 04 61 04 00 	movl   $0x461,0x4(%esp)$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	00 $/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	e8 d6 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	e8 f3 f7 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	85 c0                	test   %eax,%eax$/;"	l
f0101ebd	obj/kern/kernel.asm	/^f0101ebd:	74 24                	je     f0101ee3 <check_page+0x3f2>$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	c7 44 24 0c c8 8d 10 	movl   $0xf0108dc8,0xc(%esp)$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	f0 $/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	f0 $/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	c7 44 24 04 64 04 00 	movl   $0x464,0x4(%esp)$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	00 $/;"	l
f0101ed7	obj/kern/kernel.asm	/^f0101ed7:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	e8 a2 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101ee3	obj/kern/kernel.asm	/^f0101ee3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101eea	obj/kern/kernel.asm	/^f0101eea:	00 $/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	00 $/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	e8 f3 fa ff ff       	call   f01019f7 <page_insert>$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	85 c0                	test   %eax,%eax$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	74 24                	je     f0101f2c <check_page+0x43b>$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	c7 44 24 0c b0 87 10 	movl   $0xf01087b0,0xc(%esp)$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	f0 $/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	f0 $/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	c7 44 24 04 66 04 00 	movl   $0x466,0x4(%esp)$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	00 $/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	e8 59 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	e8 1f ef ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0101f44	obj/kern/kernel.asm	/^f0101f44:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	74 24                	je     f0101f72 <check_page+0x481>$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	c7 44 24 0c ec 87 10 	movl   $0xf01087ec,0xc(%esp)$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	f0 $/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	f0 $/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	c7 44 24 04 67 04 00 	movl   $0x467,0x4(%esp)$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	00 $/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	e8 13 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	74 24                	je     f0101f9d <check_page+0x4ac>$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	c7 44 24 0c f9 8d 10 	movl   $0xf0108df9,0xc(%esp)$/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	f0 $/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	f0 $/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	c7 44 24 04 68 04 00 	movl   $0x468,0x4(%esp)$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	00 $/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	e8 e8 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	e8 05 f7 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	85 c0                	test   %eax,%eax$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	74 24                	je     f0101fd1 <check_page+0x4e0>$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	c7 44 24 0c c8 8d 10 	movl   $0xf0108dc8,0xc(%esp)$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	f0 $/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	f0 $/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	c7 44 24 04 6c 04 00 	movl   $0x46c,0x4(%esp)$/;"	l
f0101fc4	obj/kern/kernel.asm	/^f0101fc4:	00 $/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	e8 b4 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	8b 00                	mov    (%eax),%eax$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	89 c2                	mov    %eax,%edx$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0101fe8	obj/kern/kernel.asm	/^f0101fe8:	72 20                	jb     f010200a <check_page+0x519>$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	f0 $/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	c7 44 24 04 6f 04 00 	movl   $0x46f,0x4(%esp)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	00 $/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	e8 7b e0 ff ff       	call   f0100085 <_panic>$/;"	l
f010200a	obj/kern/kernel.asm	/^f010200a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	00 $/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	00 $/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	e8 03 f7 ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102032	obj/kern/kernel.asm	/^f0102032:	83 c2 04             	add    $0x4,%edx$/;"	l
f0102035	obj/kern/kernel.asm	/^f0102035:	39 d0                	cmp    %edx,%eax$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	74 24                	je     f010205d <check_page+0x56c>$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	c7 44 24 0c 1c 88 10 	movl   $0xf010881c,0xc(%esp)$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	f0 $/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	f0 $/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	c7 44 24 04 70 04 00 	movl   $0x470,0x4(%esp)$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	00 $/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102058	obj/kern/kernel.asm	/^f0102058:	e8 28 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	00 $/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	00 $/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	e8 79 f9 ff ff       	call   f01019f7 <page_insert>$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	85 c0                	test   %eax,%eax$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	74 24                	je     f01020a6 <check_page+0x5b5>$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	c7 44 24 0c 5c 88 10 	movl   $0xf010885c,0xc(%esp)$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	f0 $/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	f0 $/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	c7 44 24 04 73 04 00 	movl   $0x473,0x4(%esp)$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	00 $/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	e8 df df ff ff       	call   f0100085 <_panic>$/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	e8 a5 ed ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	39 d0                	cmp    %edx,%eax$/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	74 24                	je     f01020ec <check_page+0x5fb>$/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	c7 44 24 0c ec 87 10 	movl   $0xf01087ec,0xc(%esp)$/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	f0 $/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	f0 $/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	c7 44 24 04 74 04 00 	movl   $0x474,0x4(%esp)$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	00 $/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	e8 99 df ff ff       	call   f0100085 <_panic>$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	74 24                	je     f0102117 <check_page+0x626>$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	c7 44 24 0c f9 8d 10 	movl   $0xf0108df9,0xc(%esp)$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	f0 $/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	f0 $/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	c7 44 24 04 75 04 00 	movl   $0x475,0x4(%esp)$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	00 $/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	e8 6e df ff ff       	call   f0100085 <_panic>$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	00 $/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	00 $/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f010212c	obj/kern/kernel.asm	/^f010212c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	e8 fe f5 ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	75 24                	jne    f010215d <check_page+0x66c>$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	c7 44 24 0c 9c 88 10 	movl   $0xf010889c,0xc(%esp)$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	f0 $/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	f0 $/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	c7 44 24 04 76 04 00 	movl   $0x476,0x4(%esp)$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	00 $/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	e8 28 df ff ff       	call   f0100085 <_panic>$/;"	l
f010215d	obj/kern/kernel.asm	/^f010215d:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102165	obj/kern/kernel.asm	/^f0102165:	75 24                	jne    f010218b <check_page+0x69a>$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	c7 44 24 0c 0a 8e 10 	movl   $0xf0108e0a,0xc(%esp)$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	f0 $/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	f0 $/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	c7 44 24 04 77 04 00 	movl   $0x477,0x4(%esp)$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	00 $/;"	l
f010217f	obj/kern/kernel.asm	/^f010217f:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	e8 fa de ff ff       	call   f0100085 <_panic>$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	00 $/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	00 $/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021a2	obj/kern/kernel.asm	/^f01021a2:	e8 50 f8 ff ff       	call   f01019f7 <page_insert>$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	85 c0                	test   %eax,%eax$/;"	l
f01021a9	obj/kern/kernel.asm	/^f01021a9:	78 24                	js     f01021cf <check_page+0x6de>$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	c7 44 24 0c d0 88 10 	movl   $0xf01088d0,0xc(%esp)$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	f0 $/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	f0 $/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	c7 44 24 04 7a 04 00 	movl   $0x47a,0x4(%esp)$/;"	l
f01021c2	obj/kern/kernel.asm	/^f01021c2:	00 $/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	e8 b6 de ff ff       	call   f0100085 <_panic>$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	00 $/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	00 $/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	e8 07 f8 ff ff       	call   f01019f7 <page_insert>$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	85 c0                	test   %eax,%eax$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	74 24                	je     f0102218 <check_page+0x727>$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	c7 44 24 0c 08 89 10 	movl   $0xf0108908,0xc(%esp)$/;"	l
f01021fb	obj/kern/kernel.asm	/^f01021fb:	f0 $/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	f0 $/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	c7 44 24 04 7d 04 00 	movl   $0x47d,0x4(%esp)$/;"	l
f010220b	obj/kern/kernel.asm	/^f010220b:	00 $/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	e8 6d de ff ff       	call   f0100085 <_panic>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	00 $/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	00 $/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	e8 fd f4 ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102238	obj/kern/kernel.asm	/^f0102238:	74 24                	je     f010225e <check_page+0x76d>$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	c7 44 24 0c 44 89 10 	movl   $0xf0108944,0xc(%esp)$/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	f0 $/;"	l
f0102242	obj/kern/kernel.asm	/^f0102242:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	f0 $/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	c7 44 24 04 7e 04 00 	movl   $0x47e,0x4(%esp)$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	00 $/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102259	obj/kern/kernel.asm	/^f0102259:	e8 27 de ff ff       	call   f0100085 <_panic>$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	e8 ed eb ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f010226d	obj/kern/kernel.asm	/^f010226d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	39 d0                	cmp    %edx,%eax$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	74 24                	je     f01022a4 <check_page+0x7b3>$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	c7 44 24 0c 7c 89 10 	movl   $0xf010897c,0xc(%esp)$/;"	l
f0102287	obj/kern/kernel.asm	/^f0102287:	f0 $/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	f0 $/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	c7 44 24 04 81 04 00 	movl   $0x481,0x4(%esp)$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	00 $/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	e8 e1 dd ff ff       	call   f0100085 <_panic>$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	e8 a7 eb ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022c2	obj/kern/kernel.asm	/^f01022c2:	39 d0                	cmp    %edx,%eax$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	74 24                	je     f01022ea <check_page+0x7f9>$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	c7 44 24 0c a8 89 10 	movl   $0xf01089a8,0xc(%esp)$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	f0 $/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01022d5	obj/kern/kernel.asm	/^f01022d5:	f0 $/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	c7 44 24 04 82 04 00 	movl   $0x482,0x4(%esp)$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	00 $/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	e8 9b dd ff ff       	call   f0100085 <_panic>$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	74 24                	je     f0102315 <check_page+0x824>$/;"	l
f01022f1	obj/kern/kernel.asm	/^f01022f1:	c7 44 24 0c 20 8e 10 	movl   $0xf0108e20,0xc(%esp)$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	f0 $/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	f0 $/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	c7 44 24 04 84 04 00 	movl   $0x484,0x4(%esp)$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	00 $/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	e8 70 dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	74 24                	je     f0102340 <check_page+0x84f>$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	c7 44 24 0c 31 8e 10 	movl   $0xf0108e31,0xc(%esp)$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	f0 $/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010232b	obj/kern/kernel.asm	/^f010232b:	f0 $/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	c7 44 24 04 85 04 00 	movl   $0x485,0x4(%esp)$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	00 $/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	e8 45 dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	e8 62 f3 ff ff       	call   f01016ae <page_alloc>$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	85 c0                	test   %eax,%eax$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	74 04                	je     f0102354 <check_page+0x863>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	74 24                	je     f0102378 <check_page+0x887>$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	c7 44 24 0c d8 89 10 	movl   $0xf01089d8,0xc(%esp)$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	f0 $/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	f0 $/;"	l
f0102364	obj/kern/kernel.asm	/^f0102364:	c7 44 24 04 88 04 00 	movl   $0x488,0x4(%esp)$/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	00 $/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	e8 0d dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	00 $/;"	l
f0102380	obj/kern/kernel.asm	/^f0102380:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102385	obj/kern/kernel.asm	/^f0102385:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	e8 1a f6 ff ff       	call   f01019a7 <page_remove>$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	e8 be ea ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	74 24                	je     f01023c5 <check_page+0x8d4>$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	c7 44 24 0c fc 89 10 	movl   $0xf01089fc,0xc(%esp)$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	f0 $/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	f0 $/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	c7 44 24 04 8c 04 00 	movl   $0x48c,0x4(%esp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	00 $/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	e8 c0 dc ff ff       	call   f0100085 <_panic>$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	e8 86 ea ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01023d7	obj/kern/kernel.asm	/^f01023d7:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	39 d0                	cmp    %edx,%eax$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	74 24                	je     f010240b <check_page+0x91a>$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	c7 44 24 0c a8 89 10 	movl   $0xf01089a8,0xc(%esp)$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	f0 $/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	f0 $/;"	l
f01023f7	obj/kern/kernel.asm	/^f01023f7:	c7 44 24 04 8d 04 00 	movl   $0x48d,0x4(%esp)$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	00 $/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	e8 7a dc ff ff       	call   f0100085 <_panic>$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	74 24                	je     f0102436 <check_page+0x945>$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	c7 44 24 0c d7 8d 10 	movl   $0xf0108dd7,0xc(%esp)$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	f0 $/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	f0 $/;"	l
f0102422	obj/kern/kernel.asm	/^f0102422:	c7 44 24 04 8e 04 00 	movl   $0x48e,0x4(%esp)$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	00 $/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	e8 4f dc ff ff       	call   f0100085 <_panic>$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	74 24                	je     f0102461 <check_page+0x970>$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	c7 44 24 0c 31 8e 10 	movl   $0xf0108e31,0xc(%esp)$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	f0 $/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	f0 $/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	c7 44 24 04 8f 04 00 	movl   $0x48f,0x4(%esp)$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	00 $/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	e8 24 dc ff ff       	call   f0100085 <_panic>$/;"	l
f0102461	obj/kern/kernel.asm	/^f0102461:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	00 $/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	e8 31 f5 ff ff       	call   f01019a7 <page_remove>$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	e8 d5 e9 ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	74 24                	je     f01024ae <check_page+0x9bd>$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	c7 44 24 0c fc 89 10 	movl   $0xf01089fc,0xc(%esp)$/;"	l
f0102491	obj/kern/kernel.asm	/^f0102491:	f0 $/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	f0 $/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	c7 44 24 04 93 04 00 	movl   $0x493,0x4(%esp)$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	00 $/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	e8 d7 db ff ff       	call   f0100085 <_panic>$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	e8 9d e9 ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	74 24                	je     f01024e6 <check_page+0x9f5>$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	c7 44 24 0c 20 8a 10 	movl   $0xf0108a20,0xc(%esp)$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	f0 $/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	f0 $/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	c7 44 24 04 94 04 00 	movl   $0x494,0x4(%esp)$/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	00 $/;"	l
f01024da	obj/kern/kernel.asm	/^f01024da:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01024e1	obj/kern/kernel.asm	/^f01024e1:	e8 9f db ff ff       	call   f0100085 <_panic>$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	74 24                	je     f0102511 <check_page+0xa20>$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	c7 44 24 0c 42 8e 10 	movl   $0xf0108e42,0xc(%esp)$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	f0 $/;"	l
f01024f5	obj/kern/kernel.asm	/^f01024f5:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	f0 $/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	c7 44 24 04 95 04 00 	movl   $0x495,0x4(%esp)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	00 $/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	e8 74 db ff ff       	call   f0100085 <_panic>$/;"	l
f0102511	obj/kern/kernel.asm	/^f0102511:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	74 24                	je     f010253c <check_page+0xa4b>$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	c7 44 24 0c 31 8e 10 	movl   $0xf0108e31,0xc(%esp)$/;"	l
f010251f	obj/kern/kernel.asm	/^f010251f:	f0 $/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	f0 $/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	c7 44 24 04 96 04 00 	movl   $0x496,0x4(%esp)$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	00 $/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	e8 49 db ff ff       	call   f0100085 <_panic>$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	e8 66 f1 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	85 c0                	test   %eax,%eax$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	74 06                	je     f0102552 <check_page+0xa61>$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	39 c7                	cmp    %eax,%edi$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	66 90                	xchg   %ax,%ax$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	74 24                	je     f0102576 <check_page+0xa85>$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	c7 44 24 0c 48 8a 10 	movl   $0xf0108a48,0xc(%esp)$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	f0 $/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	f0 $/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	c7 44 24 04 99 04 00 	movl   $0x499,0x4(%esp)$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	00 $/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	e8 0f db ff ff       	call   f0100085 <_panic>$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	e8 2c f1 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	85 c0                	test   %eax,%eax$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	74 24                	je     f01025aa <check_page+0xab9>$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	c7 44 24 0c c8 8d 10 	movl   $0xf0108dc8,0xc(%esp)$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	f0 $/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	f0 $/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	c7 44 24 04 9c 04 00 	movl   $0x49c,0x4(%esp)$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	00 $/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	e8 db da ff ff       	call   f0100085 <_panic>$/;"	l
f01025aa	obj/kern/kernel.asm	/^f01025aa:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	8b 08                	mov    (%eax),%ecx$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	39 d1                	cmp    %edx,%ecx$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	74 24                	je     f01025ee <check_page+0xafd>$/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	f0 $/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	f0 $/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	c7 44 24 04 9f 04 00 	movl   $0x49f,0x4(%esp)$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	00 $/;"	l
f01025e2	obj/kern/kernel.asm	/^f01025e2:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	e8 97 da ff ff       	call   f0100085 <_panic>$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	74 24                	je     f010261f <check_page+0xb2e>$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	c7 44 24 0c e8 8d 10 	movl   $0xf0108de8,0xc(%esp)$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	f0 $/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	f0 $/;"	l
f010260b	obj/kern/kernel.asm	/^f010260b:	c7 44 24 04 a1 04 00 	movl   $0x4a1,0x4(%esp)$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	00 $/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	e8 66 da ff ff       	call   f0100085 <_panic>$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102628	obj/kern/kernel.asm	/^f0102628:	e8 6a e7 ff ff       	call   f0100d97 <page_free>$/;"	l
f010262d	obj/kern/kernel.asm	/^f010262d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	00 $/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	00 $/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	e8 e8 f0 ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	8b 0d 98 5e 27 f0    	mov    0xf0275e98,%ecx$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	83 c1 04             	add    $0x4,%ecx$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010265e	obj/kern/kernel.asm	/^f010265e:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f010266a	obj/kern/kernel.asm	/^f010266a:	72 23                	jb     f010268f <check_page+0xb9e>$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	f0 $/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	c7 44 24 04 a8 04 00 	movl   $0x4a8,0x4(%esp)$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	00 $/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	e8 f6 d9 ff ff       	call   f0100085 <_panic>$/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	39 d0                	cmp    %edx,%eax$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	74 24                	je     f01026c0 <check_page+0xbcf>$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	c7 44 24 0c 53 8e 10 	movl   $0xf0108e53,0xc(%esp)$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	f0 $/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01026ab	obj/kern/kernel.asm	/^f01026ab:	f0 $/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	c7 44 24 04 a9 04 00 	movl   $0x4a9,0x4(%esp)$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	00 $/;"	l
f01026b4	obj/kern/kernel.asm	/^f01026b4:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	e8 c5 d9 ff ff       	call   f0100085 <_panic>$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01026cc	obj/kern/kernel.asm	/^f01026cc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01026d8	obj/kern/kernel.asm	/^f01026d8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	89 c2                	mov    %eax,%edx$/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	72 20                	jb     f0102708 <check_page+0xc17>$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f01026f3	obj/kern/kernel.asm	/^f01026f3:	f0 $/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	00 $/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	e8 7d d9 ff ff       	call   f0100085 <_panic>$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	00 $/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	00 $/;"	l
f0102718	obj/kern/kernel.asm	/^f0102718:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010271d	obj/kern/kernel.asm	/^f010271d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	e8 41 42 00 00       	call   f0106966 <memset>$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	e8 6a e6 ff ff       	call   f0100d97 <page_free>$/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102734	obj/kern/kernel.asm	/^f0102734:	00 $/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	00 $/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	e8 e8 ef ff ff       	call   f0101732 <pgdir_walk>$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102759	obj/kern/kernel.asm	/^f0102759:	89 d0                	mov    %edx,%eax$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	72 20                	jb     f0102786 <check_page+0xc95>$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0102771	obj/kern/kernel.asm	/^f0102771:	f0 $/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	00 $/;"	l
f010277a	obj/kern/kernel.asm	/^f010277a:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0102781	obj/kern/kernel.asm	/^f0102781:	e8 ff d8 ff ff       	call   f0100085 <_panic>$/;"	l
f0102786	obj/kern/kernel.asm	/^f0102786:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	75 11                	jne    f01027a5 <check_page+0xcb4>$/;"	l
f0102794	obj/kern/kernel.asm	/^f0102794:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	74 24                	je     f01027c9 <check_page+0xcd8>$/;"	l
f01027a5	obj/kern/kernel.asm	/^f01027a5:	c7 44 24 0c 6b 8e 10 	movl   $0xf0108e6b,0xc(%esp)$/;"	l
f01027ac	obj/kern/kernel.asm	/^f01027ac:	f0 $/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	f0 $/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	c7 44 24 04 b3 04 00 	movl   $0x4b3,0x4(%esp)$/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	00 $/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	e8 bc d8 ff ff       	call   f0100085 <_panic>$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	83 c0 04             	add    $0x4,%eax$/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	39 d0                	cmp    %edx,%eax$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	75 d0                	jne    f01027a0 <check_page+0xcaf>$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01027e4	obj/kern/kernel.asm	/^f01027e4:	a3 30 52 27 f0       	mov    %eax,0xf0275230$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	e8 a6 e5 ff ff       	call   f0100d97 <page_free>$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01027f4	obj/kern/kernel.asm	/^f01027f4:	e8 9e e5 ff ff       	call   f0100d97 <page_free>$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	e8 96 e5 ff ff       	call   f0100d97 <page_free>$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	c7 04 24 82 8e 10 f0 	movl   $0xf0108e82,(%esp)$/;"	l
f0102808	obj/kern/kernel.asm	/^f0102808:	e8 3e 1c 00 00       	call   f010444b <cprintf>$/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	5b                   	pop    %ebx$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	5e                   	pop    %esi$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	5f                   	pop    %edi$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	5d                   	pop    %ebp$/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	c3                   	ret    $/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815 <mem_init>:$/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	55                   	push   %ebp$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	89 e5                	mov    %esp,%ebp$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	57                   	push   %edi$/;"	l
f0102819	obj/kern/kernel.asm	/^f0102819:	56                   	push   %esi$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	53                   	push   %ebx$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	e8 98 e6 ff ff       	call   f0100ec0 <nvram_read>$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	85 c0                	test   %eax,%eax$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	a3 2c 52 27 f0       	mov    %eax,0xf027522c$/;"	l
f010283e	obj/kern/kernel.asm	/^f010283e:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	e8 78 e6 ff ff       	call   f0100ec0 <nvram_read>$/;"	l
f0102848	obj/kern/kernel.asm	/^f0102848:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	85 c0                	test   %eax,%eax$/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0102859	obj/kern/kernel.asm	/^f0102859:	85 c0                	test   %eax,%eax$/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	74 0e                	je     f010286b <mem_init+0x56>$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	89 15 94 5e 27 f0    	mov    %edx,0xf0275e94$/;"	l
f0102869	obj/kern/kernel.asm	/^f0102869:	eb 0c                	jmp    f0102877 <mem_init+0x62>$/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	8b 15 2c 52 27 f0    	mov    0xf027522c,%edx$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	89 15 94 5e 27 f0    	mov    %edx,0xf0275e94$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	a1 2c 52 27 f0       	mov    0xf027522c,%eax$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f0102895	obj/kern/kernel.asm	/^f0102895:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	c7 04 24 6c 8a 10 f0 	movl   $0xf0108a6c,(%esp)$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	e8 a0 1b 00 00       	call   f010444b <cprintf>$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01028b0	obj/kern/kernel.asm	/^f01028b0:	e8 ab e4 ff ff       	call   f0100d60 <boot_alloc>$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	a3 98 5e 27 f0       	mov    %eax,0xf0275e98$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	00 $/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	00 $/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028cd	obj/kern/kernel.asm	/^f01028cd:	e8 94 40 00 00       	call   f0106966 <memset>$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	89 c2                	mov    %eax,%edx$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	77 20                	ja     f0102900 <mem_init+0xeb>$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	f0 $/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	00 $/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	e8 85 d7 ff ff       	call   f0100085 <_panic>$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	83 ca 05             	or     $0x5,%edx$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	e8 44 e4 ff ff       	call   f0100d60 <boot_alloc>$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	a3 9c 5e 27 f0       	mov    %eax,0xf0275e9c$/;"	l
f0102921	obj/kern/kernel.asm	/^f0102921:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	e8 35 e4 ff ff       	call   f0100d60 <boot_alloc>$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	a3 40 52 27 f0       	mov    %eax,0xf0275240$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	00 $/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	c7 04 24 e0 7f 10 f0 	movl   $0xf0107fe0,(%esp)$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	e8 07 1b 00 00       	call   f010444b <cprintf>$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	e8 4e e9 ff ff       	call   f0101297 <page_init>$/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	e8 9f e5 ff ff       	call   f0100ef2 <check_page_free_list>$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	83 3d 9c 5e 27 f0 00 	cmpl   $0x0,0xf0275e9c$/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	75 1c                	jne    f0102978 <mem_init+0x163>$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	c7 44 24 08 9b 8e 10 	movl   $0xf0108e9b,0x8(%esp)$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	f0 $/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	c7 44 24 04 98 03 00 	movl   $0x398,0x4(%esp)$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	00 $/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	e8 0d d7 ff ff       	call   f0100085 <_panic>$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	a1 30 52 27 f0       	mov    0xf0275230,%eax$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	85 c0                	test   %eax,%eax$/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	74 09                	je     f010298f <mem_init+0x17a>$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	8b 00                	mov    (%eax),%eax$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	85 c0                	test   %eax,%eax$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	75 f7                	jne    f0102986 <mem_init+0x171>$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102996	obj/kern/kernel.asm	/^f0102996:	e8 13 ed ff ff       	call   f01016ae <page_alloc>$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	89 c6                	mov    %eax,%esi$/;"	l
f010299d	obj/kern/kernel.asm	/^f010299d:	85 c0                	test   %eax,%eax$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	75 24                	jne    f01029c5 <mem_init+0x1b0>$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	c7 44 24 0c 74 8d 10 	movl   $0xf0108d74,0xc(%esp)$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	f0 $/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	f0 $/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	00 $/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	e8 c0 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	e8 dd ec ff ff       	call   f01016ae <page_alloc>$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	89 c7                	mov    %eax,%edi$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	85 c0                	test   %eax,%eax$/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	75 24                	jne    f01029fb <mem_init+0x1e6>$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	c7 44 24 0c 8a 8d 10 	movl   $0xf0108d8a,0xc(%esp)$/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	f0 $/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01029e6	obj/kern/kernel.asm	/^f01029e6:	f0 $/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f01029ee	obj/kern/kernel.asm	/^f01029ee:	00 $/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	e8 8a d6 ff ff       	call   f0100085 <_panic>$/;"	l
f01029fb	obj/kern/kernel.asm	/^f01029fb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	e8 a7 ec ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102a07	obj/kern/kernel.asm	/^f0102a07:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	85 c0                	test   %eax,%eax$/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	75 24                	jne    f0102a32 <mem_init+0x21d>$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	c7 44 24 0c a0 8d 10 	movl   $0xf0108da0,0xc(%esp)$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	f0 $/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	f0 $/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	00 $/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	e8 53 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	39 fe                	cmp    %edi,%esi$/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	75 24                	jne    f0102a5a <mem_init+0x245>$/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	c7 44 24 0c b6 8d 10 	movl   $0xf0108db6,0xc(%esp)$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	f0 $/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	f0 $/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	c7 44 24 04 a5 03 00 	movl   $0x3a5,0x4(%esp)$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	00 $/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	e8 2b d6 ff ff       	call   f0100085 <_panic>$/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	74 05                	je     f0102a64 <mem_init+0x24f>$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	75 24                	jne    f0102a88 <mem_init+0x273>$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	c7 44 24 0c a0 86 10 	movl   $0xf01086a0,0xc(%esp)$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	f0 $/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	f0 $/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	00 $/;"	l
f0102a7c	obj/kern/kernel.asm	/^f0102a7c:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	e8 fd d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	8b 15 9c 5e 27 f0    	mov    0xf0275e9c,%edx$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f0102a93	obj/kern/kernel.asm	/^f0102a93:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	89 f1                	mov    %esi,%ecx$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	29 d1                	sub    %edx,%ecx$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	39 c1                	cmp    %eax,%ecx$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	72 24                	jb     f0102ac8 <mem_init+0x2b3>$/;"	l
f0102aa4	obj/kern/kernel.asm	/^f0102aa4:	c7 44 24 0c b6 8e 10 	movl   $0xf0108eb6,0xc(%esp)$/;"	l
f0102aab	obj/kern/kernel.asm	/^f0102aab:	f0 $/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	f0 $/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	00 $/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	e8 bd d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	89 f9                	mov    %edi,%ecx$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	29 d1                	sub    %edx,%ecx$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	77 24                	ja     f0102afa <mem_init+0x2e5>$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	c7 44 24 0c d3 8e 10 	movl   $0xf0108ed3,0xc(%esp)$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	f0 $/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	f0 $/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	00 $/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	e8 8b d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	29 d1                	sub    %edx,%ecx$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	89 ca                	mov    %ecx,%edx$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	39 d0                	cmp    %edx,%eax$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	77 24                	ja     f0102b2f <mem_init+0x31a>$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	c7 44 24 0c f0 8e 10 	movl   $0xf0108ef0,0xc(%esp)$/;"	l
f0102b12	obj/kern/kernel.asm	/^f0102b12:	f0 $/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	f0 $/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	00 $/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	e8 56 d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	a1 30 52 27 f0       	mov    0xf0275230,%eax$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	c7 05 30 52 27 f0 00 	movl   $0x0,0xf0275230$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	00 00 00 $/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	e8 61 eb ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	85 c0                	test   %eax,%eax$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	74 24                	je     f0102b75 <mem_init+0x360>$/;"	l
f0102b51	obj/kern/kernel.asm	/^f0102b51:	c7 44 24 0c c8 8d 10 	movl   $0xf0108dc8,0xc(%esp)$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	f0 $/;"	l
f0102b59	obj/kern/kernel.asm	/^f0102b59:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	f0 $/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	00 $/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	e8 10 d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102b75	obj/kern/kernel.asm	/^f0102b75:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	e8 1a e2 ff ff       	call   f0100d97 <page_free>$/;"	l
f0102b7d	obj/kern/kernel.asm	/^f0102b7d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	e8 12 e2 ff ff       	call   f0100d97 <page_free>$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	e8 07 e2 ff ff       	call   f0100d97 <page_free>$/;"	l
f0102b90	obj/kern/kernel.asm	/^f0102b90:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b97	obj/kern/kernel.asm	/^f0102b97:	e8 12 eb ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102b9c	obj/kern/kernel.asm	/^f0102b9c:	89 c6                	mov    %eax,%esi$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	85 c0                	test   %eax,%eax$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	75 24                	jne    f0102bc6 <mem_init+0x3b1>$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	c7 44 24 0c 74 8d 10 	movl   $0xf0108d74,0xc(%esp)$/;"	l
f0102ba9	obj/kern/kernel.asm	/^f0102ba9:	f0 $/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	f0 $/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	00 $/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	e8 bf d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	e8 dc ea ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	89 c7                	mov    %eax,%edi$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	85 c0                	test   %eax,%eax$/;"	l
f0102bd6	obj/kern/kernel.asm	/^f0102bd6:	75 24                	jne    f0102bfc <mem_init+0x3e7>$/;"	l
f0102bd8	obj/kern/kernel.asm	/^f0102bd8:	c7 44 24 0c 8a 8d 10 	movl   $0xf0108d8a,0xc(%esp)$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	f0 $/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	f0 $/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f0102bef	obj/kern/kernel.asm	/^f0102bef:	00 $/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	e8 89 d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	e8 a6 ea ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	85 c0                	test   %eax,%eax$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	75 24                	jne    f0102c33 <mem_init+0x41e>$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	c7 44 24 0c a0 8d 10 	movl   $0xf0108da0,0xc(%esp)$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	f0 $/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	f0 $/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	00 $/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	e8 52 d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	39 fe                	cmp    %edi,%esi$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	75 24                	jne    f0102c5b <mem_init+0x446>$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	c7 44 24 0c b6 8d 10 	movl   $0xf0108db6,0xc(%esp)$/;"	l
f0102c3e	obj/kern/kernel.asm	/^f0102c3e:	f0 $/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	f0 $/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	c7 44 24 04 bb 03 00 	movl   $0x3bb,0x4(%esp)$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	00 $/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	e8 2a d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	3b 7d e4             	cmp    -0x1c(%ebp),%edi$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	74 05                	je     f0102c65 <mem_init+0x450>$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	75 24                	jne    f0102c89 <mem_init+0x474>$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	c7 44 24 0c a0 86 10 	movl   $0xf01086a0,0xc(%esp)$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	f0 $/;"	l
f0102c6d	obj/kern/kernel.asm	/^f0102c6d:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	f0 $/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	00 $/;"	l
f0102c7d	obj/kern/kernel.asm	/^f0102c7d:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102c84	obj/kern/kernel.asm	/^f0102c84:	e8 fc d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	e8 19 ea ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102c95	obj/kern/kernel.asm	/^f0102c95:	85 c0                	test   %eax,%eax$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	74 24                	je     f0102cbd <mem_init+0x4a8>$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	c7 44 24 0c c8 8d 10 	movl   $0xf0108dc8,0xc(%esp)$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	f0 $/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	f0 $/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	00 $/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	e8 c8 d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	89 f0                	mov    %esi,%eax$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	89 c2                	mov    %eax,%edx$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	72 20                	jb     f0102cfb <mem_init+0x4e6>$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	f0 $/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0102cee	obj/kern/kernel.asm	/^f0102cee:	00 $/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	e8 8a d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	00 $/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0102d0a	obj/kern/kernel.asm	/^f0102d0a:	00 $/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102d10	obj/kern/kernel.asm	/^f0102d10:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	e8 4e 3c 00 00       	call   f0106966 <memset>$/;"	l
f0102d18	obj/kern/kernel.asm	/^f0102d18:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	e8 77 e0 ff ff       	call   f0100d97 <page_free>$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	e8 82 e9 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	85 c0                	test   %eax,%eax$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	75 24                	jne    f0102d54 <mem_init+0x53f>$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	c7 44 24 0c 0d 8f 10 	movl   $0xf0108f0d,0xc(%esp)$/;"	l
f0102d37	obj/kern/kernel.asm	/^f0102d37:	f0 $/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102d3f	obj/kern/kernel.asm	/^f0102d3f:	f0 $/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	00 $/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	e8 31 d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	39 c6                	cmp    %eax,%esi$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	74 24                	je     f0102d7c <mem_init+0x567>$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	c7 44 24 0c 2b 8f 10 	movl   $0xf0108f2b,0xc(%esp)$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	f0 $/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	f0 $/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	c7 44 24 04 c3 03 00 	movl   $0x3c3,0x4(%esp)$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	00 $/;"	l
f0102d70	obj/kern/kernel.asm	/^f0102d70:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102d77	obj/kern/kernel.asm	/^f0102d77:	e8 09 d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	89 d0                	mov    %edx,%eax$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102d90	obj/kern/kernel.asm	/^f0102d90:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	72 20                	jb     f0102db8 <mem_init+0x5a3>$/;"	l
f0102d98	obj/kern/kernel.asm	/^f0102d98:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	f0 $/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	00 $/;"	l
f0102dac	obj/kern/kernel.asm	/^f0102dac:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	e8 cd d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	75 11                	jne    f0102dd2 <mem_init+0x5bd>$/;"	l
f0102dc1	obj/kern/kernel.asm	/^f0102dc1:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0102dd0	obj/kern/kernel.asm	/^f0102dd0:	74 24                	je     f0102df6 <mem_init+0x5e1>$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	c7 44 24 0c 3b 8f 10 	movl   $0xf0108f3b,0xc(%esp)$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	f0 $/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	f0 $/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	00 $/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	e8 8f d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102df6	obj/kern/kernel.asm	/^f0102df6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102df9	obj/kern/kernel.asm	/^f0102df9:	39 d0                	cmp    %edx,%eax$/;"	l
f0102dfb	obj/kern/kernel.asm	/^f0102dfb:	75 d0                	jne    f0102dcd <mem_init+0x5b8>$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	a3 30 52 27 f0       	mov    %eax,0xf0275230$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102e08	obj/kern/kernel.asm	/^f0102e08:	e8 8a df ff ff       	call   f0100d97 <page_free>$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	e8 82 df ff ff       	call   f0100d97 <page_free>$/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	e8 77 df ff ff       	call   f0100d97 <page_free>$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	a1 30 52 27 f0       	mov    0xf0275230,%eax$/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	85 c0                	test   %eax,%eax$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	74 09                	je     f0102e32 <mem_init+0x61d>$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	8b 00                	mov    (%eax),%eax$/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	85 c0                	test   %eax,%eax$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	75 f7                	jne    f0102e29 <mem_init+0x614>$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	85 db                	test   %ebx,%ebx$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	74 24                	je     f0102e5a <mem_init+0x645>$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	c7 44 24 0c 45 8f 10 	movl   $0xf0108f45,0xc(%esp)$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	f0 $/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102e45	obj/kern/kernel.asm	/^f0102e45:	f0 $/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	00 $/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	e8 2b d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	c7 04 24 a8 8a 10 f0 	movl   $0xf0108aa8,(%esp)$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	e8 e5 15 00 00       	call   f010444b <cprintf>$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	e8 86 ec ff ff       	call   f0101af1 <check_page>$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	e8 37 e8 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	89 c3                	mov    %eax,%ebx$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	e8 29 e8 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0102e85	obj/kern/kernel.asm	/^f0102e85:	89 c6                	mov    %eax,%esi$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	85 db                	test   %ebx,%ebx$/;"	l
f0102e89	obj/kern/kernel.asm	/^f0102e89:	75 24                	jne    f0102eaf <mem_init+0x69a>$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	c7 44 24 0c 50 8f 10 	movl   $0xf0108f50,0xc(%esp)$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	f0 $/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	f0 $/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	c7 44 24 04 dd 04 00 	movl   $0x4dd,0x4(%esp)$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	00 $/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	e8 d6 d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	85 c0                	test   %eax,%eax$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	75 24                	jne    f0102ed7 <mem_init+0x6c2>$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	c7 44 24 0c 58 8f 10 	movl   $0xf0108f58,0xc(%esp)$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	f0 $/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	f0 $/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	c7 44 24 04 de 04 00 	movl   $0x4de,0x4(%esp)$/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	00 $/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	e8 ae d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	75 24                	jne    f0102eff <mem_init+0x6ea>$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	c7 44 24 0c 61 8f 10 	movl   $0xf0108f61,0xc(%esp)$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	f0 $/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	f0 $/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	c7 44 24 04 df 04 00 	movl   $0x4df,0x4(%esp)$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	00 $/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	e8 86 d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	e8 90 de ff ff       	call   f0100d97 <page_free>$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	e8 88 e4 ff ff       	call   f010139b <page_alloc_4pages>$/;"	l
f0102f13	obj/kern/kernel.asm	/^f0102f13:	8b 18                	mov    (%eax),%ebx$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	8b 15 9c 5e 27 f0    	mov    0xf0275e9c,%edx$/;"	l
f0102f1b	obj/kern/kernel.asm	/^f0102f1b:	89 d9                	mov    %ebx,%ecx$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	29 d1                	sub    %edx,%ecx$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	89 c7                	mov    %eax,%edi$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	29 d7                	sub    %edx,%edi$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	89 f9                	mov    %edi,%ecx$/;"	l
f0102f31	obj/kern/kernel.asm	/^f0102f31:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102f34	obj/kern/kernel.asm	/^f0102f34:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	29 cf                	sub    %ecx,%edi$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	81 ff 00 10 00 00    	cmp    $0x1000,%edi$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	75 41                	jne    f0102f82 <mem_init+0x76d>$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	8b 3b                	mov    (%ebx),%edi$/;"	l
f0102f43	obj/kern/kernel.asm	/^f0102f43:	89 fb                	mov    %edi,%ebx$/;"	l
f0102f45	obj/kern/kernel.asm	/^f0102f45:	29 d3                	sub    %edx,%ebx$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	89 d9                	mov    %ebx,%ecx$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	2b 4d e4             	sub    -0x1c(%ebp),%ecx$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	81 f9 00 10 00 00    	cmp    $0x1000,%ecx$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	75 28                	jne    f0102f82 <mem_init+0x76d>$/;"	l
f0102f5a	obj/kern/kernel.asm	/^f0102f5a:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	29 d1                	sub    %edx,%ecx$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	89 ca                	mov    %ecx,%edx$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	29 da                	sub    %ebx,%edx$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	75 12                	jne    f0102f82 <mem_init+0x76d>$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	e8 3b de ff ff       	call   f0100db3 <page_free_4pages>$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	85 c0                	test   %eax,%eax$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	74 4e                	je     f0102fca <mem_init+0x7b5>$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	eb 24                	jmp    f0102fa6 <mem_init+0x791>$/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	c7 44 24 0c 6b 8f 10 	movl   $0xf0108f6b,0xc(%esp)$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	f0 $/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	f0 $/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	c7 44 24 04 e4 04 00 	movl   $0x4e4,0x4(%esp)$/;"	l
f0102f99	obj/kern/kernel.asm	/^f0102f99:	00 $/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	e8 df d0 ff ff       	call   f0100085 <_panic>$/;"	l
f0102fa6	obj/kern/kernel.asm	/^f0102fa6:	c7 44 24 0c 80 8f 10 	movl   $0xf0108f80,0xc(%esp)$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	f0 $/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	f0 $/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	c7 44 24 04 e7 04 00 	movl   $0x4e7,0x4(%esp)$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	00 $/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	e8 bb d0 ff ff       	call   f0100085 <_panic>$/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	e8 c5 dd ff ff       	call   f0100d97 <page_free>$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	e8 bd e3 ff ff       	call   f010139b <page_alloc_4pages>$/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	89 c1                	mov    %eax,%ecx$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	2b 0d 9c 5e 27 f0    	sub    0xf0275e9c,%ecx$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	89 ca                	mov    %ecx,%edx$/;"	l
f0102fee	obj/kern/kernel.asm	/^f0102fee:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	72 20                	jb     f0103019 <mem_init+0x804>$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	f0 $/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	00 $/;"	l
f010300d	obj/kern/kernel.asm	/^f010300d:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	e8 6c d0 ff ff       	call   f0100085 <_panic>$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	80 b9 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%ecx)$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	75 11                	jne    f0103033 <mem_init+0x81e>$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	8d 91 01 00 00 f0    	lea    -0xfffffff(%ecx),%edx$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	81 e9 00 c0 ff 0f    	sub    $0xfffc000,%ecx$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	74 24                	je     f0103057 <mem_init+0x842>$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	c7 44 24 0c 96 8f 10 	movl   $0xf0108f96,0xc(%esp)$/;"	l
f010303a	obj/kern/kernel.asm	/^f010303a:	f0 $/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	f0 $/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	c7 44 24 04 f1 04 00 	movl   $0x4f1,0x4(%esp)$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	00 $/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	e8 2e d0 ff ff       	call   f0100085 <_panic>$/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	83 c2 01             	add    $0x1,%edx$/;"	l
f010305a	obj/kern/kernel.asm	/^f010305a:	39 ca                	cmp    %ecx,%edx$/;"	l
f010305c	obj/kern/kernel.asm	/^f010305c:	75 d0                	jne    f010302e <mem_init+0x819>$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	e8 4d dd ff ff       	call   f0100db3 <page_free_4pages>$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	85 c0                	test   %eax,%eax$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	74 24                	je     f010308e <mem_init+0x879>$/;"	l
f010306a	obj/kern/kernel.asm	/^f010306a:	c7 44 24 0c a3 8f 10 	movl   $0xf0108fa3,0xc(%esp)$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	f0 $/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103079	obj/kern/kernel.asm	/^f0103079:	f0 $/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	c7 44 24 04 f5 04 00 	movl   $0x4f5,0x4(%esp)$/;"	l
f0103081	obj/kern/kernel.asm	/^f0103081:	00 $/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	e8 f7 cf ff ff       	call   f0100085 <_panic>$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	c7 04 24 c8 8a 10 f0 	movl   $0xf0108ac8,(%esp)$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	e8 b1 13 00 00       	call   f010444b <cprintf>$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	c7 04 24 ba 8f 10 f0 	movl   $0xf0108fba,(%esp)$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	e8 a5 13 00 00       	call   f010444b <cprintf>$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	a1 9c 5e 27 f0       	mov    0xf0275e9c,%eax$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	89 c2                	mov    %eax,%edx$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	77 20                	ja     f01030d4 <mem_init+0x8bf>$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	f0 $/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	c7 44 24 04 b8 00 00 	movl   $0xb8,0x4(%esp)$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	00 $/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	e8 b1 cf ff ff       	call   f0100085 <_panic>$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%esp)$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	00 $/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	c7 44 24 04 00 00 00 	movl   $0xef000000,0x4(%esp)$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	ef $/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	e8 87 e9 ff ff       	call   f0101a97 <boot_map_region>$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	a1 40 52 27 f0       	mov    0xf0275240,%eax$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	77 20                	ja     f010313c <mem_init+0x927>$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	f0 $/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	c7 44 24 04 c1 00 00 	movl   $0xc1,0x4(%esp)$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	00 $/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	e8 49 cf ff ff       	call   f0100085 <_panic>$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	c7 44 24 10 05 00 00 	movl   $0x5,0x10(%esp)$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	00 $/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010314e	obj/kern/kernel.asm	/^f010314e:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	00 $/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	c7 44 24 04 00 00 c0 	movl   $0xeec00000,0x4(%esp)$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	ee $/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	e8 2c e9 ff ff       	call   f0101a97 <boot_map_region>$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	c7 04 24 c5 8f 10 f0 	movl   $0xf0108fc5,(%esp)$/;"	l
f0103172	obj/kern/kernel.asm	/^f0103172:	e8 d4 12 00 00       	call   f010444b <cprintf>$/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	c7 04 24 d4 8f 10 f0 	movl   $0xf0108fd4,(%esp)$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	e8 c8 12 00 00       	call   f010444b <cprintf>$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%esp)$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	00 $/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	00 $/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	c7 44 24 08 00 00 00 	movl   $0x10000000,0x8(%esp)$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	10 $/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	c7 44 24 04 00 00 00 	movl   $0xf0000000,0x4(%esp)$/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	f0 $/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	e8 e7 e8 ff ff       	call   f0101a97 <boot_map_region>$/;"	l
f01031b0	obj/kern/kernel.asm	/^f01031b0:	c7 04 24 e2 8f 10 f0 	movl   $0xf0108fe2,(%esp)$/;"	l
f01031b7	obj/kern/kernel.asm	/^f01031b7:	e8 8f 12 00 00       	call   f010444b <cprintf>$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	00 $/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	c7 44 24 0c 00 00 00 	movl   $0xfe000000,0xc(%esp)$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	fe $/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	c7 44 24 08 00 00 00 	movl   $0x2000000,0x8(%esp)$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	02 $/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	c7 44 24 04 00 00 00 	movl   $0xfe000000,0x4(%esp)$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	fe $/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	e8 ae e8 ff ff       	call   f0101a97 <boot_map_region>$/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	c7 45 dc 00 90 27 f0 	movl   $0xf0279000,-0x24(%ebp)$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	81 7d dc ff ff ff ef 	cmpl   $0xefffffff,-0x24(%ebp)$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	0f 87 23 08 00 00    	ja     f0103a20 <mem_init+0x120b>$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	b8 00 90 27 f0       	mov    $0xf0279000,%eax$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	eb 0a                	jmp    f010320e <mem_init+0x9f9>$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	89 d8                	mov    %ebx,%eax$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	77 20                	ja     f010322e <mem_init+0xa19>$/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	f0 $/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	00 $/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	e8 57 ce ff ff       	call   f0100085 <_panic>$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%esp)$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	00 $/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f010323c	obj/kern/kernel.asm	/^f010323c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	c7 44 24 08 00 80 00 	movl   $0x8000,0x8(%esp)$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	00 $/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	e8 3e e8 ff ff       	call   f0101a97 <boot_map_region>$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	81 fe 00 80 b7 ef    	cmp    $0xefb78000,%esi$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	75 97                	jne    f0103204 <mem_init+0x9ef>$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	8b 35 98 5e 27 f0    	mov    0xf0275e98,%esi$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	8d 3c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%edi$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103285	obj/kern/kernel.asm	/^f0103285:	74 79                	je     f0103300 <mem_init+0xaeb>$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	89 f0                	mov    %esi,%eax$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	e8 c1 db ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	8b 15 9c 5e 27 f0    	mov    0xf0275e9c,%edx$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	77 20                	ja     f01032c7 <mem_init+0xab2>$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	f0 $/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	00 $/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	e8 be cd ff ff       	call   f0100085 <_panic>$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	8d 94 1a 00 00 00 10 	lea    0x10000000(%edx,%ebx,1),%edx$/;"	l
f01032ce	obj/kern/kernel.asm	/^f01032ce:	39 d0                	cmp    %edx,%eax$/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	74 24                	je     f01032f6 <mem_init+0xae1>$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	c7 44 24 0c e8 8a 10 	movl   $0xf0108ae8,0xc(%esp)$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	f0 $/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	f0 $/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	00 $/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	e8 8f cd ff ff       	call   f0100085 <_panic>$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	39 df                	cmp    %ebx,%edi$/;"	l
f01032fe	obj/kern/kernel.asm	/^f01032fe:	77 8c                	ja     f010328c <mem_init+0xa77>$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	8d 93 00 00 c0 ee    	lea    -0x11400000(%ebx),%edx$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	89 f0                	mov    %esi,%eax$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	e8 48 db ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	8b 15 40 52 27 f0    	mov    0xf0275240,%edx$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	77 20                	ja     f0103340 <mem_init+0xb2b>$/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f010332b	obj/kern/kernel.asm	/^f010332b:	f0 $/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	00 $/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	e8 45 cd ff ff       	call   f0100085 <_panic>$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	8d 94 13 00 00 00 10 	lea    0x10000000(%ebx,%edx,1),%edx$/;"	l
f0103347	obj/kern/kernel.asm	/^f0103347:	39 d0                	cmp    %edx,%eax$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	74 24                	je     f010336f <mem_init+0xb5a>$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	c7 44 24 0c 1c 8b 10 	movl   $0xf0108b1c,0xc(%esp)$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	f0 $/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	f0 $/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	00 $/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	e8 16 cd ff ff       	call   f0100085 <_panic>$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	81 fb 00 f0 01 00    	cmp    $0x1f000,%ebx$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	75 88                	jne    f0103305 <mem_init+0xaf0>$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	85 c0                	test   %eax,%eax$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	74 4c                	je     f01033d5 <mem_init+0xbc0>$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	89 f0                	mov    %esi,%eax$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	e8 bf da ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	74 24                	je     f01033c3 <mem_init+0xbae>$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	c7 44 24 0c 50 8b 10 	movl   $0xf0108b50,0xc(%esp)$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	f0 $/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	f0 $/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	00 $/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	e8 c2 cc ff ff       	call   f0100085 <_panic>$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	a1 94 5e 27 f0       	mov    0xf0275e94,%eax$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	39 c3                	cmp    %eax,%ebx$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	72 b9                	jb     f010338e <mem_init+0xb79>$/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	89 da                	mov    %ebx,%edx$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	89 f0                	mov    %esi,%eax$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	e8 77 da ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	74 24                	je     f010340b <mem_init+0xbf6>$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	c7 44 24 0c fa 8f 10 	movl   $0xf0108ffa,0xc(%esp)$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	f0 $/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	f0 $/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	00 $/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	e8 7a cc ff ff       	call   f0100085 <_panic>$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	75 c1                	jne    f01033da <mem_init+0xbc5>$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	c7 45 e0 00 00 bf ef 	movl   $0xefbf0000,-0x20(%ebp)$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	89 f7                	mov    %esi,%edi$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103425	obj/kern/kernel.asm	/^f0103425:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010342b	obj/kern/kernel.asm	/^f010342b:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	89 c6                	mov    %eax,%esi$/;"	l
f0103433	obj/kern/kernel.asm	/^f0103433:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	81 c1 00 00 01 00    	add    $0x10000,%ecx$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	89 da                	mov    %ebx,%edx$/;"	l
f0103447	obj/kern/kernel.asm	/^f0103447:	89 f8                	mov    %edi,%eax$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	e8 0c da ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	81 7d dc ff ff ff ef 	cmpl   $0xefffffff,-0x24(%ebp)$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	77 23                	ja     f010347a <mem_init+0xc65>$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	8b 7d d8             	mov    -0x28(%ebp),%edi$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	f0 $/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	00 $/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	e8 0b cc ff ff       	call   f0100085 <_panic>$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	39 f0                	cmp    %esi,%eax$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	74 24                	je     f01034a2 <mem_init+0xc8d>$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	c7 44 24 0c 78 8b 10 	movl   $0xf0108b78,0xc(%esp)$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	f0 $/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010348d	obj/kern/kernel.asm	/^f010348d:	f0 $/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	00 $/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	e8 e3 cb ff ff       	call   f0100085 <_panic>$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	8d b0 00 10 00 00    	lea    0x1000(%eax),%esi$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	0f 85 a9 05 00 00    	jne    f0103a60 <mem_init+0x124b>$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	8d 14 33             	lea    (%ebx,%esi,1),%edx$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	89 f8                	mov    %edi,%eax$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	e8 91 d9 ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	74 24                	je     f01034f2 <mem_init+0xcdd>$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	c7 44 24 0c c0 8b 10 	movl   $0xf0108bc0,0xc(%esp)$/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	f0 $/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01034dd	obj/kern/kernel.asm	/^f01034dd:	f0 $/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	00 $/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	e8 93 cb ff ff       	call   f0100085 <_panic>$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	75 bf                	jne    f01034bf <mem_init+0xcaa>$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	81 6d e0 00 00 01 00 	subl   $0x10000,-0x20(%ebp)$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	81 45 dc 00 80 00 00 	addl   $0x8000,-0x24(%ebp)$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	81 7d e0 00 00 b7 ef 	cmpl   $0xefb70000,-0x20(%ebp)$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	0f 85 07 ff ff ff    	jne    f0103422 <mem_init+0xc0d>$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	89 fe                	mov    %edi,%esi$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	77 2e                	ja     f010355b <mem_init+0xd46>$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	0f 85 aa 00 00 00    	jne    f01035e1 <mem_init+0xdcc>$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	c7 44 24 0c 15 90 10 	movl   $0xf0109015,0xc(%esp)$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	f0 $/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	f0 $/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	00 $/;"	l
f010354f	obj/kern/kernel.asm	/^f010354f:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	e8 2a cb ff ff       	call   f0100085 <_panic>$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0103560	obj/kern/kernel.asm	/^f0103560:	76 55                	jbe    f01035b7 <mem_init+0xda2>$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	75 24                	jne    f010358e <mem_init+0xd79>$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	c7 44 24 0c 15 90 10 	movl   $0xf0109015,0xc(%esp)$/;"	l
f0103571	obj/kern/kernel.asm	/^f0103571:	f0 $/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	f0 $/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	00 $/;"	l
f0103582	obj/kern/kernel.asm	/^f0103582:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	e8 f7 ca ff ff       	call   f0100085 <_panic>$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	75 4e                	jne    f01035e1 <mem_init+0xdcc>$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	c7 44 24 0c 26 90 10 	movl   $0xf0109026,0xc(%esp)$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	f0 $/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	f0 $/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	00 $/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	e8 ce ca ff ff       	call   f0100085 <_panic>$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	74 24                	je     f01035e1 <mem_init+0xdcc>$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	c7 44 24 0c 37 90 10 	movl   $0xf0109037,0xc(%esp)$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	f0 $/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	f0 $/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	c7 44 24 04 17 04 00 	movl   $0x417,0x4(%esp)$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	00 $/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	e8 a4 ca ff ff       	call   f0100085 <_panic>$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	0f 85 33 ff ff ff    	jne    f0103522 <mem_init+0xd0d>$/;"	l
f01035ef	obj/kern/kernel.asm	/^f01035ef:	c7 04 24 e4 8b 10 f0 	movl   $0xf0108be4,(%esp)$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	e8 50 0e 00 00       	call   f010444b <cprintf>$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	c7 04 24 45 90 10 f0 	movl   $0xf0109045,(%esp)$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	e8 44 0e 00 00       	call   f010444b <cprintf>$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	77 20                	ja     f0103633 <mem_init+0xe1e>$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	f0 $/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	00 $/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	e8 52 ca ff ff       	call   f0100085 <_panic>$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	e8 ac d8 ff ff       	call   f0100ef2 <check_page_free_list>$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	e8 4e e0 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	89 c3                	mov    %eax,%ebx$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	85 c0                	test   %eax,%eax$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	75 24                	jne    f010368a <mem_init+0xe75>$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	c7 44 24 0c 74 8d 10 	movl   $0xf0108d74,0xc(%esp)$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	f0 $/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	f0 $/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	c7 44 24 04 05 05 00 	movl   $0x505,0x4(%esp)$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	00 $/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	e8 fb c9 ff ff       	call   f0100085 <_panic>$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	e8 18 e0 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	89 c7                	mov    %eax,%edi$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	85 c0                	test   %eax,%eax$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	75 24                	jne    f01036c0 <mem_init+0xeab>$/;"	l
f010369c	obj/kern/kernel.asm	/^f010369c:	c7 44 24 0c 8a 8d 10 	movl   $0xf0108d8a,0xc(%esp)$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	f0 $/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	f0 $/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	c7 44 24 04 06 05 00 	movl   $0x506,0x4(%esp)$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	00 $/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01036bb	obj/kern/kernel.asm	/^f01036bb:	e8 c5 c9 ff ff       	call   f0100085 <_panic>$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	e8 e2 df ff ff       	call   f01016ae <page_alloc>$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	89 c6                	mov    %eax,%esi$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	85 c0                	test   %eax,%eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	75 24                	jne    f01036f6 <mem_init+0xee1>$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	c7 44 24 0c a0 8d 10 	movl   $0xf0108da0,0xc(%esp)$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	f0 $/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	f0 $/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	c7 44 24 04 07 05 00 	movl   $0x507,0x4(%esp)$/;"	l
f01036e9	obj/kern/kernel.asm	/^f01036e9:	00 $/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	e8 8f c9 ff ff       	call   f0100085 <_panic>$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	e8 99 d6 ff ff       	call   f0100d97 <page_free>$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	89 f8                	mov    %edi,%eax$/;"	l
f0103700	obj/kern/kernel.asm	/^f0103700:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f0103706	obj/kern/kernel.asm	/^f0103706:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010370c	obj/kern/kernel.asm	/^f010370c:	89 c2                	mov    %eax,%edx$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	72 20                	jb     f0103739 <mem_init+0xf24>$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	f0 $/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	00 $/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	e8 4c c9 ff ff       	call   f0100085 <_panic>$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	00 $/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	00 $/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010374e	obj/kern/kernel.asm	/^f010374e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	e8 10 32 00 00       	call   f0106966 <memset>$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	89 f0                	mov    %esi,%eax$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103764	obj/kern/kernel.asm	/^f0103764:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	89 c2                	mov    %eax,%edx$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	72 20                	jb     f0103794 <mem_init+0xf7f>$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	f0 $/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	00 $/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	e8 f1 c8 ff ff       	call   f0100085 <_panic>$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	00 $/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	00 $/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	e8 b5 31 00 00       	call   f0106966 <memset>$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	00 $/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	00 $/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	e8 25 e2 ff ff       	call   f01019f7 <page_insert>$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	74 24                	je     f01037fd <mem_init+0xfe8>$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	c7 44 24 0c d7 8d 10 	movl   $0xf0108dd7,0xc(%esp)$/;"	l
f01037e0	obj/kern/kernel.asm	/^f01037e0:	f0 $/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01037e8	obj/kern/kernel.asm	/^f01037e8:	f0 $/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	c7 44 24 04 0c 05 00 	movl   $0x50c,0x4(%esp)$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	00 $/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	e8 88 c8 ff ff       	call   f0100085 <_panic>$/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	01 01 01 $/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	74 24                	je     f010382d <mem_init+0x1018>$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	c7 44 24 0c 04 8c 10 	movl   $0xf0108c04,0xc(%esp)$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	f0 $/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	f0 $/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	c7 44 24 04 0d 05 00 	movl   $0x50d,0x4(%esp)$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	00 $/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	e8 58 c8 ff ff       	call   f0100085 <_panic>$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	00 $/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	00 $/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103849	obj/kern/kernel.asm	/^f0103849:	e8 a9 e1 ff ff       	call   f01019f7 <page_insert>$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	02 02 02 $/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	74 24                	je     f010387e <mem_init+0x1069>$/;"	l
f010385a	obj/kern/kernel.asm	/^f010385a:	c7 44 24 0c 28 8c 10 	movl   $0xf0108c28,0xc(%esp)$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	f0 $/;"	l
f0103862	obj/kern/kernel.asm	/^f0103862:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	f0 $/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	c7 44 24 04 0f 05 00 	movl   $0x50f,0x4(%esp)$/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	00 $/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	e8 07 c8 ff ff       	call   f0100085 <_panic>$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	74 24                	je     f01038a9 <mem_init+0x1094>$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	c7 44 24 0c f9 8d 10 	movl   $0xf0108df9,0xc(%esp)$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	f0 $/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103894	obj/kern/kernel.asm	/^f0103894:	f0 $/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	c7 44 24 04 10 05 00 	movl   $0x510,0x4(%esp)$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	00 $/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	e8 dc c7 ff ff       	call   f0100085 <_panic>$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	74 24                	je     f01038d4 <mem_init+0x10bf>$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	c7 44 24 0c 42 8e 10 	movl   $0xf0108e42,0xc(%esp)$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	f0 $/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	f0 $/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	c7 44 24 04 11 05 00 	movl   $0x511,0x4(%esp)$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	00 $/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01038cf	obj/kern/kernel.asm	/^f01038cf:	e8 b1 c7 ff ff       	call   f0100085 <_panic>$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	03 03 03 $/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	89 c2                	mov    %eax,%edx$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01038f2	obj/kern/kernel.asm	/^f01038f2:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	72 20                	jb     f010391a <mem_init+0x1105>$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	f0 $/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	00 $/;"	l
f010390e	obj/kern/kernel.asm	/^f010390e:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0103915	obj/kern/kernel.asm	/^f0103915:	e8 6b c7 ff ff       	call   f0100085 <_panic>$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	03 03 03 $/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	74 24                	je     f010394a <mem_init+0x1135>$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	c7 44 24 0c 4c 8c 10 	movl   $0xf0108c4c,0xc(%esp)$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	f0 $/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	f0 $/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	c7 44 24 04 13 05 00 	movl   $0x513,0x4(%esp)$/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	00 $/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	e8 3b c7 ff ff       	call   f0100085 <_panic>$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	00 $/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	e8 48 e0 ff ff       	call   f01019a7 <page_remove>$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	74 24                	je     f010398a <mem_init+0x1175>$/;"	l
f0103966	obj/kern/kernel.asm	/^f0103966:	c7 44 24 0c 31 8e 10 	movl   $0xf0108e31,0xc(%esp)$/;"	l
f010396d	obj/kern/kernel.asm	/^f010396d:	f0 $/;"	l
f010396e	obj/kern/kernel.asm	/^f010396e:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	f0 $/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	c7 44 24 04 15 05 00 	movl   $0x515,0x4(%esp)$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	00 $/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	e8 fb c6 ff ff       	call   f0100085 <_panic>$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	89 da                	mov    %ebx,%edx$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	39 d1                	cmp    %edx,%ecx$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	74 24                	je     f01039cd <mem_init+0x11b8>$/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	c7 44 24 0c 58 87 10 	movl   $0xf0108758,0xc(%esp)$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	f0 $/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	f0 $/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	c7 44 24 04 18 05 00 	movl   $0x518,0x4(%esp)$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	00 $/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	e8 b8 c6 ff ff       	call   f0100085 <_panic>$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01039d3	obj/kern/kernel.asm	/^f01039d3:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	74 24                	je     f01039fe <mem_init+0x11e9>$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	c7 44 24 0c e8 8d 10 	movl   $0xf0108de8,0xc(%esp)$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	f0 $/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	f0 $/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	c7 44 24 04 1a 05 00 	movl   $0x51a,0x4(%esp)$/;"	l
f01039f1	obj/kern/kernel.asm	/^f01039f1:	00 $/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	c7 04 24 a1 8c 10 f0 	movl   $0xf0108ca1,(%esp)$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	e8 87 c6 ff ff       	call   f0100085 <_panic>$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	e8 8b d3 ff ff       	call   f0100d97 <page_free>$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	c7 04 24 78 8c 10 f0 	movl   $0xf0108c78,(%esp)$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	e8 33 0a 00 00       	call   f010444b <cprintf>$/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	5b                   	pop    %ebx$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	5e                   	pop    %esi$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	5f                   	pop    %edi$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	5d                   	pop    %ebp$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	c3                   	ret    $/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	c7 44 24 10 03 00 00 	movl   $0x3,0x10(%esp)$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	00 $/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	c7 44 24 08 00 80 00 	movl   $0x8000,0x8(%esp)$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	00 $/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	c7 44 24 04 00 80 bf 	movl   $0xefbf8000,0x4(%esp)$/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	ef $/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	e8 46 e0 ff ff       	call   f0101a97 <boot_map_region>$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	bb 00 10 28 f0       	mov    $0xf0281000,%ebx$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	be 00 80 be ef       	mov    $0xefbe8000,%esi$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	e9 a4 f7 ff ff       	jmp    f0103204 <mem_init+0x9ef>$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	89 da                	mov    %ebx,%edx$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	89 f8                	mov    %edi,%eax$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	e8 f1 d3 ff ff       	call   f0100e5a <check_va2pa>$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	e9 0c fa ff ff       	jmp    f010347a <mem_init+0xc65>$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70 <env_init_percpu>:$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	55                   	push   %ebp$/;"	l
f0103a71	obj/kern/kernel.asm	/^f0103a71:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	b8 68 53 12 f0       	mov    $0xf0125368,%eax$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103a80	obj/kern/kernel.asm	/^f0103a80:	8e e8                	mov    %eax,%gs$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	8e e0                	mov    %eax,%fs$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	b0 10                	mov    $0x10,%al$/;"	l
f0103a86	obj/kern/kernel.asm	/^f0103a86:	8e c0                	mov    %eax,%es$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	8e d8                	mov    %eax,%ds$/;"	l
f0103a8a	obj/kern/kernel.asm	/^f0103a8a:	8e d0                	mov    %eax,%ss$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	ea 93 3a 10 f0 08 00 	ljmp   $0x8,$0xf0103a93$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	b0 00                	mov    $0x0,%al$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	0f 00 d0             	lldt   %ax$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	5d                   	pop    %ebp$/;"	l
f0103a99	obj/kern/kernel.asm	/^f0103a99:	c3                   	ret    $/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a <env_init>:$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	55                   	push   %ebp$/;"	l
f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	b8 84 ef 01 00       	mov    $0x1ef84,%eax$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	8b 0d 40 52 27 f0    	mov    0xf0275240,%ecx$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	c7 44 01 48 00 00 00 	movl   $0x0,0x48(%ecx,%eax,1)$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	00 $/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	8b 0d 40 52 27 f0    	mov    0xf0275240,%ecx$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	c7 44 01 54 00 00 00 	movl   $0x0,0x54(%ecx,%eax,1)$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	00 $/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	8b 0d 40 52 27 f0    	mov    0xf0275240,%ecx$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	89 54 01 44          	mov    %edx,0x44(%ecx,%eax,1)$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	89 c2                	mov    %eax,%edx$/;"	l
f0103acf	obj/kern/kernel.asm	/^f0103acf:	03 15 40 52 27 f0    	add    0xf0275240,%edx$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0103ad8	obj/kern/kernel.asm	/^f0103ad8:	83 f8 84             	cmp    $0xffffff84,%eax$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	75 ca                	jne    f0103aa7 <env_init+0xd>$/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	89 15 44 52 27 f0    	mov    %edx,0xf0275244$/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	e8 88 ff ff ff       	call   f0103a70 <env_init_percpu>$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	5d                   	pop    %ebp$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	c3                   	ret    $/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea <envid2env>:$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	55                   	push   %ebp$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103af6	obj/kern/kernel.asm	/^f0103af6:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	85 c0                	test   %eax,%eax$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	75 17                	jne    f0103b1a <envid2env+0x30>$/;"	l
f0103b03	obj/kern/kernel.asm	/^f0103b03:	e8 0a 35 00 00       	call   f0107012 <cpunum>$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	89 06                	mov    %eax,(%esi)$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	eb 69                	jmp    f0103b83 <envid2env+0x99>$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	89 c3                	mov    %eax,%ebx$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103b22	obj/kern/kernel.asm	/^f0103b22:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	03 1d 40 52 27 f0    	add    0xf0275240,%ebx$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	74 05                	je     f0103b36 <envid2env+0x4c>$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	74 0d                	je     f0103b43 <envid2env+0x59>$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	eb 40                	jmp    f0103b83 <envid2env+0x99>$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0103b47	obj/kern/kernel.asm	/^f0103b47:	74 33                	je     f0103b7c <envid2env+0x92>$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	e8 c4 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	39 98 28 80 27 f0    	cmp    %ebx,-0xfd87fd8(%eax)$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	74 23                	je     f0103b7c <envid2env+0x92>$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	e8 b1 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	74 0d                	je     f0103b7c <envid2env+0x92>$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	eb 07                	jmp    f0103b83 <envid2env+0x99>$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	89 ec                	mov    %ebp,%esp$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	5d                   	pop    %ebp$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	c3                   	ret    $/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90 <env_pop_tf>:$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	55                   	push   %ebp$/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b93	obj/kern/kernel.asm	/^f0103b93:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	e8 6b 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	8b 98 28 80 27 f0    	mov    -0xfd87fd8(%eax),%ebx$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	e8 5d 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	83 7e 28 30          	cmpl   $0x30,0x28(%esi)$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	75 60                	jne    f0103c1e <env_pop_tf+0x8e>$/;"	l
f0103bbe	obj/kern/kernel.asm	/^f0103bbe:	c7 04 24 80 53 12 f0 	movl   $0xf0125380,(%esp)$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	e8 f2 36 00 00       	call   f01072bc <spin_unlock>$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	f3 90                	pause  $/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	e8 41 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	bb 20 80 27 f0       	mov    $0xf0278020,%ebx$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	e8 2a 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103bf5	obj/kern/kernel.asm	/^f0103bf5:	e8 18 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	8b 78 1c             	mov    0x1c(%eax),%edi$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	e8 09 34 00 00       	call   f0107012 <cpunum>$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	8b 58 38             	mov    0x38(%eax),%ebx$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0103c19	obj/kern/kernel.asm	/^f0103c19:	89 f8                	mov    %edi,%eax$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	fb                   	sti    $/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	0f 35                	sysexit $/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	c7 04 24 80 53 12 f0 	movl   $0xf0125380,(%esp)$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	e8 92 36 00 00       	call   f01072bc <spin_unlock>$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	f3 90                	pause  $/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	89 f4                	mov    %esi,%esp$/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	61                   	popa   $/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	07                   	pop    %es$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	1f                   	pop    %ds$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	cf                   	iret   $/;"	l
f0103c35	obj/kern/kernel.asm	/^f0103c35:	c7 44 24 08 57 90 10 	movl   $0xf0109057,0x8(%esp)$/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	f0 $/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	c7 44 24 04 11 02 00 	movl   $0x211,0x4(%esp)$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	00 $/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	e8 34 c4 ff ff       	call   f0100085 <_panic>$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51 <env_run>:$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	55                   	push   %ebp$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	53                   	push   %ebx$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	e8 b2 33 00 00       	call   f0107012 <cpunum>$/;"	l
f0103c60	obj/kern/kernel.asm	/^f0103c60:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	39 98 28 80 27 f0    	cmp    %ebx,-0xfd87fd8(%eax)$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	0f 84 88 00 00 00    	je     f0103cf7 <env_run+0xa6>$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	e8 9e 33 00 00       	call   f0107012 <cpunum>$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	83 b8 28 80 27 f0 00 	cmpl   $0x0,-0xfd87fd8(%eax)$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	74 29                	je     f0103ca9 <env_run+0x58>$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	e8 8d 33 00 00       	call   f0107012 <cpunum>$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	75 15                	jne    f0103ca9 <env_run+0x58>$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	e8 79 33 00 00       	call   f0107012 <cpunum>$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c9c	obj/kern/kernel.asm	/^f0103c9c:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	e8 64 33 00 00       	call   f0107012 <cpunum>$/;"	l
f0103cae	obj/kern/kernel.asm	/^f0103cae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	89 98 28 80 27 f0    	mov    %ebx,-0xfd87fd8(%eax)$/;"	l
f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	83 43 58 01          	addl   $0x1,0x58(%ebx)$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103cc5	obj/kern/kernel.asm	/^f0103cc5:	89 c2                	mov    %eax,%edx$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	77 20                	ja     f0103cee <env_run+0x9d>$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	f0 $/;"	l
f0103cda	obj/kern/kernel.asm	/^f0103cda:	c7 44 24 04 38 02 00 	movl   $0x238,0x4(%esp)$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	00 $/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	e8 97 c3 ff ff       	call   f0100085 <_panic>$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	0f 22 da             	mov    %edx,%cr3$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	e8 91 fe ff ff       	call   f0103b90 <env_pop_tf>$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff <env_free>:$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	55                   	push   %ebp$/;"	l
f0103d00	obj/kern/kernel.asm	/^f0103d00:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	57                   	push   %edi$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	56                   	push   %esi$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	53                   	push   %ebx$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	e8 02 33 00 00       	call   f0107012 <cpunum>$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	39 b8 28 80 27 f0    	cmp    %edi,-0xfd87fd8(%eax)$/;"	l
f0103d20	obj/kern/kernel.asm	/^f0103d20:	75 3c                	jne    f0103d5e <env_free+0x5f>$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	77 20                	ja     f0103d4e <env_free+0x4f>$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	f0 $/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	c7 44 24 04 ac 01 00 	movl   $0x1ac,0x4(%esp)$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	00 $/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	e8 37 c3 ff ff       	call   f0100085 <_panic>$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0103d54	obj/kern/kernel.asm	/^f0103d54:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103d6d	obj/kern/kernel.asm	/^f0103d6d:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	0f 84 b8 00 00 00    	je     f0103e34 <env_free+0x135>$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	89 f0                	mov    %esi,%eax$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103d8a	obj/kern/kernel.asm	/^f0103d8a:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	72 20                	jb     f0103db2 <env_free+0xb3>$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	f0 $/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	c7 44 24 04 bb 01 00 	movl   $0x1bb,0x4(%esp)$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	00 $/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	e8 d3 c2 ff ff       	call   f0100085 <_panic>$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103dbb	obj/kern/kernel.asm	/^f0103dbb:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	01 $/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	74 17                	je     f0103de1 <env_free+0xe2>$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	89 d8                	mov    %ebx,%eax$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	e8 c6 db ff ff       	call   f01019a7 <page_remove>$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	75 d4                	jne    f0103dc0 <env_free+0xc1>$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	72 1c                	jb     f0103e20 <env_free+0x121>$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	c7 44 24 08 48 86 10 	movl   $0xf0108648,0x8(%esp)$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	f0 $/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	00 $/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	e8 65 c2 ff ff       	call   f0100085 <_panic>$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	03 05 9c 5e 27 f0    	add    0xf0275e9c,%eax$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	e8 ce cf ff ff       	call   f0100e02 <page_decref>$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	0f 85 19 ff ff ff    	jne    f0103d5e <env_free+0x5f>$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	77 20                	ja     f0103e6f <env_free+0x170>$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	f0 $/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	c7 44 24 04 c9 01 00 	movl   $0x1c9,0x4(%esp)$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	00 $/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	e8 16 c2 ff ff       	call   f0100085 <_panic>$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	72 1c                	jb     f0103ea3 <env_free+0x1a4>$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	c7 44 24 08 48 86 10 	movl   $0xf0108648,0x8(%esp)$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	f0 $/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	00 $/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	e8 e2 c1 ff ff       	call   f0100085 <_panic>$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	03 05 9c 5e 27 f0    	add    0xf0275e9c,%eax$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	e8 4e cf ff ff       	call   f0100e02 <page_decref>$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	a1 44 52 27 f0       	mov    0xf0275244,%eax$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	89 3d 44 52 27 f0    	mov    %edi,0xf0275244$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	5b                   	pop    %ebx$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	5e                   	pop    %esi$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	5f                   	pop    %edi$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	5d                   	pop    %ebp$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	c3                   	ret    $/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1 <env_destroy>:$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	55                   	push   %ebp$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	53                   	push   %ebx$/;"	l
f0103ed5	obj/kern/kernel.asm	/^f0103ed5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	75 19                	jne    f0103efa <env_destroy+0x29>$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	e8 2c 31 00 00       	call   f0107012 <cpunum>$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	39 98 28 80 27 f0    	cmp    %ebx,-0xfd87fd8(%eax)$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	74 09                	je     f0103efa <env_destroy+0x29>$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	eb 2f                	jmp    f0103f29 <env_destroy+0x58>$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	e8 fd fd ff ff       	call   f0103cff <env_free>$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	e8 0b 31 00 00       	call   f0107012 <cpunum>$/;"	l
f0103f07	obj/kern/kernel.asm	/^f0103f07:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	39 98 28 80 27 f0    	cmp    %ebx,-0xfd87fd8(%eax)$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	75 17                	jne    f0103f29 <env_destroy+0x58>$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	e8 fb 30 00 00       	call   f0107012 <cpunum>$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	c7 80 28 80 27 f0 00 	movl   $0x0,-0xfd87fd8(%eax)$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	00 00 00 $/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	e8 17 13 00 00       	call   f0105240 <sched_yield>$/;"	l
f0103f29	obj/kern/kernel.asm	/^f0103f29:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	5b                   	pop    %ebx$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	5d                   	pop    %ebp$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	c3                   	ret    $/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f <env_alloc>:$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	55                   	push   %ebp$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f32	obj/kern/kernel.asm	/^f0103f32:	53                   	push   %ebx$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	8b 1d 44 52 27 f0    	mov    0xf0275244,%ebx$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	85 db                	test   %ebx,%ebx$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	0f 84 70 01 00 00    	je     f01040b9 <env_alloc+0x18a>$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	e8 59 d7 ff ff       	call   f01016ae <page_alloc>$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	89 c2                	mov    %eax,%edx$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	85 d2                	test   %edx,%edx$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	0f 84 55 01 00 00    	je     f01040b9 <env_alloc+0x18a>$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	2b 15 9c 5e 27 f0    	sub    0xf0275e9c,%edx$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	89 d0                	mov    %edx,%eax$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	72 20                	jb     f0103f9d <env_alloc+0x6e>$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	f0 $/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	00 $/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	e8 e8 c0 ff ff       	call   f0100085 <_panic>$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	00 $/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	00 $/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	e8 a8 29 00 00       	call   f0106966 <memset>$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	00 $/;"	l
f0103fc6	obj/kern/kernel.asm	/^f0103fc6:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	e8 eb 29 00 00       	call   f01069c5 <memmove>$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	89 c2                	mov    %eax,%edx$/;"	l
f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	77 20                	ja     f0104006 <env_alloc+0xd7>$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	f0 $/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	c7 44 24 04 c9 00 00 	movl   $0xc9,0x4(%esp)$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	00 $/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	e8 7f c0 ff ff       	call   f0100085 <_panic>$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	83 ca 05             	or     $0x5,%edx$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	89 da                	mov    %ebx,%edx$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	2b 15 40 52 27 f0    	sub    0xf0275240,%edx$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	09 d0                	or     %edx,%eax$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010405b	obj/kern/kernel.asm	/^f010405b:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	00 $/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	00 $/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	e8 f3 28 00 00       	call   f0106966 <memset>$/;"	l
f0104073	obj/kern/kernel.asm	/^f0104073:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	a3 44 52 27 f0       	mov    %eax,0xf0275244$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	89 18                	mov    %ebx,(%eax)$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	83 c4 14             	add    $0x14,%esp$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	5b                   	pop    %ebx$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	5d                   	pop    %ebp$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	c3                   	ret    $/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf <region_alloc>:$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	55                   	push   %ebp$/;"	l
f01040c0	obj/kern/kernel.asm	/^f01040c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	57                   	push   %edi$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	56                   	push   %esi$/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	53                   	push   %ebx$/;"	l
f01040c5	obj/kern/kernel.asm	/^f01040c5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	89 c6                	mov    %eax,%esi$/;"	l
f01040ca	obj/kern/kernel.asm	/^f01040ca:	8d b9 ff 0f 00 00    	lea    0xfff(%ecx),%edi$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	0f 84 83 00 00 00    	je     f010415f <region_alloc+0xa0>$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	89 d3                	mov    %edx,%ebx$/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	e8 be d5 ff ff       	call   f01016ae <page_alloc>$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	85 c0                	test   %eax,%eax$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	75 1c                	jne    f0104110 <region_alloc+0x51>$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	c7 44 24 08 a4 90 10 	movl   $0xf01090a4,0x8(%esp)$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	f0 $/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	00 $/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	e8 75 bf ff ff       	call   f0100085 <_panic>$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	00 $/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	e8 cc d8 ff ff       	call   f01019f7 <page_insert>$/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	85 c0                	test   %eax,%eax$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	74 20                	je     f010414f <region_alloc+0x90>$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	c7 44 24 08 c8 90 10 	movl   $0xf01090c8,0x8(%esp)$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	f0 $/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	c7 44 24 04 32 01 00 	movl   $0x132,0x4(%esp)$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	00 $/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	e8 36 bf ff ff       	call   f0100085 <_panic>$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	81 ef 00 10 00 00    	sub    $0x1000,%edi$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	74 08                	je     f010415f <region_alloc+0xa0>$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	eb 85                	jmp    f01040e4 <region_alloc+0x25>$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	5b                   	pop    %ebx$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	5e                   	pop    %esi$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	5f                   	pop    %edi$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	5d                   	pop    %ebp$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	c3                   	ret    $/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167 <env_create>:$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	55                   	push   %ebp$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	89 e5                	mov    %esp,%ebp$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	57                   	push   %edi$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	56                   	push   %esi$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	53                   	push   %ebx$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	00 $/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	e8 a9 fd ff ff       	call   f0103f2f <env_alloc>$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	85 c0                	test   %eax,%eax$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	79 20                	jns    f01041aa <env_create+0x43>$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	c7 44 24 08 6e 90 10 	movl   $0xf010906e,0x8(%esp)$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	f0 $/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	c7 44 24 04 94 01 00 	movl   $0x194,0x4(%esp)$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	00 $/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	e8 db be ff ff       	call   f0100085 <_panic>$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	81 3e 7f 45 4c 46    	cmpl   $0x464c457f,(%esi)$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	74 1c                	je     f01041d4 <env_create+0x6d>$/;"	l
f01041b8	obj/kern/kernel.asm	/^f01041b8:	c7 44 24 08 8b 90 10 	movl   $0xf010908b,0x8(%esp)$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	f0 $/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	c7 44 24 04 71 01 00 	movl   $0x171,0x4(%esp)$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	00 $/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	e8 b1 be ff ff       	call   f0100085 <_panic>$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	8b 58 1c             	mov    0x1c(%eax),%ebx$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	0f b7 50 2c          	movzwl 0x2c(%eax),%edx$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	89 c1                	mov    %eax,%ecx$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	77 20                	ja     f010420a <env_create+0xa3>$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	f0 $/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	c7 44 24 04 75 01 00 	movl   $0x175,0x4(%esp)$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	00 $/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	e8 7b be ff ff       	call   f0100085 <_panic>$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	03 5d d0             	add    -0x30(%ebp),%ebx$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	8d 14 13             	lea    (%ebx,%edx,1),%edx$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	81 c1 00 00 00 10    	add    $0x10000000,%ecx$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	0f 22 d9             	mov    %ecx,%cr3$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	39 d3                	cmp    %edx,%ebx$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	73 4a                	jae    f0104270 <env_create+0x109>$/;"	l
f0104226	obj/kern/kernel.asm	/^f0104226:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	89 f8                	mov    %edi,%eax$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	e8 8c fe ff ff       	call   f01040bf <region_alloc>$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	00 $/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	e8 19 27 00 00       	call   f0106966 <memset>$/;"	l
f010424d	obj/kern/kernel.asm	/^f010424d:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104250	obj/kern/kernel.asm	/^f0104250:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	89 f0                	mov    %esi,%eax$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	e8 5d 27 00 00       	call   f01069c5 <memmove>$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	83 c3 20             	add    $0x20,%ebx$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	77 b6                	ja     f0104226 <env_create+0xbf>$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	8b 42 18             	mov    0x18(%edx),%eax$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	89 f8                	mov    %edi,%eax$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	e8 35 fe ff ff       	call   f01040bf <region_alloc>$/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	77 20                	ja     f01042b6 <env_create+0x14f>$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	f0 $/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	c7 44 24 04 83 01 00 	movl   $0x183,0x4(%esp)$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	00 $/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	c7 04 24 63 90 10 f0 	movl   $0xf0109063,(%esp)$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	e8 cf bd ff ff       	call   f0100085 <_panic>$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	8d 80 00 00 00 10    	lea    0x10000000(%eax),%eax$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	83 78 50 02          	cmpl   $0x2,0x50(%eax)$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	75 07                	jne    f01042d8 <env_create+0x171>$/;"	l
f01042d1	obj/kern/kernel.asm	/^f01042d1:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	5b                   	pop    %ebx$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	5e                   	pop    %esi$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	5f                   	pop    %edi$/;"	l
f01042de	obj/kern/kernel.asm	/^f01042de:	5d                   	pop    %ebp$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	c3                   	ret    $/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0 <mc146818_read>:$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	55                   	push   %ebp$/;"	l
f01042e1	obj/kern/kernel.asm	/^f01042e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	ee                   	out    %al,(%dx)$/;"	l
f01042ec	obj/kern/kernel.asm	/^f01042ec:	b2 71                	mov    $0x71,%dl$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	ec                   	in     (%dx),%al$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	5d                   	pop    %ebp$/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	c3                   	ret    $/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4 <mc146818_write>:$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	55                   	push   %ebp$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	ee                   	out    %al,(%dx)$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	b2 71                	mov    $0x71,%dl$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	ee                   	out    %al,(%dx)$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	5d                   	pop    %ebp$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	c3                   	ret    $/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308 <irq_eoi>:$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	55                   	push   %ebp$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	89 e5                	mov    %esp,%ebp$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	ee                   	out    %al,(%dx)$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	ee                   	out    %al,(%dx)$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	5d                   	pop    %ebp$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	c3                   	ret    $/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b <irq_setmask_8259A>:$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	55                   	push   %ebp$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	89 e5                	mov    %esp,%ebp$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	56                   	push   %esi$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	53                   	push   %ebx$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104323	obj/kern/kernel.asm	/^f0104323:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	89 c6                	mov    %eax,%esi$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	66 a3 70 53 12 f0    	mov    %ax,0xf0125370$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	83 3d 48 52 27 f0 00 	cmpl   $0x0,0xf0275248$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	74 4e                	je     f0104385 <irq_setmask_8259A+0x6a>$/;"	l
f0104337	obj/kern/kernel.asm	/^f0104337:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	ee                   	out    %al,(%dx)$/;"	l
f010433d	obj/kern/kernel.asm	/^f010433d:	89 f0                	mov    %esi,%eax$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104345	obj/kern/kernel.asm	/^f0104345:	ee                   	out    %al,(%dx)$/;"	l
f0104346	obj/kern/kernel.asm	/^f0104346:	c7 04 24 eb 90 10 f0 	movl   $0xf01090eb,(%esp)$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	e8 f9 00 00 00       	call   f010444b <cprintf>$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	0f b7 f6             	movzwl %si,%esi$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	f7 d6                	not    %esi$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	0f a3 de             	bt     %ebx,%esi$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	73 10                	jae    f0104371 <irq_setmask_8259A+0x56>$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	c7 04 24 b4 95 10 f0 	movl   $0xf01095b4,(%esp)$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	e8 da 00 00 00       	call   f010444b <cprintf>$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	75 e3                	jne    f010435c <irq_setmask_8259A+0x41>$/;"	l
f0104379	obj/kern/kernel.asm	/^f0104379:	c7 04 24 b7 92 10 f0 	movl   $0xf01092b7,(%esp)$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	e8 c6 00 00 00       	call   f010444b <cprintf>$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	5b                   	pop    %ebx$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	5e                   	pop    %esi$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	5d                   	pop    %ebp$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	c3                   	ret    $/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c <pic_init>:$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	55                   	push   %ebp$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	89 e5                	mov    %esp,%ebp$/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104392	obj/kern/kernel.asm	/^f0104392:	c7 05 48 52 27 f0 01 	movl   $0x1,0xf0275248$/;"	l
f0104399	obj/kern/kernel.asm	/^f0104399:	00 00 00 $/;"	l
f010439c	obj/kern/kernel.asm	/^f010439c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	ee                   	out    %al,(%dx)$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	ee                   	out    %al,(%dx)$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	b2 20                	mov    $0x20,%dl$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	ee                   	out    %al,(%dx)$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	b2 21                	mov    $0x21,%dl$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	ee                   	out    %al,(%dx)$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	ee                   	out    %al,(%dx)$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	ee                   	out    %al,(%dx)$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd:	ee                   	out    %al,(%dx)$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	ee                   	out    %al,(%dx)$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	ee                   	out    %al,(%dx)$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	ee                   	out    %al,(%dx)$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	b2 20                	mov    $0x20,%dl$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	ee                   	out    %al,(%dx)$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	ee                   	out    %al,(%dx)$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	ee                   	out    %al,(%dx)$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	ee                   	out    %al,(%dx)$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	0f b7 05 70 53 12 f0 	movzwl 0xf0125370,%eax$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	74 0b                	je     f0104416 <pic_init+0x8a>$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	e8 05 ff ff ff       	call   f010431b <irq_setmask_8259A>$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	c9                   	leave  $/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	c3                   	ret    $/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418 <vcprintf>:$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	55                   	push   %ebp$/;"	l
f0104419	obj/kern/kernel.asm	/^f0104419:	89 e5                	mov    %esp,%ebp$/;"	l
f010441b	obj/kern/kernel.asm	/^f010441b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104433	obj/kern/kernel.asm	/^f0104433:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	c7 04 24 65 44 10 f0 	movl   $0xf0104465,(%esp)$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	e8 27 1d 00 00       	call   f010616d <vprintfmt>$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	c9                   	leave  $/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	c3                   	ret    $/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b <cprintf>:$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	55                   	push   %ebp$/;"	l
f010444c	obj/kern/kernel.asm	/^f010444c:	89 e5                	mov    %esp,%ebp$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010445e	obj/kern/kernel.asm	/^f010445e:	e8 b5 ff ff ff       	call   f0104418 <vcprintf>$/;"	l
f0104463	obj/kern/kernel.asm	/^f0104463:	c9                   	leave  $/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	c3                   	ret    $/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465 <putch>:$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	55                   	push   %ebp$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	89 e5                	mov    %esp,%ebp$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	53                   	push   %ebx$/;"	l
f0104469	obj/kern/kernel.asm	/^f0104469:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	e8 90 c2 ff ff       	call   f010070a <cputchar>$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	83 03 01             	addl   $0x1,(%ebx)$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	5b                   	pop    %ebx$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	5d                   	pop    %ebp$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	c3                   	ret    $/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490 <trap_init_percpu>:$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	55                   	push   %ebp$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	89 e5                	mov    %esp,%ebp$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	57                   	push   %edi$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	56                   	push   %esi$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	53                   	push   %ebx$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	e8 74 2b 00 00       	call   f0107012 <cpunum>$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	bb 20 80 27 f0       	mov    $0xf0278020,%ebx$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	0f b6 34 18          	movzbl (%eax,%ebx,1),%esi$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	e8 63 2b 00 00       	call   f0107012 <cpunum>$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	89 f2                	mov    %esi,%edx$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	f7 da                	neg    %edx$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	81 ea 00 00 40 10    	sub    $0x10400000,%edx$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	89 54 18 10          	mov    %edx,0x10(%eax,%ebx,1)$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	e8 47 2b 00 00       	call   f0107012 <cpunum>$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	66 c7 44 18 14 10 00 	movw   $0x10,0x14(%eax,%ebx,1)$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	8d 5e 05             	lea    0x5(%esi),%ebx$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	e8 35 2b 00 00       	call   f0107012 <cpunum>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	89 c6                	mov    %eax,%esi$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	e8 2e 2b 00 00       	call   f0107012 <cpunum>$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	89 c7                	mov    %eax,%edi$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	e8 27 2b 00 00       	call   f0107012 <cpunum>$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	ba 00 53 12 f0       	mov    $0xf0125300,%edx$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	66 c7 04 da 68 00    	movw   $0x68,(%edx,%ebx,8)$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	6b f6 74             	imul   $0x74,%esi,%esi$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	81 c6 2c 80 27 f0    	add    $0xf027802c,%esi$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	66 89 74 da 02       	mov    %si,0x2(%edx,%ebx,8)$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	6b cf 74             	imul   $0x74,%edi,%ecx$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	81 c1 2c 80 27 f0    	add    $0xf027802c,%ecx$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f0104510	obj/kern/kernel.asm	/^f0104510:	88 4c da 04          	mov    %cl,0x4(%edx,%ebx,8)$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	c6 44 da 06 40       	movb   $0x40,0x6(%edx,%ebx,8)$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	05 2c 80 27 f0       	add    $0xf027802c,%eax$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	88 44 da 07          	mov    %al,0x7(%edx,%ebx,8)$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	c6 44 da 05 89       	movb   $0x89,0x5(%edx,%ebx,8)$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	0f 30                	wrmsr  $/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	b1 75                	mov    $0x75,%cl$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	0f 30                	wrmsr  $/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	b8 06 52 10 f0       	mov    $0xf0105206,%eax$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	b1 76                	mov    $0x76,%cl$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	0f 30                	wrmsr  $/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	0f 00 db             	ltr    %bx$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	b8 74 53 12 f0       	mov    $0xf0125374,%eax$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	0f 01 18             	lidtl  (%eax)$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	5b                   	pop    %ebx$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	5e                   	pop    %esi$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	5f                   	pop    %edi$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	5d                   	pop    %ebp$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	c3                   	ret    $/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564 <print_regs>:$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	55                   	push   %ebp$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	89 e5                	mov    %esp,%ebp$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	53                   	push   %ebx$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	c7 04 24 ff 90 10 f0 	movl   $0xf01090ff,(%esp)$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	e8 cb fe ff ff       	call   f010444b <cprintf>$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	c7 04 24 0e 91 10 f0 	movl   $0xf010910e,(%esp)$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	e8 b8 fe ff ff       	call   f010444b <cprintf>$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104596	obj/kern/kernel.asm	/^f0104596:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	c7 04 24 1d 91 10 f0 	movl   $0xf010911d,(%esp)$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	e8 a5 fe ff ff       	call   f010444b <cprintf>$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045ad	obj/kern/kernel.asm	/^f01045ad:	c7 04 24 2c 91 10 f0 	movl   $0xf010912c,(%esp)$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	e8 92 fe ff ff       	call   f010444b <cprintf>$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	c7 04 24 3b 91 10 f0 	movl   $0xf010913b,(%esp)$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	e8 7f fe ff ff       	call   f010444b <cprintf>$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045d3	obj/kern/kernel.asm	/^f01045d3:	c7 04 24 4a 91 10 f0 	movl   $0xf010914a,(%esp)$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	e8 6c fe ff ff       	call   f010444b <cprintf>$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	c7 04 24 59 91 10 f0 	movl   $0xf0109159,(%esp)$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	e8 59 fe ff ff       	call   f010444b <cprintf>$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	c7 04 24 68 91 10 f0 	movl   $0xf0109168,(%esp)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	e8 46 fe ff ff       	call   f010444b <cprintf>$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	5b                   	pop    %ebx$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	5d                   	pop    %ebp$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	c3                   	ret    $/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b <print_trapframe>:$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	55                   	push   %ebp$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	89 e5                	mov    %esp,%ebp$/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	56                   	push   %esi$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	53                   	push   %ebx$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	e8 f7 29 00 00       	call   f0107012 <cpunum>$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	c7 04 24 77 91 10 f0 	movl   $0xf0109177,(%esp)$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	e8 1c fe ff ff       	call   f010444b <cprintf>$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	e8 2d ff ff ff       	call   f0104564 <print_regs>$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	c7 04 24 95 91 10 f0 	movl   $0xf0109195,(%esp)$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	e8 00 fe ff ff       	call   f010444b <cprintf>$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	c7 04 24 a8 91 10 f0 	movl   $0xf01091a8,(%esp)$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	e8 ec fd ff ff       	call   f010444b <cprintf>$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	77 09                	ja     f0104670 <print_trapframe+0x65>$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	8b 14 85 a0 94 10 f0 	mov    -0xfef6b60(,%eax,4),%edx$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	eb 1d                	jmp    f010468d <print_trapframe+0x82>$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	ba bb 91 10 f0       	mov    $0xf01091bb,%edx$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	74 13                	je     f010468d <print_trapframe+0x82>$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0104680	obj/kern/kernel.asm	/^f0104680:	ba c7 91 10 f0       	mov    $0xf01091c7,%edx$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	b9 d6 91 10 f0       	mov    $0xf01091d6,%ecx$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	0f 42 d1             	cmovb  %ecx,%edx$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	c7 04 24 e9 91 10 f0 	movl   $0xf01091e9,(%esp)$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	e8 aa fd ff ff       	call   f010444b <cprintf>$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	3b 1d 64 5a 27 f0    	cmp    0xf0275a64,%ebx$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	75 19                	jne    f01046c2 <print_trapframe+0xb7>$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	75 13                	jne    f01046c2 <print_trapframe+0xb7>$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f01046b2	obj/kern/kernel.asm	/^f01046b2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	c7 04 24 fb 91 10 f0 	movl   $0xf01091fb,(%esp)$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	e8 89 fd ff ff       	call   f010444b <cprintf>$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	c7 04 24 0a 92 10 f0 	movl   $0xf010920a,(%esp)$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	e8 76 fd ff ff       	call   f010444b <cprintf>$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	75 4a                	jne    f0104725 <print_trapframe+0x11a>$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	a8 01                	test   $0x1,%al$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	ba 18 92 10 f0       	mov    $0xf0109218,%edx$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	b9 24 92 10 f0       	mov    $0xf0109224,%ecx$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	a8 02                	test   $0x2,%al$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	ba 2f 92 10 f0       	mov    $0xf010922f,%edx$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	be 34 92 10 f0       	mov    $0xf0109234,%esi$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	a8 04                	test   $0x4,%al$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	b8 2c 93 10 f0       	mov    $0xf010932c,%eax$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	be 3a 92 10 f0       	mov    $0xf010923a,%esi$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	0f 45 c6             	cmovne %esi,%eax$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	c7 04 24 3f 92 10 f0 	movl   $0xf010923f,(%esp)$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	e8 28 fd ff ff       	call   f010444b <cprintf>$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	eb 0c                	jmp    f0104731 <print_trapframe+0x126>$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	c7 04 24 b7 92 10 f0 	movl   $0xf01092b7,(%esp)$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	e8 1a fd ff ff       	call   f010444b <cprintf>$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	c7 04 24 4e 92 10 f0 	movl   $0xf010924e,(%esp)$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	e8 07 fd ff ff       	call   f010444b <cprintf>$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	c7 04 24 5d 92 10 f0 	movl   $0xf010925d,(%esp)$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	e8 f3 fc ff ff       	call   f010444b <cprintf>$/;"	l
f0104758	obj/kern/kernel.asm	/^f0104758:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	c7 04 24 70 92 10 f0 	movl   $0xf0109270,(%esp)$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	e8 e0 fc ff ff       	call   f010444b <cprintf>$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	74 27                	je     f0104798 <print_trapframe+0x18d>$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	c7 04 24 7f 92 10 f0 	movl   $0xf010927f,(%esp)$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	e8 c7 fc ff ff       	call   f010444b <cprintf>$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	c7 04 24 8e 92 10 f0 	movl   $0xf010928e,(%esp)$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	e8 b3 fc ff ff       	call   f010444b <cprintf>$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	83 c4 10             	add    $0x10,%esp$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	5b                   	pop    %ebx$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	5e                   	pop    %esi$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	5d                   	pop    %ebp$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	c3                   	ret    $/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f <trap_init>:$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	55                   	push   %ebp$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	b8 08 51 10 f0       	mov    $0xf0105108,%eax$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	66 a3 60 52 27 f0    	mov    %ax,0xf0275260$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	66 c7 05 62 52 27 f0 	movw   $0x8,0xf0275262$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	08 00 $/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	c6 05 64 52 27 f0 00 	movb   $0x0,0xf0275264$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	c6 05 65 52 27 f0 8e 	movb   $0x8e,0xf0275265$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	66 a3 66 52 27 f0    	mov    %ax,0xf0275266$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	b8 12 51 10 f0       	mov    $0xf0105112,%eax$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	66 a3 68 52 27 f0    	mov    %ax,0xf0275268$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	66 c7 05 6a 52 27 f0 	movw   $0x8,0xf027526a$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	08 00 $/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	c6 05 6c 52 27 f0 00 	movb   $0x0,0xf027526c$/;"	l
f01047eb	obj/kern/kernel.asm	/^f01047eb:	c6 05 6d 52 27 f0 8e 	movb   $0x8e,0xf027526d$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	66 a3 6e 52 27 f0    	mov    %ax,0xf027526e$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	b8 1c 51 10 f0       	mov    $0xf010511c,%eax$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	66 a3 70 52 27 f0    	mov    %ax,0xf0275270$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	66 c7 05 72 52 27 f0 	movw   $0x8,0xf0275272$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	08 00 $/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	c6 05 74 52 27 f0 00 	movb   $0x0,0xf0275274$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	c6 05 75 52 27 f0 8e 	movb   $0x8e,0xf0275275$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	66 a3 76 52 27 f0    	mov    %ax,0xf0275276$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	b8 26 51 10 f0       	mov    $0xf0105126,%eax$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	66 a3 78 52 27 f0    	mov    %ax,0xf0275278$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	66 c7 05 7a 52 27 f0 	movw   $0x8,0xf027527a$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	08 00 $/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	c6 05 7c 52 27 f0 00 	movb   $0x0,0xf027527c$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	c6 05 7d 52 27 f0 ee 	movb   $0xee,0xf027527d$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010484b	obj/kern/kernel.asm	/^f010484b:	66 a3 7e 52 27 f0    	mov    %ax,0xf027527e$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	b8 3a 51 10 f0       	mov    $0xf010513a,%eax$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	66 a3 88 52 27 f0    	mov    %ax,0xf0275288$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	66 c7 05 8a 52 27 f0 	movw   $0x8,0xf027528a$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	08 00 $/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	c6 05 8c 52 27 f0 00 	movb   $0x0,0xf027528c$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	c6 05 8d 52 27 f0 8e 	movb   $0x8e,0xf027528d$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	66 a3 8e 52 27 f0    	mov    %ax,0xf027528e$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	b8 44 51 10 f0       	mov    $0xf0105144,%eax$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	66 a3 90 52 27 f0    	mov    %ax,0xf0275290$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	66 c7 05 92 52 27 f0 	movw   $0x8,0xf0275292$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	08 00 $/;"	l
f0104890	obj/kern/kernel.asm	/^f0104890:	c6 05 94 52 27 f0 00 	movb   $0x0,0xf0275294$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	c6 05 95 52 27 f0 8e 	movb   $0x8e,0xf0275295$/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	66 a3 96 52 27 f0    	mov    %ax,0xf0275296$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	b8 4e 51 10 f0       	mov    $0xf010514e,%eax$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	66 a3 98 52 27 f0    	mov    %ax,0xf0275298$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	66 c7 05 9a 52 27 f0 	movw   $0x8,0xf027529a$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	08 00 $/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	c6 05 9c 52 27 f0 00 	movb   $0x0,0xf027529c$/;"	l
f01048c2	obj/kern/kernel.asm	/^f01048c2:	c6 05 9d 52 27 f0 8e 	movb   $0x8e,0xf027529d$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	66 a3 9e 52 27 f0    	mov    %ax,0xf027529e$/;"	l
f01048d2	obj/kern/kernel.asm	/^f01048d2:	b8 58 51 10 f0       	mov    $0xf0105158,%eax$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	66 a3 a0 52 27 f0    	mov    %ax,0xf02752a0$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	66 c7 05 a2 52 27 f0 	movw   $0x8,0xf02752a2$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	08 00 $/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	c6 05 a4 52 27 f0 00 	movb   $0x0,0xf02752a4$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	c6 05 a5 52 27 f0 8e 	movb   $0x8e,0xf02752a5$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	66 a3 a6 52 27 f0    	mov    %ax,0xf02752a6$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	b8 60 51 10 f0       	mov    $0xf0105160,%eax$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	66 a3 b0 52 27 f0    	mov    %ax,0xf02752b0$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	66 c7 05 b2 52 27 f0 	movw   $0x8,0xf02752b2$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	08 00 $/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	c6 05 b4 52 27 f0 00 	movb   $0x0,0xf02752b4$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	c6 05 b5 52 27 f0 8e 	movb   $0x8e,0xf02752b5$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	66 a3 b6 52 27 f0    	mov    %ax,0xf02752b6$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	b8 68 51 10 f0       	mov    $0xf0105168,%eax$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	66 a3 b8 52 27 f0    	mov    %ax,0xf02752b8$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	66 c7 05 ba 52 27 f0 	movw   $0x8,0xf02752ba$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	08 00 $/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	c6 05 bc 52 27 f0 00 	movb   $0x0,0xf02752bc$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	c6 05 bd 52 27 f0 8e 	movb   $0x8e,0xf02752bd$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	66 a3 be 52 27 f0    	mov    %ax,0xf02752be$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	b8 70 51 10 f0       	mov    $0xf0105170,%eax$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	66 a3 c0 52 27 f0    	mov    %ax,0xf02752c0$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	66 c7 05 c2 52 27 f0 	movw   $0x8,0xf02752c2$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	08 00 $/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	c6 05 c4 52 27 f0 00 	movb   $0x0,0xf02752c4$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	c6 05 c5 52 27 f0 8e 	movb   $0x8e,0xf02752c5$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	66 a3 c6 52 27 f0    	mov    %ax,0xf02752c6$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	b8 78 51 10 f0       	mov    $0xf0105178,%eax$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	66 a3 c8 52 27 f0    	mov    %ax,0xf02752c8$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	66 c7 05 ca 52 27 f0 	movw   $0x8,0xf02752ca$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	08 00 $/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	c6 05 cc 52 27 f0 00 	movb   $0x0,0xf02752cc$/;"	l
f0104999	obj/kern/kernel.asm	/^f0104999:	c6 05 cd 52 27 f0 8e 	movb   $0x8e,0xf02752cd$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	66 a3 ce 52 27 f0    	mov    %ax,0xf02752ce$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	b8 80 51 10 f0       	mov    $0xf0105180,%eax$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	66 a3 d0 52 27 f0    	mov    %ax,0xf02752d0$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	66 c7 05 d2 52 27 f0 	movw   $0x8,0xf02752d2$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	08 00 $/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	c6 05 d4 52 27 f0 00 	movb   $0x0,0xf02752d4$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	c6 05 d5 52 27 f0 8e 	movb   $0x8e,0xf02752d5$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	66 a3 d6 52 27 f0    	mov    %ax,0xf02752d6$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	b8 88 51 10 f0       	mov    $0xf0105188,%eax$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	66 a3 e0 52 27 f0    	mov    %ax,0xf02752e0$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	66 c7 05 e2 52 27 f0 	movw   $0x8,0xf02752e2$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	08 00 $/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	c6 05 e4 52 27 f0 00 	movb   $0x0,0xf02752e4$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	c6 05 e5 52 27 f0 8e 	movb   $0x8e,0xf02752e5$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	66 a3 e6 52 27 f0    	mov    %ax,0xf02752e6$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	b8 92 51 10 f0       	mov    $0xf0105192,%eax$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	66 a3 e8 52 27 f0    	mov    %ax,0xf02752e8$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	66 c7 05 ea 52 27 f0 	movw   $0x8,0xf02752ea$/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	08 00 $/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	c6 05 ec 52 27 f0 00 	movb   $0x0,0xf02752ec$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	c6 05 ed 52 27 f0 8e 	movb   $0x8e,0xf02752ed$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	66 a3 ee 52 27 f0    	mov    %ax,0xf02752ee$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	b8 9a 51 10 f0       	mov    $0xf010519a,%eax$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	66 a3 f0 52 27 f0    	mov    %ax,0xf02752f0$/;"	l
f0104a35	obj/kern/kernel.asm	/^f0104a35:	66 c7 05 f2 52 27 f0 	movw   $0x8,0xf02752f2$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	08 00 $/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	c6 05 f4 52 27 f0 00 	movb   $0x0,0xf02752f4$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	c6 05 f5 52 27 f0 8e 	movb   $0x8e,0xf02752f5$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	66 a3 f6 52 27 f0    	mov    %ax,0xf02752f6$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	b8 a0 51 10 f0       	mov    $0xf01051a0,%eax$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	66 a3 f8 52 27 f0    	mov    %ax,0xf02752f8$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	66 c7 05 fa 52 27 f0 	movw   $0x8,0xf02752fa$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	08 00 $/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	c6 05 fc 52 27 f0 00 	movb   $0x0,0xf02752fc$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	c6 05 fd 52 27 f0 8e 	movb   $0x8e,0xf02752fd$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	66 a3 fe 52 27 f0    	mov    %ax,0xf02752fe$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	b8 a6 51 10 f0       	mov    $0xf01051a6,%eax$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	66 a3 60 53 27 f0    	mov    %ax,0xf0275360$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	66 c7 05 62 53 27 f0 	movw   $0x8,0xf0275362$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	08 00 $/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	c6 05 64 53 27 f0 00 	movb   $0x0,0xf0275364$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	c6 05 65 53 27 f0 8e 	movb   $0x8e,0xf0275365$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	66 a3 66 53 27 f0    	mov    %ax,0xf0275366$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	b8 ac 51 10 f0       	mov    $0xf01051ac,%eax$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	66 a3 68 53 27 f0    	mov    %ax,0xf0275368$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	66 c7 05 6a 53 27 f0 	movw   $0x8,0xf027536a$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	08 00 $/;"	l
f0104abf	obj/kern/kernel.asm	/^f0104abf:	c6 05 6c 53 27 f0 00 	movb   $0x0,0xf027536c$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	c6 05 6d 53 27 f0 8e 	movb   $0x8e,0xf027536d$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	66 a3 6e 53 27 f0    	mov    %ax,0xf027536e$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	b8 b2 51 10 f0       	mov    $0xf01051b2,%eax$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	66 a3 70 53 27 f0    	mov    %ax,0xf0275370$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	66 c7 05 72 53 27 f0 	movw   $0x8,0xf0275372$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	08 00 $/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	c6 05 74 53 27 f0 00 	movb   $0x0,0xf0275374$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	c6 05 75 53 27 f0 8e 	movb   $0x8e,0xf0275375$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	66 a3 76 53 27 f0    	mov    %ax,0xf0275376$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	b8 b8 51 10 f0       	mov    $0xf01051b8,%eax$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	66 a3 78 53 27 f0    	mov    %ax,0xf0275378$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	66 c7 05 7a 53 27 f0 	movw   $0x8,0xf027537a$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	08 00 $/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	c6 05 7c 53 27 f0 00 	movb   $0x0,0xf027537c$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	c6 05 7d 53 27 f0 8e 	movb   $0x8e,0xf027537d$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	66 a3 7e 53 27 f0    	mov    %ax,0xf027537e$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	b8 be 51 10 f0       	mov    $0xf01051be,%eax$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	66 a3 80 53 27 f0    	mov    %ax,0xf0275380$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	66 c7 05 82 53 27 f0 	movw   $0x8,0xf0275382$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	08 00 $/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	c6 05 84 53 27 f0 00 	movb   $0x0,0xf0275384$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	c6 05 85 53 27 f0 8e 	movb   $0x8e,0xf0275385$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	66 a3 86 53 27 f0    	mov    %ax,0xf0275386$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	b8 c4 51 10 f0       	mov    $0xf01051c4,%eax$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	66 a3 88 53 27 f0    	mov    %ax,0xf0275388$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	66 c7 05 8a 53 27 f0 	movw   $0x8,0xf027538a$/;"	l
f0104b69	obj/kern/kernel.asm	/^f0104b69:	08 00 $/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	c6 05 8c 53 27 f0 00 	movb   $0x0,0xf027538c$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	c6 05 8d 53 27 f0 8e 	movb   $0x8e,0xf027538d$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	66 a3 8e 53 27 f0    	mov    %ax,0xf027538e$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	b8 ca 51 10 f0       	mov    $0xf01051ca,%eax$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	66 a3 90 53 27 f0    	mov    %ax,0xf0275390$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	66 c7 05 92 53 27 f0 	movw   $0x8,0xf0275392$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	08 00 $/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	c6 05 94 53 27 f0 00 	movb   $0x0,0xf0275394$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	c6 05 95 53 27 f0 8e 	movb   $0x8e,0xf0275395$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	66 a3 96 53 27 f0    	mov    %ax,0xf0275396$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	b8 d0 51 10 f0       	mov    $0xf01051d0,%eax$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	66 a3 98 53 27 f0    	mov    %ax,0xf0275398$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	66 c7 05 9a 53 27 f0 	movw   $0x8,0xf027539a$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	08 00 $/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	c6 05 9c 53 27 f0 00 	movb   $0x0,0xf027539c$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	c6 05 9d 53 27 f0 8e 	movb   $0x8e,0xf027539d$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	66 a3 9e 53 27 f0    	mov    %ax,0xf027539e$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	b8 d6 51 10 f0       	mov    $0xf01051d6,%eax$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	66 a3 a0 53 27 f0    	mov    %ax,0xf02753a0$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	66 c7 05 a2 53 27 f0 	movw   $0x8,0xf02753a2$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	08 00 $/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	c6 05 a4 53 27 f0 00 	movb   $0x0,0xf02753a4$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	c6 05 a5 53 27 f0 8e 	movb   $0x8e,0xf02753a5$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	66 a3 a6 53 27 f0    	mov    %ax,0xf02753a6$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	b8 dc 51 10 f0       	mov    $0xf01051dc,%eax$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	66 a3 a8 53 27 f0    	mov    %ax,0xf02753a8$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	66 c7 05 aa 53 27 f0 	movw   $0x8,0xf02753aa$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	08 00 $/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	c6 05 ac 53 27 f0 00 	movb   $0x0,0xf02753ac$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	c6 05 ad 53 27 f0 8e 	movb   $0x8e,0xf02753ad$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	66 a3 ae 53 27 f0    	mov    %ax,0xf02753ae$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	b8 e2 51 10 f0       	mov    $0xf01051e2,%eax$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	66 a3 b0 53 27 f0    	mov    %ax,0xf02753b0$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	66 c7 05 b2 53 27 f0 	movw   $0x8,0xf02753b2$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	08 00 $/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	c6 05 b4 53 27 f0 00 	movb   $0x0,0xf02753b4$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	c6 05 b5 53 27 f0 8e 	movb   $0x8e,0xf02753b5$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	66 a3 b6 53 27 f0    	mov    %ax,0xf02753b6$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	b8 e8 51 10 f0       	mov    $0xf01051e8,%eax$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	66 a3 b8 53 27 f0    	mov    %ax,0xf02753b8$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	66 c7 05 ba 53 27 f0 	movw   $0x8,0xf02753ba$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	08 00 $/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	c6 05 bc 53 27 f0 00 	movb   $0x0,0xf02753bc$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	c6 05 bd 53 27 f0 8e 	movb   $0x8e,0xf02753bd$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	66 a3 be 53 27 f0    	mov    %ax,0xf02753be$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	b8 ee 51 10 f0       	mov    $0xf01051ee,%eax$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	66 a3 c0 53 27 f0    	mov    %ax,0xf02753c0$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	66 c7 05 c2 53 27 f0 	movw   $0x8,0xf02753c2$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	08 00 $/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	c6 05 c4 53 27 f0 00 	movb   $0x0,0xf02753c4$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	c6 05 c5 53 27 f0 8e 	movb   $0x8e,0xf02753c5$/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	66 a3 c6 53 27 f0    	mov    %ax,0xf02753c6$/;"	l
f0104caf	obj/kern/kernel.asm	/^f0104caf:	b8 f4 51 10 f0       	mov    $0xf01051f4,%eax$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	66 a3 c8 53 27 f0    	mov    %ax,0xf02753c8$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	66 c7 05 ca 53 27 f0 	movw   $0x8,0xf02753ca$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	08 00 $/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	c6 05 cc 53 27 f0 00 	movb   $0x0,0xf02753cc$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	c6 05 cd 53 27 f0 8e 	movb   $0x8e,0xf02753cd$/;"	l
f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	66 a3 ce 53 27 f0    	mov    %ax,0xf02753ce$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	b8 fa 51 10 f0       	mov    $0xf01051fa,%eax$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	66 a3 d0 53 27 f0    	mov    %ax,0xf02753d0$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	66 c7 05 d2 53 27 f0 	movw   $0x8,0xf02753d2$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	08 00 $/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	c6 05 d4 53 27 f0 00 	movb   $0x0,0xf02753d4$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	c6 05 d5 53 27 f0 8e 	movb   $0x8e,0xf02753d5$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	66 a3 d6 53 27 f0    	mov    %ax,0xf02753d6$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	b8 00 52 10 f0       	mov    $0xf0105200,%eax$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	66 a3 d8 53 27 f0    	mov    %ax,0xf02753d8$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	66 c7 05 da 53 27 f0 	movw   $0x8,0xf02753da$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	08 00 $/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	c6 05 dc 53 27 f0 00 	movb   $0x0,0xf02753dc$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	c6 05 dd 53 27 f0 8e 	movb   $0x8e,0xf02753dd$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	66 a3 de 53 27 f0    	mov    %ax,0xf02753de$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	0f 30                	wrmsr  $/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	b8 00 00 c0 ef       	mov    $0xefc00000,%eax$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	b1 75                	mov    $0x75,%cl$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	0f 30                	wrmsr  $/;"	l
f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	b8 06 52 10 f0       	mov    $0xf0105206,%eax$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	b1 76                	mov    $0x76,%cl$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	0f 30                	wrmsr  $/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	c7 04 24 a1 92 10 f0 	movl   $0xf01092a1,(%esp)$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	e8 ec f6 ff ff       	call   f010444b <cprintf>$/;"	l
f0104d5f	obj/kern/kernel.asm	/^f0104d5f:	e8 2c f7 ff ff       	call   f0104490 <trap_init_percpu>$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	c9                   	leave  $/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	c3                   	ret    $/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66 <page_fault_handler>:$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	55                   	push   %ebp$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	75 1c                	jne    f0104d9d <page_fault_handler+0x37>$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	c7 44 24 08 b9 92 10 	movl   $0xf01092b9,0x8(%esp)$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	f0 $/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	c7 44 24 04 86 01 00 	movl   $0x186,0x4(%esp)$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	00 $/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	c7 04 24 d1 92 10 f0 	movl   $0xf01092d1,(%esp)$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	e8 e8 b2 ff ff       	call   f0100085 <_panic>$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	e8 70 22 00 00       	call   f0107012 <cpunum>$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	0f 84 f9 00 00 00    	je     f0104eae <page_fault_handler+0x148>$/;"	l
f0104db5	obj/kern/kernel.asm	/^f0104db5:	8b 46 3c             	mov    0x3c(%esi),%eax$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	0f 42 d0             	cmovb  %eax,%edx$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	e8 3b 22 00 00       	call   f0107012 <cpunum>$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	00 $/;"	l
f0104ddf	obj/kern/kernel.asm	/^f0104ddf:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	00 $/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	e8 e3 ca ff ff       	call   f01018e2 <user_mem_assert>$/;"	l
f0104dff	obj/kern/kernel.asm	/^f0104dff:	8b 46 38             	mov    0x38(%esi),%eax$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	8b 46 30             	mov    0x30(%esi),%eax$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	8b 46 2c             	mov    0x2c(%esi),%eax$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	8b 46 3c             	mov    0x3c(%esi),%eax$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	89 1a                	mov    %ebx,(%edx)$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	89 d7                	mov    %edx,%edi$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	83 c7 08             	add    $0x8,%edi$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	74 04                	je     f0104e32 <page_fault_handler+0xcc>$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	74 05                	je     f0104e3f <page_fault_handler+0xd9>$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	89 c1                	mov    %eax,%ecx$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	a8 02                	test   $0x2,%al$/;"	l
f0104e4d	obj/kern/kernel.asm	/^f0104e4d:	74 0b                	je     f0104e5a <page_fault_handler+0xf4>$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	0f b7 0c 16          	movzwl (%esi,%edx,1),%ecx$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	66 89 0c 17          	mov    %cx,(%edi,%edx,1)$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	83 c2 02             	add    $0x2,%edx$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	a8 01                	test   $0x1,%al$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	74 07                	je     f0104e65 <page_fault_handler+0xff>$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	e8 a8 21 00 00       	call   f0107012 <cpunum>$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	bb 20 80 27 f0       	mov    $0xf0278020,%ebx$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	8b 74 18 08          	mov    0x8(%eax,%ebx,1),%esi$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	e8 97 21 00 00       	call   f0107012 <cpunum>$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	89 46 30             	mov    %eax,0x30(%esi)$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	e8 85 21 00 00       	call   f0107012 <cpunum>$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	e8 73 21 00 00       	call   f0107012 <cpunum>$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	e8 a3 ed ff ff       	call   f0103c51 <env_run>$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	8b 7e 30             	mov    0x30(%esi),%edi$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	e8 5c 21 00 00       	call   f0107012 <cpunum>$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	bb 20 80 27 f0       	mov    $0xf0278020,%ebx$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	c7 04 24 78 94 10 f0 	movl   $0xf0109478,(%esp)$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	e8 6e f5 ff ff       	call   f010444b <cprintf>$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	e8 26 f7 ff ff       	call   f010460b <print_trapframe>$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	e8 28 21 00 00       	call   f0107012 <cpunum>$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	e8 d8 ef ff ff       	call   f0103ed1 <env_destroy>$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	89 ec                	mov    %ebp,%esp$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	5d                   	pop    %ebp$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	c3                   	ret    $/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06 <trap>:$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	55                   	push   %ebp$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	fc                   	cld    $/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	83 3d 8c 5e 27 f0 00 	cmpl   $0x0,0xf0275e8c$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	74 01                	je     f0104f23 <trap+0x1d>$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	f4                   	hlt    $/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	9c                   	pushf  $/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	58                   	pop    %eax$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	74 24                	je     f0104f4e <trap+0x48>$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	c7 44 24 0c dd 92 10 	movl   $0xf01092dd,0xc(%esp)$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	f0 $/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0104f39	obj/kern/kernel.asm	/^f0104f39:	f0 $/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	c7 44 24 04 50 01 00 	movl   $0x150,0x4(%esp)$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	00 $/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	c7 04 24 d1 92 10 f0 	movl   $0xf01092d1,(%esp)$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	e8 37 b1 ff ff       	call   f0100085 <_panic>$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	0f 85 a9 00 00 00    	jne    f0105007 <trap+0x101>$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	e8 af 20 00 00       	call   f0107012 <cpunum>$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	83 b8 28 80 27 f0 00 	cmpl   $0x0,-0xfd87fd8(%eax)$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	75 24                	jne    f0104f93 <trap+0x8d>$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	c7 44 24 0c f6 92 10 	movl   $0xf01092f6,0xc(%esp)$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	f0 $/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	f0 $/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	00 $/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	c7 04 24 d1 92 10 f0 	movl   $0xf01092d1,(%esp)$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	e8 f2 b0 ff ff       	call   f0100085 <_panic>$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	c7 04 24 80 53 12 f0 	movl   $0xf0125380,(%esp)$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	e8 36 24 00 00       	call   f01073d5 <spin_lock>$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	e8 6e 20 00 00       	call   f0107012 <cpunum>$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	75 2e                	jne    f0104fe1 <trap+0xdb>$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	e8 5a 20 00 00       	call   f0107012 <cpunum>$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	be 20 80 27 f0       	mov    $0xf0278020,%esi$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	8b 44 30 08          	mov    0x8(%eax,%esi,1),%eax$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	e8 33 ed ff ff       	call   f0103cff <env_free>$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	e8 41 20 00 00       	call   f0107012 <cpunum>$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	c7 44 30 08 00 00 00 	movl   $0x0,0x8(%eax,%esi,1)$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	00 $/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	e8 5f 02 00 00       	call   f0105240 <sched_yield>$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	e8 2c 20 00 00       	call   f0107012 <cpunum>$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	bb 20 80 27 f0       	mov    $0xf0278020,%ebx$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	89 c7                	mov    %eax,%edi$/;"	l
f0104ff9	obj/kern/kernel.asm	/^f0104ff9:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	e8 12 20 00 00       	call   f0107012 <cpunum>$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	8b 74 18 08          	mov    0x8(%eax,%ebx,1),%esi$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	89 35 64 5a 27 f0    	mov    %esi,0xf0275a64$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	75 19                	jne    f010502e <trap+0x128>$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	c7 04 24 fd 92 10 f0 	movl   $0xf01092fd,(%esp)$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	e8 2a f4 ff ff       	call   f010444b <cprintf>$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	e8 e2 f5 ff ff       	call   f010460b <print_trapframe>$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	e9 9a 00 00 00       	jmp    f01050c8 <trap+0x1c2>$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	75 28                	jne    f010505b <trap+0x155>$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	83 3d 60 5a 27 f0 00 	cmpl   $0x0,0xf0275a60$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	75 05                	jne    f0105041 <trap+0x13b>$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	e8 7d 2c 00 00       	call   f0107cbe <time_tick>$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	8b 15 60 5a 27 f0    	mov    0xf0275a60,%edx$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	83 c2 01             	add    $0x1,%edx$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	89 d0                	mov    %edx,%eax$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	f7 3d c4 83 27 f0    	idivl  0xf02783c4$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	89 15 60 5a 27 f0    	mov    %edx,0xf0275a60$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	75 08                	jne    f0105069 <trap+0x163>$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	e8 fd fc ff ff       	call   f0104d66 <page_fault_handler>$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	83 7e 28 03          	cmpl   $0x3,0x28(%esi)$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	75 08                	jne    f0105077 <trap+0x171>$/;"	l
f010506f	obj/kern/kernel.asm	/^f010506f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	e8 ac ba ff ff       	call   f0100b23 <monitor>$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	83 7e 28 20          	cmpl   $0x20,0x28(%esi)$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	75 0a                	jne    f0105087 <trap+0x181>$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	e8 c9 20 00 00       	call   f010714b <lapic_eoi>$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	e8 b9 01 00 00       	call   f0105240 <sched_yield>$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	e8 7c f5 ff ff       	call   f010460b <print_trapframe>$/;"	l
f010508f	obj/kern/kernel.asm	/^f010508f:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	75 1c                	jne    f01050b2 <trap+0x1ac>$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	c7 44 24 08 1a 93 10 	movl   $0xf010931a,0x8(%esp)$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	f0 $/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	c7 44 24 04 3b 01 00 	movl   $0x13b,0x4(%esp)$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	00 $/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	c7 04 24 d1 92 10 f0 	movl   $0xf01092d1,(%esp)$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	e8 d3 af ff ff       	call   f0100085 <_panic>$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	e8 5b 1f 00 00       	call   f0107012 <cpunum>$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	e8 09 ee ff ff       	call   f0103ed1 <env_destroy>$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	e8 45 1f 00 00       	call   f0107012 <cpunum>$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	83 b8 28 80 27 f0 00 	cmpl   $0x0,-0xfd87fd8(%eax)$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	74 2a                	je     f0105103 <trap+0x1fd>$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	e8 34 1f 00 00       	call   f0107012 <cpunum>$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	75 16                	jne    f0105103 <trap+0x1fd>$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	e8 20 1f 00 00       	call   f0107012 <cpunum>$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	e8 4e eb ff ff       	call   f0103c51 <env_run>$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	e8 38 01 00 00       	call   f0105240 <sched_yield>$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108 <t_divide>:$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	6a 00                	push   $0x0$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	6a 00                	push   $0x0$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	e9 0b 01 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	90                   	nop$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112 <t_debug>:$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	6a 00                	push   $0x0$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	6a 01                	push   $0x1$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	e9 01 01 00 00       	jmp    f010521c <_alltraps>$/;"	l
f010511b	obj/kern/kernel.asm	/^f010511b:	90                   	nop$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c <t_nmi>:$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	6a 00                	push   $0x0$/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	6a 02                	push   $0x2$/;"	l
f0105120	obj/kern/kernel.asm	/^f0105120:	e9 f7 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	90                   	nop$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126 <t_brkpt>:$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	6a 00                	push   $0x0$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	6a 03                	push   $0x3$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	e9 ed 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	90                   	nop$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130 <t_oflow>:$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	6a 00                	push   $0x0$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	6a 04                	push   $0x4$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	e9 e3 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	90                   	nop$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a <t_bound>:$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	6a 00                	push   $0x0$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	6a 05                	push   $0x5$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	e9 d9 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	90                   	nop$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144 <t_illop>:$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	6a 00                	push   $0x0$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	6a 06                	push   $0x6$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	e9 cf 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	90                   	nop$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e <t_device>:$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	6a 00                	push   $0x0$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	6a 07                	push   $0x7$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	e9 c5 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	90                   	nop$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158 <t_dblflt>:$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	6a 08                	push   $0x8$/;"	l
f010515a	obj/kern/kernel.asm	/^f010515a:	e9 bd 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	90                   	nop$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160 <t_tss>:$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	6a 0a                	push   $0xa$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	e9 b5 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	90                   	nop$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168 <t_segnp>:$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	6a 0b                	push   $0xb$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	e9 ad 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	90                   	nop$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170 <t_stack>:$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	6a 0c                	push   $0xc$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	e9 a5 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	90                   	nop$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178 <t_gpflt>:$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	6a 0d                	push   $0xd$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	e9 9d 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	90                   	nop$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180 <t_pgflt>:$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	6a 0e                	push   $0xe$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	e9 95 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	90                   	nop$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188 <t_fperr>:$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	6a 00                	push   $0x0$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	6a 10                	push   $0x10$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	e9 8b 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105191	obj/kern/kernel.asm	/^f0105191:	90                   	nop$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192 <t_align>:$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	6a 11                	push   $0x11$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	e9 83 00 00 00       	jmp    f010521c <_alltraps>$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	90                   	nop$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a <t_mchk>:$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	6a 00                	push   $0x0$/;"	l
f010519c	obj/kern/kernel.asm	/^f010519c:	6a 12                	push   $0x12$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	eb 7c                	jmp    f010521c <_alltraps>$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0 <t_simderr>:$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	6a 00                	push   $0x0$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	6a 13                	push   $0x13$/;"	l
f01051a4	obj/kern/kernel.asm	/^f01051a4:	eb 76                	jmp    f010521c <_alltraps>$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6 <t_irq0>:$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	6a 00                	push   $0x0$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	6a 20                	push   $0x20$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	eb 70                	jmp    f010521c <_alltraps>$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac <t_irq1>:$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	6a 00                	push   $0x0$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	6a 21                	push   $0x21$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	eb 6a                	jmp    f010521c <_alltraps>$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2 <t_irq2>:$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	6a 00                	push   $0x0$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	6a 22                	push   $0x22$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	eb 64                	jmp    f010521c <_alltraps>$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8 <t_irq3>:$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	6a 00                	push   $0x0$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	6a 23                	push   $0x23$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	eb 5e                	jmp    f010521c <_alltraps>$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be <t_irq4>:$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	6a 00                	push   $0x0$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	6a 24                	push   $0x24$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	eb 58                	jmp    f010521c <_alltraps>$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4 <t_irq5>:$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	6a 00                	push   $0x0$/;"	l
f01051c6	obj/kern/kernel.asm	/^f01051c6:	6a 25                	push   $0x25$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	eb 52                	jmp    f010521c <_alltraps>$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca <t_irq6>:$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	6a 00                	push   $0x0$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	6a 26                	push   $0x26$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	eb 4c                	jmp    f010521c <_alltraps>$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0 <t_irq7>:$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	6a 00                	push   $0x0$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	6a 27                	push   $0x27$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	eb 46                	jmp    f010521c <_alltraps>$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6 <t_irq8>:$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	6a 00                	push   $0x0$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	6a 28                	push   $0x28$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	eb 40                	jmp    f010521c <_alltraps>$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc <t_irq9>:$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc:	6a 00                	push   $0x0$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	6a 29                	push   $0x29$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	eb 3a                	jmp    f010521c <_alltraps>$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2 <t_irq10>:$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	6a 00                	push   $0x0$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	6a 2a                	push   $0x2a$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	eb 34                	jmp    f010521c <_alltraps>$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8 <t_irq11>:$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	6a 00                	push   $0x0$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	6a 2b                	push   $0x2b$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	eb 2e                	jmp    f010521c <_alltraps>$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee <t_irq12>:$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	6a 00                	push   $0x0$/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	6a 2c                	push   $0x2c$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	eb 28                	jmp    f010521c <_alltraps>$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4 <t_irq13>:$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	6a 00                	push   $0x0$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	6a 2d                	push   $0x2d$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	eb 22                	jmp    f010521c <_alltraps>$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa <t_irq14>:$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	6a 00                	push   $0x0$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	6a 2e                	push   $0x2e$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	eb 1c                	jmp    f010521c <_alltraps>$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200 <t_irq15>:$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	6a 00                	push   $0x0$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	6a 2f                	push   $0x2f$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	eb 16                	jmp    f010521c <_alltraps>$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206 <sysenter_handler>:$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	6a 00                	push   $0x0$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	57                   	push   %edi$/;"	l
f0105209	obj/kern/kernel.asm	/^f0105209:	53                   	push   %ebx$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	51                   	push   %ecx$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	52                   	push   %edx$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	50                   	push   %eax$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	e8 b7 01 00 00       	call   f01053c9 <syscall>$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	89 f2                	mov    %esi,%edx$/;"	l
f0105217	obj/kern/kernel.asm	/^f0105217:	89 e9                	mov    %ebp,%ecx$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	fb                   	sti    $/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	0f 35                	sysexit $/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c <_alltraps>:$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	66 6a 00             	pushw  $0x0$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	66 1e                	pushw  %ds$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	66 6a 00             	pushw  $0x0$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	66 06                	pushw  %es$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	60                   	pusha  $/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	8e d8                	mov    %eax,%ds$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	8e c0                	mov    %eax,%es$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	54                   	push   %esp$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	e8 d0 fc ff ff       	call   f0104f06 <trap>$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240 <sched_yield>:$/;"	l
f0105240	obj/kern/kernel.asm	/^f0105240:	55                   	push   %ebp$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	89 e5                	mov    %esp,%ebp$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	57                   	push   %edi$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	56                   	push   %esi$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	53                   	push   %ebx$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	e8 c4 1d 00 00       	call   f0107012 <cpunum>$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256:	83 ba 28 80 27 f0 00 	cmpl   $0x0,-0xfd87fd8(%edx)$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	74 19                	je     f0105278 <sched_yield+0x38>$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	e8 ae 1d 00 00       	call   f0107012 <cpunum>$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	8b 3d 40 52 27 f0    	mov    0xf0275240,%edi$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105283	obj/kern/kernel.asm	/^f0105283:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	0f 4d c6             	cmovge %esi,%eax$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	6b d8 7c             	imul   $0x7c,%eax,%ebx$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	8d 0c 1f             	lea    (%edi,%ebx,1),%ecx$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	83 79 48 00          	cmpl   $0x0,0x48(%ecx)$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	74 29                	je     f01052c5 <sched_yield+0x85>$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	83 79 50 01          	cmpl   $0x1,0x50(%ecx)$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	74 23                	je     f01052c5 <sched_yield+0x85>$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	8b 49 54             	mov    0x54(%ecx),%ecx$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	83 f9 03             	cmp    $0x3,%ecx$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	74 1b                	je     f01052c5 <sched_yield+0x85>$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	75 13                	jne    f01052c5 <sched_yield+0x85>$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	e8 5b 1d 00 00       	call   f0107012 <cpunum>$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	03 1d 40 52 27 f0    	add    0xf0275240,%ebx$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	e8 8c e9 ff ff       	call   f0103c51 <env_run>$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	74 05                	je     f01052d5 <sched_yield+0x95>$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	eb b3                	jmp    f0105288 <sched_yield+0x48>$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	e8 38 1d 00 00       	call   f0107012 <cpunum>$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	83 b8 28 80 27 f0 00 	cmpl   $0x0,-0xfd87fd8(%eax)$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	74 14                	je     f01052fa <sched_yield+0xba>$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	e8 27 1d 00 00       	call   f0107012 <cpunum>$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f01052f4	obj/kern/kernel.asm	/^f01052f4:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	74 0f                	je     f0105309 <sched_yield+0xc9>$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	8b 1d 40 52 27 f0    	mov    0xf0275240,%ebx$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	89 d8                	mov    %ebx,%eax$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	eb 16                	jmp    f010531f <sched_yield+0xdf>$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	e8 04 1d 00 00       	call   f0107012 <cpunum>$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105311	obj/kern/kernel.asm	/^f0105311:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	e8 32 e9 ff ff       	call   f0103c51 <env_run>$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	83 78 50 01          	cmpl   $0x1,0x50(%eax)$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	74 0b                	je     f0105330 <sched_yield+0xf0>$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	8b 48 54             	mov    0x54(%eax),%ecx$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	83 e9 02             	sub    $0x2,%ecx$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	76 10                	jbe    f0105340 <sched_yield+0x100>$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105333	obj/kern/kernel.asm	/^f0105333:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	75 e1                	jne    f010531f <sched_yield+0xdf>$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	eb 08                	jmp    f0105348 <sched_yield+0x108>$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	75 1a                	jne    f0105362 <sched_yield+0x122>$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	c7 04 24 f0 94 10 f0 	movl   $0xf01094f0,(%esp)$/;"	l
f010534f	obj/kern/kernel.asm	/^f010534f:	e8 f7 f0 ff ff       	call   f010444b <cprintf>$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	e8 c3 b7 ff ff       	call   f0100b23 <monitor>$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	eb f2                	jmp    f0105354 <sched_yield+0x114>$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	e8 ab 1c 00 00       	call   f0107012 <cpunum>$/;"	l
f0105367	obj/kern/kernel.asm	/^f0105367:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	01 c3                	add    %eax,%ebx$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	8b 43 54             	mov    0x54(%ebx),%eax$/;"	l
f010536f	obj/kern/kernel.asm	/^f010536f:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	76 25                	jbe    f010539c <sched_yield+0x15c>$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	e8 96 1c 00 00       	call   f0107012 <cpunum>$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	c7 44 24 08 10 95 10 	movl   $0xf0109510,0x8(%esp)$/;"	l
f0105387	obj/kern/kernel.asm	/^f0105387:	f0 $/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	00 $/;"	l
f0105390	obj/kern/kernel.asm	/^f0105390:	c7 04 24 2d 95 10 f0 	movl   $0xf010952d,(%esp)$/;"	l
f0105397	obj/kern/kernel.asm	/^f0105397:	e8 e9 ac ff ff       	call   f0100085 <_panic>$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	e8 ad e8 ff ff       	call   f0103c51 <env_run>$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0 <sys_getenvid>:$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	55                   	push   %ebp$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	e8 57 1c 00 00       	call   f0107012 <cpunum>$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	c9                   	leave  $/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	c3                   	ret    $/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9 <syscall>:$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	55                   	push   %ebp$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	57                   	push   %edi$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	56                   	push   %esi$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	53                   	push   %ebx$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	c7 04 24 80 53 12 f0 	movl   $0xf0125380,(%esp)$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	e8 f7 1f 00 00       	call   f01073d5 <spin_lock>$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	e8 2f 1c 00 00       	call   f0107012 <cpunum>$/;"	l
f01053e3	obj/kern/kernel.asm	/^f01053e3:	bf 20 80 27 f0       	mov    $0xf0278020,%edi$/;"	l
f01053e8	obj/kern/kernel.asm	/^f01053e8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	8b 5c 38 08          	mov    0x8(%eax,%edi,1),%ebx$/;"	l
f01053ef	obj/kern/kernel.asm	/^f01053ef:	e8 1e 1c 00 00       	call   f0107012 <cpunum>$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	89 c2                	mov    %eax,%edx$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	8b 45 00             	mov    0x0(%ebp),%eax$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	89 43 18             	mov    %eax,0x18(%ebx)$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	6b d2 74             	imul   $0x74,%edx,%edx$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	8b 44 3a 08          	mov    0x8(%edx,%edi,1),%eax$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	e8 07 1c 00 00       	call   f0107012 <cpunum>$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	8b 44 38 08          	mov    0x8(%eax,%edi,1),%eax$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	c7 40 28 30 00 00 00 	movl   $0x30,0x28(%eax)$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	e8 f4 1b 00 00       	call   f0107012 <cpunum>$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	8b 44 38 08          	mov    0x8(%eax,%edi,1),%eax$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f010542c	obj/kern/kernel.asm	/^f010542c:	83 7d 08 10          	cmpl   $0x10,0x8(%ebp)$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	0f 87 89 07 00 00    	ja     f0105bbf <syscall+0x7f6>$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	ff 24 85 50 95 10 f0 	jmp    *-0xfef6ab0(,%eax,4)$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	e8 cd 1b 00 00       	call   f0107012 <cpunum>$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	00 $/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105457	obj/kern/kernel.asm	/^f0105457:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	e8 76 c4 ff ff       	call   f01018e2 <user_mem_assert>$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105473	obj/kern/kernel.asm	/^f0105473:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	c7 04 24 3a 95 10 f0 	movl   $0xf010953a,(%esp)$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	e8 c5 ef ff ff       	call   f010444b <cprintf>$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	e9 34 07 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	e8 17 b0 ff ff       	call   f01004ac <cons_getc>$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	89 c6                	mov    %eax,%esi$/;"	l
f0105497	obj/kern/kernel.asm	/^f0105497:	e9 28 07 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	e8 0b ff ff ff       	call   f01053b0 <sys_getenvid>$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	89 c6                	mov    %eax,%esi$/;"	l
f01054a7	obj/kern/kernel.asm	/^f01054a7:	e9 18 07 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	00 $/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	e8 24 e6 ff ff       	call   f0103aea <envid2env>$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	89 c6                	mov    %eax,%esi$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	85 c0                	test   %eax,%eax$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	0f 88 f4 06 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	e8 f6 e9 ff ff       	call   f0103ed1 <env_destroy>$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	e9 df 06 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	81 7d 0c ff ff ff ef 	cmpl   $0xefffffff,0xc(%ebp)$/;"	l
f01054ec	obj/kern/kernel.asm	/^f01054ec:	77 23                	ja     f0105511 <syscall+0x148>$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	f0 $/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	00 $/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	c7 04 24 3f 95 10 f0 	movl   $0xf010953f,(%esp)$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	e8 74 ab ff ff       	call   f0100085 <_panic>$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	3b 1d 94 5e 27 f0    	cmp    0xf0275e94,%ebx$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	72 1c                	jb     f0105541 <syscall+0x178>$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	c7 44 24 08 48 86 10 	movl   $0xf0108648,0x8(%esp)$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	f0 $/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	00 $/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	e8 44 ab ff ff       	call   f0100085 <_panic>$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	be 03 00 00 00       	mov    $0x3,%esi$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	03 1d 9c 5e 27 f0    	add    0xf0275e9c,%ebx$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	0f 84 6f 06 00 00    	je     f0105bc4 <syscall+0x7fb>$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	e8 b8 1a 00 00       	call   f0107012 <cpunum>$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	00 $/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	e8 76 c4 ff ff       	call   f01019f7 <page_insert>$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	89 c6                	mov    %eax,%esi$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	e9 3c 06 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	e8 b3 fc ff ff       	call   f0105240 <sched_yield>$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	e8 1b fe ff ff       	call   f01053b0 <sys_getenvid>$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	e8 8b e9 ff ff       	call   f0103f2f <env_alloc>$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	89 c6                	mov    %eax,%esi$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	85 c0                	test   %eax,%eax$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	0f 88 16 06 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	e8 52 1a 00 00       	call   f0107012 <cpunum>$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	bb 20 80 27 f0       	mov    $0xf0278020,%ebx$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	89 46 18             	mov    %eax,0x18(%esi)$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	e8 38 1a 00 00       	call   f0107012 <cpunum>$/;"	l
f01055da	obj/kern/kernel.asm	/^f01055da:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	8b 44 18 08          	mov    0x8(%eax,%ebx,1),%eax$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	89 46 14             	mov    %eax,0x14(%esi)$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01055f4	obj/kern/kernel.asm	/^f01055f4:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	c7 40 28 30 00 00 00 	movl   $0x30,0x28(%eax)$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	e9 b4 05 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	74 0e                	je     f0105626 <syscall+0x25d>$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	0f 85 9e 05 00 00    	jne    f0105bc4 <syscall+0x7fb>$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	00 $/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	e8 aa e4 ff ff       	call   f0103aea <envid2env>$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	89 c6                	mov    %eax,%esi$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	85 c0                	test   %eax,%eax$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	0f 88 7a 05 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	89 50 54             	mov    %edx,0x54(%eax)$/;"	l
f0105653	obj/kern/kernel.asm	/^f0105653:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	e8 ad ef ff ff       	call   f010460b <print_trapframe>$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	e9 5c 05 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	0f 87 ed 00 00 00    	ja     f0105764 <syscall+0x39b>$/;"	l
f0105677	obj/kern/kernel.asm	/^f0105677:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	83 e0 05             	and    $0x5,%eax$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	0f 85 de 00 00 00    	jne    f0105764 <syscall+0x39b>$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0105689	obj/kern/kernel.asm	/^f0105689:	f7 c7 f8 f1 ff ff    	test   $0xfffff1f8,%edi$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	0f 85 cf 00 00 00    	jne    f0105764 <syscall+0x39b>$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	00 $/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	e8 3b e4 ff ff       	call   f0103aea <envid2env>$/;"	l
f01056af	obj/kern/kernel.asm	/^f01056af:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	85 c0                	test   %eax,%eax$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	0f 88 08 05 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	e8 e6 bf ff ff       	call   f01016ae <page_alloc>$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	89 c6                	mov    %eax,%esi$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	85 c0                	test   %eax,%eax$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	0f 84 92 00 00 00    	je     f0105764 <syscall+0x39b>$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	e8 0b c3 ff ff       	call   f01019f7 <page_insert>$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	85 c0                	test   %eax,%eax$/;"	l
f01056ee	obj/kern/kernel.asm	/^f01056ee:	79 12                	jns    f0105702 <syscall+0x339>$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	e8 9f b6 ff ff       	call   f0100d97 <page_free>$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	e9 c2 04 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	89 f0                	mov    %esi,%eax$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	2b 05 9c 5e 27 f0    	sub    0xf0275e9c,%eax$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	89 c2                	mov    %eax,%edx$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	3b 15 94 5e 27 f0    	cmp    0xf0275e94,%edx$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	72 20                	jb     f010573d <syscall+0x374>$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	f0 $/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	00 $/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	c7 04 24 ad 8c 10 f0 	movl   $0xf0108cad,(%esp)$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	e8 48 a9 ff ff       	call   f0100085 <_panic>$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	00 $/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	00 $/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	e8 0c 12 00 00       	call   f0106966 <memset>$/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	e9 60 04 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	e9 56 04 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	0f 87 e5 00 00 00    	ja     f0105862 <syscall+0x499>$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	89 d8                	mov    %ebx,%eax$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	39 c3                	cmp    %eax,%ebx$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	0f 85 d1 00 00 00    	jne    f0105862 <syscall+0x499>$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	89 c7                	mov    %eax,%edi$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	0f 87 bc 00 00 00    	ja     f0105862 <syscall+0x499>$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	39 c0                	cmp    %eax,%eax$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	0f 85 b4 00 00 00    	jne    f0105862 <syscall+0x499>$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	81 e6 ff 0f 00 00    	and    $0xfff,%esi$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	83 e0 05             	and    $0x5,%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	0f 85 9c 00 00 00    	jne    f0105862 <syscall+0x499>$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	f7 c6 f8 f1 ff ff    	test   $0xfffff1f8,%esi$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	0f 85 90 00 00 00    	jne    f0105862 <syscall+0x499>$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	00 $/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	e8 fe e2 ff ff       	call   f0103aea <envid2env>$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	85 c0                	test   %eax,%eax$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	78 7c                	js     f010586c <syscall+0x4a3>$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	00 $/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	e8 e0 e2 ff ff       	call   f0103aea <envid2env>$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	85 c0                	test   %eax,%eax$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	78 5e                	js     f010586c <syscall+0x4a3>$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	e8 13 c1 ff ff       	call   f010193a <page_lookup>$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	85 c0                	test   %eax,%eax$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	74 37                	je     f0105862 <syscall+0x499>$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	f7 c6 02 00 00 00    	test   $0x2,%esi$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	74 08                	je     f010583b <syscall+0x472>$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105836	obj/kern/kernel.asm	/^f0105836:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	74 27                	je     f0105862 <syscall+0x499>$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	e8 a2 c1 ff ff       	call   f01019f7 <page_insert>$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	89 c6                	mov    %eax,%esi$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	c1 fe 1f             	sar    $0x1f,%esi$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	83 e6 fc             	and    $0xfffffffc,%esi$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	e9 62 03 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	e9 58 03 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	e9 4e 03 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105879	obj/kern/kernel.asm	/^f0105879:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	90                   	nop$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	77 53                	ja     f01058d5 <syscall+0x50c>$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	89 d8                	mov    %ebx,%eax$/;"	l
f0105884	obj/kern/kernel.asm	/^f0105884:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	75 43                	jne    f01058d5 <syscall+0x50c>$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	00 $/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01058a4	obj/kern/kernel.asm	/^f01058a4:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	e8 3e e2 ff ff       	call   f0103aea <envid2env>$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	85 c0                	test   %eax,%eax$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	0f 88 0b 03 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01058c3	obj/kern/kernel.asm	/^f01058c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	e8 dc c0 ff ff       	call   f01019a7 <page_remove>$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	e9 ef 02 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	e9 e5 02 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	00 $/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	e8 f1 e1 ff ff       	call   f0103aea <envid2env>$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	85 c0                	test   %eax,%eax$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	0f 88 be 02 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	89 50 64             	mov    %edx,0x64(%eax)$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	e9 ab 02 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	77 0f                	ja     f0105933 <syscall+0x56a>$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	89 d8                	mov    %ebx,%eax$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	0f 85 8c 02 00 00    	jne    f0105bbf <syscall+0x7f6>$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	e8 da 16 00 00       	call   f0107012 <cpunum>$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	be 20 80 27 f0       	mov    $0xf0278020,%esi$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	8b 44 30 08          	mov    0x8(%eax,%esi,1),%eax$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	89 58 6c             	mov    %ebx,0x6c(%eax)$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	e8 c6 16 00 00       	call   f0107012 <cpunum>$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	8b 44 30 08          	mov    0x8(%eax,%esi,1),%eax$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%eax)$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	e8 b3 16 00 00       	call   f0107012 <cpunum>$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	8b 44 30 08          	mov    0x8(%eax,%esi,1),%eax$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	e8 a0 16 00 00       	call   f0107012 <cpunum>$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105975	obj/kern/kernel.asm	/^f0105975:	8b 44 30 08          	mov    0x8(%eax,%esi,1),%eax$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	e8 bb f8 ff ff       	call   f0105240 <sched_yield>$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	00 $/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105994	obj/kern/kernel.asm	/^f0105994:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	e8 4b e1 ff ff       	call   f0103aea <envid2env>$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	85 c0                	test   %eax,%eax$/;"	l
f01059a6	obj/kern/kernel.asm	/^f01059a6:	0f 88 18 02 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	83 78 68 00          	cmpl   $0x0,0x68(%eax)$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	0f 84 0e 01 00 00    	je     f0105ac7 <syscall+0x6fe>$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	83 78 74 00          	cmpl   $0x0,0x74(%eax)$/;"	l
f01059bd	obj/kern/kernel.asm	/^f01059bd:	0f 85 04 01 00 00    	jne    f0105ac7 <syscall+0x6fe>$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	0f 87 a4 00 00 00    	ja     f0105a76 <syscall+0x6ad>$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	89 da                	mov    %ebx,%edx$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	39 d3                	cmp    %edx,%ebx$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	0f 85 e9 00 00 00    	jne    f0105ad1 <syscall+0x708>$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	83 e2 05             	and    $0x5,%edx$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	0f 85 da 00 00 00    	jne    f0105ad1 <syscall+0x708>$/;"	l
f01059f7	obj/kern/kernel.asm	/^f01059f7:	f7 45 18 f8 f1 ff ff 	testl  $0xfffff1f8,0x18(%ebp)$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	0f 85 cd 00 00 00    	jne    f0105ad1 <syscall+0x708>$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	e8 02 16 00 00       	call   f0107012 <cpunum>$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	e8 0b bf ff ff       	call   f010193a <page_lookup>$/;"	l
f0105a2f	obj/kern/kernel.asm	/^f0105a2f:	85 c0                	test   %eax,%eax$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	0f 84 9a 00 00 00    	je     f0105ad1 <syscall+0x708>$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	74 0c                	je     f0105a49 <syscall+0x680>$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	0f 84 88 00 00 00    	je     f0105ad1 <syscall+0x708>$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	e8 8e bf ff ff       	call   f01019f7 <page_insert>$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	85 c0                	test   %eax,%eax$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	0f 88 4e 01 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%eax)$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	e8 8a 15 00 00       	call   f0107012 <cpunum>$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105a91	obj/kern/kernel.asm	/^f0105a91:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	89 48 78             	mov    %ecx,0x78(%eax)$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	e9 fd 00 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	be f9 ff ff ff       	mov    $0xfffffff9,%esi$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	e9 f3 00 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	e9 e9 00 00 00       	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	00 $/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	e8 f5 df ff ff       	call   f0103aea <envid2env>$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	85 c0                	test   %eax,%eax$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	0f 88 c2 00 00 00    	js     f0105bc4 <syscall+0x7fb>$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	e8 0b 15 00 00       	call   f0107012 <cpunum>$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	00 $/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	00 $/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	e8 b3 bd ff ff       	call   f01018e2 <user_mem_assert>$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	89 c7                	mov    %eax,%edi$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	66 c7 40 34 1b 00    	movw   $0x1b,0x34(%eax)$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	8b 51 3c             	mov    0x3c(%ecx),%edx$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	8b 51 30             	mov    0x30(%ecx),%edx$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105b69	obj/kern/kernel.asm	/^f0105b69:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	eb 4d                	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	e8 33 21 00 00       	call   f0107caf <time_msec>$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	89 c6                	mov    %eax,%esi$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	eb 44                	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	77 36                	ja     f0105bc4 <syscall+0x7fb>$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b98	obj/kern/kernel.asm	/^f0105b98:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	c7 04 24 c0 5e 27 f0 	movl   $0xf0275ec0,(%esp)$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	e8 1d 0e 00 00       	call   f01069c5 <memmove>$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	c7 04 24 c0 5e 27 f0 	movl   $0xf0275ec0,(%esp)$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	e8 f5 18 00 00       	call   f01074b0 <E1000_transmit>$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	89 c6                	mov    %eax,%esi$/;"	l
f0105bbd	obj/kern/kernel.asm	/^f0105bbd:	eb 05                	jmp    f0105bc4 <syscall+0x7fb>$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	c7 04 24 80 53 12 f0 	movl   $0xf0125380,(%esp)$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	e8 ec 16 00 00       	call   f01072bc <spin_unlock>$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0:	f3 90                	pause  $/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	89 f0                	mov    %esi,%eax$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	5b                   	pop    %ebx$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	5e                   	pop    %esi$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	5f                   	pop    %edi$/;"	l
f0105bda	obj/kern/kernel.asm	/^f0105bda:	5d                   	pop    %ebp$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	c3                   	ret    $/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	00 00                	add    %al,(%eax)$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0 <stab_binsearch>:$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	55                   	push   %ebp$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	57                   	push   %edi$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	56                   	push   %esi$/;"	l
f0105be5	obj/kern/kernel.asm	/^f0105be5:	53                   	push   %ebx$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	0f 8f 9c 00 00 00    	jg     f0105ca0 <stab_binsearch+0xc0>$/;"	l
f0105c04	obj/kern/kernel.asm	/^f0105c04:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	01 d8                	add    %ebx,%eax$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	89 c7                	mov    %eax,%edi$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	01 c7                	add    %eax,%edi$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	d1 ff                	sar    %edi$/;"	d
f0105c19	obj/kern/kernel.asm	/^f0105c19:	39 df                	cmp    %ebx,%edi$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	7c 33                	jl     f0105c50 <stab_binsearch+0x70>$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	39 f0                	cmp    %esi,%eax$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	0f 84 bc 00 00 00    	je     f0105cec <stab_binsearch+0x10c>$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	89 f8                	mov    %edi,%eax$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	7c 0f                	jl     f0105c50 <stab_binsearch+0x70>$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	75 ef                	jne    f0105c3a <stab_binsearch+0x5a>$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	e9 9e 00 00 00       	jmp    f0105cee <stab_binsearch+0x10e>$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	eb 3c                	jmp    f0105c91 <stab_binsearch+0xb1>$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	89 01                	mov    %eax,(%ecx)$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	eb 2b                	jmp    f0105c91 <stab_binsearch+0xb1>$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	76 14                	jbe    f0105c7f <stab_binsearch+0x9f>$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	89 02                	mov    %eax,(%edx)$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	eb 12                	jmp    f0105c91 <stab_binsearch+0xb1>$/;"	l
f0105c7f	obj/kern/kernel.asm	/^f0105c7f:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	89 01                	mov    %eax,(%ecx)$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	0f 8d 71 ff ff ff    	jge    f0105c0b <stab_binsearch+0x2b>$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	75 0f                	jne    f0105caf <stab_binsearch+0xcf>$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	89 02                	mov    %eax,(%edx)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	eb 57                	jmp    f0105d06 <stab_binsearch+0x126>$/;"	l
f0105caf	obj/kern/kernel.asm	/^f0105caf:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	7d 28                	jge    f0105ce5 <stab_binsearch+0x105>$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	39 f2                	cmp    %esi,%edx$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	74 19                	je     f0105ce5 <stab_binsearch+0x105>$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	7d 0a                	jge    f0105ce5 <stab_binsearch+0x105>$/;"	l
f0105cdb	obj/kern/kernel.asm	/^f0105cdb:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	75 ef                	jne    f0105cd4 <stab_binsearch+0xf4>$/;"	l
f0105ce5	obj/kern/kernel.asm	/^f0105ce5:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	89 02                	mov    %eax,(%edx)$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	eb 1a                	jmp    f0105d06 <stab_binsearch+0x126>$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	89 f8                	mov    %edi,%eax$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	0f 82 54 ff ff ff    	jb     f0105c55 <stab_binsearch+0x75>$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	e9 60 ff ff ff       	jmp    f0105c66 <stab_binsearch+0x86>$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	5b                   	pop    %ebx$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	5e                   	pop    %esi$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	5f                   	pop    %edi$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	5d                   	pop    %ebp$/;"	l
f0105d0d	obj/kern/kernel.asm	/^f0105d0d:	c3                   	ret    $/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e <debuginfo_eip>:$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	55                   	push   %ebp$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	c7 03 94 95 10 f0    	movl   $0xf0109594,(%ebx)$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	c7 43 08 94 95 10 f0 	movl   $0xf0109594,0x8(%ebx)$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	76 1f                	jbe    f0105d6f <debuginfo_eip+0x61>$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	bf 46 aa 11 f0       	mov    $0xf011aa46,%edi$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	c7 45 c4 49 60 11 f0 	movl   $0xf0116049,-0x3c(%ebp)$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	c7 45 bc 48 60 11 f0 	movl   $0xf0116048,-0x44(%ebp)$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	c7 45 c0 8c 9e 10 f0 	movl   $0xf0109e8c,-0x40(%ebp)$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	e9 c7 00 00 00       	jmp    f0105e36 <debuginfo_eip+0x128>$/;"	l
f0105d6f	obj/kern/kernel.asm	/^f0105d6f:	e8 9e 12 00 00       	call   f0107012 <cpunum>$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	00 $/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	00 $/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	00 $/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	e8 b3 ba ff ff       	call   f0101850 <user_mem_check>$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	85 c0                	test   %eax,%eax$/;"	l
f0105d9f	obj/kern/kernel.asm	/^f0105d9f:	0f 88 53 02 00 00    	js     f0105ff8 <debuginfo_eip+0x2ea>$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	b8 00 00 20 00       	mov    $0x200000,%eax$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	8b 10                	mov    (%eax),%edx$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	8b 78 0c             	mov    0xc(%eax),%edi$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	e8 4f 12 00 00       	call   f0107012 <cpunum>$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	89 c2                	mov    %eax,%edx$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	00 $/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105dd0	obj/kern/kernel.asm	/^f0105dd0:	2b 45 c0             	sub    -0x40(%ebp),%eax$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105dd6	obj/kern/kernel.asm	/^f0105dd6:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	6b c2 74             	imul   $0x74,%edx,%eax$/;"	l
f0105dea	obj/kern/kernel.asm	/^f0105dea:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	e8 58 ba ff ff       	call   f0101850 <user_mem_check>$/;"	l
f0105df8	obj/kern/kernel.asm	/^f0105df8:	85 c0                	test   %eax,%eax$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	0f 88 f8 01 00 00    	js     f0105ff8 <debuginfo_eip+0x2ea>$/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	e8 0d 12 00 00       	call   f0107012 <cpunum>$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	00 $/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	89 fa                	mov    %edi,%edx$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	8b 80 28 80 27 f0    	mov    -0xfd87fd8(%eax),%eax$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	e8 22 ba ff ff       	call   f0101850 <user_mem_check>$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	85 c0                	test   %eax,%eax$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	0f 88 c2 01 00 00    	js     f0105ff8 <debuginfo_eip+0x2ea>$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	39 7d c4             	cmp    %edi,-0x3c(%ebp)$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	0f 83 b9 01 00 00    	jae    f0105ff8 <debuginfo_eip+0x2ea>$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)$/;"	l
f0105e43	obj/kern/kernel.asm	/^f0105e43:	0f 85 af 01 00 00    	jne    f0105ff8 <debuginfo_eip+0x2ea>$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	2b 45 c0             	sub    -0x40(%ebp),%eax$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105e62	obj/kern/kernel.asm	/^f0105e62:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105e65	obj/kern/kernel.asm	/^f0105e65:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	e8 62 fd ff ff       	call   f0105be0 <stab_binsearch>$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	85 c0                	test   %eax,%eax$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	0f 84 6f 01 00 00    	je     f0105ff8 <debuginfo_eip+0x2ea>$/;"	l
f0105e89	obj/kern/kernel.asm	/^f0105e89:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	e8 35 fd ff ff       	call   f0105be0 <stab_binsearch>$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	7f 35                	jg     f0105ee8 <debuginfo_eip+0x1da>$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	8b 04 08             	mov    (%eax,%ecx,1),%eax$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	89 fa                	mov    %edi,%edx$/;"	l
f0105ebe	obj/kern/kernel.asm	/^f0105ebe:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	39 d0                	cmp    %edx,%eax$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	73 06                	jae    f0105ecb <debuginfo_eip+0x1bd>$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	03 45 c4             	add    -0x3c(%ebp),%eax$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	6b c2 0c             	imul   $0xc,%edx,%eax$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	8b 44 08 08          	mov    0x8(%eax,%ecx,1),%eax$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	29 c6                	sub    %eax,%esi$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	eb 0f                	jmp    f0105ef7 <debuginfo_eip+0x1e9>$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105efe	obj/kern/kernel.asm	/^f0105efe:	00 $/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	e8 31 0a 00 00       	call   f010693b <strfind>$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	e8 b7 fc ff ff       	call   f0105be0 <stab_binsearch>$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0105f2f	obj/kern/kernel.asm	/^f0105f2f:	7f 34                	jg     f0105f65 <debuginfo_eip+0x257>$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	0f b7 44 10 06       	movzwl 0x6(%eax,%edx,1),%eax$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	89 4d bc             	mov    %ecx,-0x44(%ebp)$/;"	l
f0105f48	obj/kern/kernel.asm	/^f0105f48:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	7c 6b                	jl     f0105fb7 <debuginfo_eip+0x2a9>$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	6b f0 0c             	imul   $0xc,%eax,%esi$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	01 d6                	add    %edx,%esi$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	0f b6 4e 04          	movzbl 0x4(%esi),%ecx$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	74 48                	je     f0105fa2 <debuginfo_eip+0x294>$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	03 55 c0             	add    -0x40(%ebp),%edx$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	eb 2a                	jmp    f0105f8f <debuginfo_eip+0x281>$/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	e9 8e 00 00 00       	jmp    f0106004 <debuginfo_eip+0x2f6>$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105f7c	obj/kern/kernel.asm	/^f0105f7c:	39 45 bc             	cmp    %eax,-0x44(%ebp)$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	7f 36                	jg     f0105fb7 <debuginfo_eip+0x2a9>$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	89 d6                	mov    %edx,%esi$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	74 13                	je     f0105fa2 <debuginfo_eip+0x294>$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	75 e2                	jne    f0105f76 <debuginfo_eip+0x268>$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	83 7e 08 00          	cmpl   $0x0,0x8(%esi)$/;"	l
f0105f98	obj/kern/kernel.asm	/^f0105f98:	74 dc                	je     f0105f76 <debuginfo_eip+0x268>$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	3b 45 bc             	cmp    -0x44(%ebp),%eax$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	7c 15                	jl     f0105fb7 <debuginfo_eip+0x2a9>$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	8b 04 10             	mov    (%eax,%edx,1),%eax$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	2b 7d c4             	sub    -0x3c(%ebp),%edi$/;"	l
f0105fae	obj/kern/kernel.asm	/^f0105fae:	39 f8                	cmp    %edi,%eax$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	73 05                	jae    f0105fb7 <debuginfo_eip+0x2a9>$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	03 45 c4             	add    -0x3c(%ebp),%eax$/;"	l
f0105fb5	obj/kern/kernel.asm	/^f0105fb5:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	7d 40                	jge    f0105fff <debuginfo_eip+0x2f1>$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105fc5	obj/kern/kernel.asm	/^f0105fc5:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	7e 35                	jle    f0105fff <debuginfo_eip+0x2f1>$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	80 7c 08 04 a0       	cmpb   $0xa0,0x4(%eax,%ecx,1)$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	75 28                	jne    f0105fff <debuginfo_eip+0x2f1>$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
f0105fe7	obj/kern/kernel.asm	/^f0105fe7:	7e 16                	jle    f0105fff <debuginfo_eip+0x2f1>$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	80 7c 82 04 a0       	cmpb   $0xa0,0x4(%edx,%eax,4)$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	74 e1                	je     f0105fd7 <debuginfo_eip+0x2c9>$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	eb 07                	jmp    f0105fff <debuginfo_eip+0x2f1>$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105ffd	obj/kern/kernel.asm	/^f0105ffd:	eb 05                	jmp    f0106004 <debuginfo_eip+0x2f6>$/;"	l
f0105fff	obj/kern/kernel.asm	/^f0105fff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	89 ec                	mov    %ebp,%esp$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	5d                   	pop    %ebp$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	c3                   	ret    $/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020 <printnum>:$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	55                   	push   %ebp$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	89 e5                	mov    %esp,%ebp$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	57                   	push   %edi$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	56                   	push   %esi$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	53                   	push   %ebx$/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0106029	obj/kern/kernel.asm	/^f0106029:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	89 d6                	mov    %edx,%esi$/;"	l
f010602e	obj/kern/kernel.asm	/^f010602e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	39 d1                	cmp    %edx,%ecx$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	72 15                	jb     f0106064 <printnum+0x44>$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	77 07                	ja     f0106058 <printnum+0x38>$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	39 d0                	cmp    %edx,%eax$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	76 0c                	jbe    f0106064 <printnum+0x44>$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	85 db                	test   %ebx,%ebx$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	7f 61                	jg     f01060c3 <printnum+0xa3>$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	eb 70                	jmp    f01060d4 <printnum+0xb4>$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	8b 5c 24 0c          	mov    0xc(%esp),%ebx$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f010607e	obj/kern/kernel.asm	/^f010607e:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	00 $/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	e8 5e 1c 00 00       	call   f0107d00 <__udivdi3>$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	89 f2                	mov    %esi,%edx$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	e8 5f ff ff ff       	call   f0106020 <printnum>$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	eb 11                	jmp    f01060d4 <printnum+0xb4>$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	85 db                	test   %ebx,%ebx$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	7f ef                	jg     f01060c3 <printnum+0xa3>$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	00 $/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	e8 33 1d 00 00       	call   f0107e30 <__umoddi3>$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	0f be 80 9e 95 10 f0 	movsbl -0xfef6a62(%eax),%eax$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	5b                   	pop    %ebx$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	5e                   	pop    %esi$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	5f                   	pop    %edi$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	5d                   	pop    %ebp$/;"	l
f0106115	obj/kern/kernel.asm	/^f0106115:	c3                   	ret    $/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116 <getuint>:$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	55                   	push   %ebp$/;"	l
f0106117	obj/kern/kernel.asm	/^f0106117:	89 e5                	mov    %esp,%ebp$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	7e 0e                	jle    f010612c <getuint+0x16>$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	8b 10                	mov    (%eax),%edx$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	8b 02                	mov    (%edx),%eax$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	eb 22                	jmp    f010614e <getuint+0x38>$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	85 d2                	test   %edx,%edx$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	74 10                	je     f0106140 <getuint+0x2a>$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	8b 10                	mov    (%eax),%edx$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	8b 02                	mov    (%edx),%eax$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	eb 0e                	jmp    f010614e <getuint+0x38>$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	8b 10                	mov    (%eax),%edx$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	8b 02                	mov    (%edx),%eax$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010614e	obj/kern/kernel.asm	/^f010614e:	5d                   	pop    %ebp$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	c3                   	ret    $/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150 <sprintputch>:$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	55                   	push   %ebp$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	89 e5                	mov    %esp,%ebp$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	8b 10                	mov    (%eax),%edx$/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	73 0a                	jae    f010616b <sprintputch+0x1b>$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	88 0a                	mov    %cl,(%edx)$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	89 10                	mov    %edx,(%eax)$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	5d                   	pop    %ebp$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	c3                   	ret    $/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d <vprintfmt>:$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	55                   	push   %ebp$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106170	obj/kern/kernel.asm	/^f0106170:	57                   	push   %edi$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	56                   	push   %esi$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	53                   	push   %ebx$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010617c	obj/kern/kernel.asm	/^f010617c:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	c7 45 c8 ff ff ff ff 	movl   $0xffffffff,-0x38(%ebp)$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	eb 11                	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	85 c0                	test   %eax,%eax$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	0f 84 68 04 00 00    	je     f01065f8 <vprintfmt+0x48b>$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	ff d7                	call   *%edi$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010619c	obj/kern/kernel.asm	/^f010619c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	75 e4                	jne    f0106188 <vprintfmt+0x1b>$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	c6 45 e0 20          	movb   $0x20,-0x20(%ebp)$/;"	l
f01061bb	obj/kern/kernel.asm	/^f01061bb:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	eb 06                	jmp    f01061ca <vprintfmt+0x5d>$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	c6 45 e0 2d          	movb   $0x2d,-0x20(%ebp)$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	89 c3                	mov    %eax,%ebx$/;"	l
f01061ca	obj/kern/kernel.asm	/^f01061ca:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	83 ea 23             	sub    $0x23,%edx$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f01061dc	obj/kern/kernel.asm	/^f01061dc:	0f 87 f9 03 00 00    	ja     f01065db <vprintfmt+0x46e>$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	ff 24 95 80 97 10 f0 	jmp    *-0xfef6880(,%edx,4)$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	c6 45 e0 30          	movb   $0x30,-0x20(%ebp)$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	eb d6                	jmp    f01061c8 <vprintfmt+0x5b>$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	0f be 10             	movsbl (%eax),%edx$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	77 54                	ja     f010625a <vprintfmt+0xed>$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	8d 4c 4a d0          	lea    -0x30(%edx,%ecx,2),%ecx$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	0f be 10             	movsbl (%eax),%edx$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f010621f	obj/kern/kernel.asm	/^f010621f:	76 eb                	jbe    f010620c <vprintfmt+0x9f>$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	eb 31                	jmp    f010625a <vprintfmt+0xed>$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	8d 5a 04             	lea    0x4(%edx),%ebx$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	8b 12                	mov    (%edx),%edx$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	eb 21                	jmp    f010625a <vprintfmt+0xed>$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	0f 49 55 d4          	cmovns -0x2c(%ebp),%edx$/;"	l
f0106246	obj/kern/kernel.asm	/^f0106246:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	e9 7a ff ff ff       	jmp    f01061c8 <vprintfmt+0x5b>$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	e9 6e ff ff ff       	jmp    f01061c8 <vprintfmt+0x5b>$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	0f 89 64 ff ff ff    	jns    f01061c8 <vprintfmt+0x5b>$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	e9 53 ff ff ff       	jmp    f01061c8 <vprintfmt+0x5b>$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	e9 4b ff ff ff       	jmp    f01061c8 <vprintfmt+0x5b>$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	8b 00                	mov    (%eax),%eax$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	ff d7                	call   *%edi$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	e9 fd fe ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	8b 00                	mov    (%eax),%eax$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	89 c2                	mov    %eax,%edx$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	31 d0                	xor    %edx,%eax$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	29 d0                	sub    %edx,%eax$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	7f 0b                	jg     f01062c3 <vprintfmt+0x156>$/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8:	8b 14 85 e0 98 10 f0 	mov    -0xfef6720(,%eax,4),%edx$/;"	l
f01062bf	obj/kern/kernel.asm	/^f01062bf:	85 d2                	test   %edx,%edx$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	75 20                	jne    f01062e3 <vprintfmt+0x176>$/;"	l
f01062c3	obj/kern/kernel.asm	/^f01062c3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	c7 44 24 08 af 95 10 	movl   $0xf01095af,0x8(%esp)$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	f0 $/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	e8 a5 03 00 00       	call   f0106680 <printfmt>$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	e9 b6 fe ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	c7 44 24 08 d9 8c 10 	movl   $0xf0108cd9,0x8(%esp)$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	f0 $/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	e8 85 03 00 00       	call   f0106680 <printfmt>$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	e9 96 fe ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	89 c3                	mov    %eax,%ebx$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010630e	obj/kern/kernel.asm	/^f010630e:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0106311	obj/kern/kernel.asm	/^f0106311:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010631a	obj/kern/kernel.asm	/^f010631a:	8b 00                	mov    (%eax),%eax$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010631f	obj/kern/kernel.asm	/^f010631f:	85 c0                	test   %eax,%eax$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	b8 b8 95 10 f0       	mov    $0xf01095b8,%eax$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	0f 45 45 e4          	cmovne -0x1c(%ebp),%eax$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	7e 06                	jle    f0106339 <vprintfmt+0x1cc>$/;"	l
f0106333	obj/kern/kernel.asm	/^f0106333:	80 7d e0 2d          	cmpb   $0x2d,-0x20(%ebp)$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	75 13                	jne    f010634c <vprintfmt+0x1df>$/;"	l
f0106339	obj/kern/kernel.asm	/^f0106339:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	0f be 02             	movsbl (%edx),%eax$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	85 c0                	test   %eax,%eax$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	0f 85 a2 00 00 00    	jne    f01063e9 <vprintfmt+0x27c>$/;"	l
f0106347	obj/kern/kernel.asm	/^f0106347:	e9 8f 00 00 00       	jmp    f01063db <vprintfmt+0x26e>$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	e8 50 04 00 00       	call   f01067ab <strnlen>$/;"	l
f010635b	obj/kern/kernel.asm	/^f010635b:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	29 c2                	sub    %eax,%edx$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	85 d2                	test   %edx,%edx$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	7e d2                	jle    f0106339 <vprintfmt+0x1cc>$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	0f be 4d e0          	movsbl -0x20(%ebp),%ecx$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	89 5d c4             	mov    %ebx,-0x3c(%ebp)$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	89 d3                	mov    %edx,%ebx$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	ff d7                	call   *%edi$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	85 db                	test   %ebx,%ebx$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	7f ed                	jg     f0106373 <vprintfmt+0x206>$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	eb a7                	jmp    f0106339 <vprintfmt+0x1cc>$/;"	l
f0106392	obj/kern/kernel.asm	/^f0106392:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	74 1b                	je     f01063b3 <vprintfmt+0x246>$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	76 13                	jbe    f01063b3 <vprintfmt+0x246>$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01063b1	obj/kern/kernel.asm	/^f01063b1:	eb 0d                	jmp    f01063c0 <vprintfmt+0x253>$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01063c0	obj/kern/kernel.asm	/^f01063c0:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f01063c6	obj/kern/kernel.asm	/^f01063c6:	85 c0                	test   %eax,%eax$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	74 05                	je     f01063cf <vprintfmt+0x262>$/;"	l
f01063ca	obj/kern/kernel.asm	/^f01063ca:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	eb 31                	jmp    f0106400 <vprintfmt+0x293>$/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01063d5	obj/kern/kernel.asm	/^f01063d5:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	7f 36                	jg     f0106417 <vprintfmt+0x2aa>$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01063e4	obj/kern/kernel.asm	/^f01063e4:	e9 b0 fd ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01063ec	obj/kern/kernel.asm	/^f01063ec:	83 c2 01             	add    $0x1,%edx$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	89 d3                	mov    %edx,%ebx$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	85 f6                	test   %esi,%esi$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	78 8e                	js     f0106392 <vprintfmt+0x225>$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	79 89                	jns    f0106392 <vprintfmt+0x225>$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	eb c4                	jmp    f01063db <vprintfmt+0x26e>$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f010641a	obj/kern/kernel.asm	/^f010641a:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	ff d7                	call   *%edi$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	85 db                	test   %ebx,%ebx$/;"	l
f010642f	obj/kern/kernel.asm	/^f010642f:	7f ec                	jg     f010641d <vprintfmt+0x2b0>$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	e9 60 fd ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	7e 16                	jle    f0106457 <vprintfmt+0x2ea>$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	8b 10                	mov    (%eax),%edx$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0106455	obj/kern/kernel.asm	/^f0106455:	eb 32                	jmp    f0106489 <vprintfmt+0x31c>$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	85 c9                	test   %ecx,%ecx$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	74 18                	je     f0106473 <vprintfmt+0x306>$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010645e	obj/kern/kernel.asm	/^f010645e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	8b 00                	mov    (%eax),%eax$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	89 c1                	mov    %eax,%ecx$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	eb 16                	jmp    f0106489 <vprintfmt+0x31c>$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	8b 00                	mov    (%eax),%eax$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	89 c2                	mov    %eax,%edx$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0106498	obj/kern/kernel.asm	/^f0106498:	0f 89 8a 00 00 00    	jns    f0106528 <vprintfmt+0x3bb>$/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	ff d7                	call   *%edi$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	f7 d8                	neg    %eax$/;"	l
f01064b3	obj/kern/kernel.asm	/^f01064b3:	83 d2 00             	adc    $0x0,%edx$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	f7 da                	neg    %edx$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	eb 6e                	jmp    f0106528 <vprintfmt+0x3bb>$/;"	l
f01064ba	obj/kern/kernel.asm	/^f01064ba:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	89 ca                	mov    %ecx,%edx$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	e8 4f fc ff ff       	call   f0106116 <getuint>$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f01064cc	obj/kern/kernel.asm	/^f01064cc:	eb 5a                	jmp    f0106528 <vprintfmt+0x3bb>$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	89 ca                	mov    %ecx,%edx$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	e8 3b fc ff ff       	call   f0106116 <getuint>$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	eb 46                	jmp    f0106528 <vprintfmt+0x3bb>$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	ff d7                	call   *%edi$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01064f6	obj/kern/kernel.asm	/^f01064f6:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	ff d7                	call   *%edi$/;"	l
f01064ff	obj/kern/kernel.asm	/^f01064ff:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	8b 00                	mov    (%eax),%eax$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010650f	obj/kern/kernel.asm	/^f010650f:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	eb 12                	jmp    f0106528 <vprintfmt+0x3bb>$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	89 ca                	mov    %ecx,%edx$/;"	l
f010651b	obj/kern/kernel.asm	/^f010651b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	e8 f3 fb ff ff       	call   f0106116 <getuint>$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	0f be 4d e0          	movsbl -0x20(%ebp),%ecx$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0106530	obj/kern/kernel.asm	/^f0106530:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	89 f2                	mov    %esi,%edx$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	89 f8                	mov    %edi,%eax$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	e8 d5 fa ff ff       	call   f0106020 <printnum>$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	e9 46 fc ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	8b 00                	mov    (%eax),%eax$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	85 c0                	test   %eax,%eax$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	75 24                	jne    f0106589 <vprintfmt+0x41c>$/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	c7 44 24 0c d4 96 10 	movl   $0xf01096d4,0xc(%esp)$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	f0 $/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	c7 44 24 08 d9 8c 10 	movl   $0xf0108cd9,0x8(%esp)$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	f0 $/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	e8 ff 00 00 00       	call   f0106680 <printfmt>$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	e9 10 fc ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f0106589	obj/kern/kernel.asm	/^f0106589:	83 3e 7f             	cmpl   $0x7f,(%esi)$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	7e 29                	jle    f01065b7 <vprintfmt+0x44a>$/;"	l
f010658e	obj/kern/kernel.asm	/^f010658e:	0f b6 16             	movzbl (%esi),%edx$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	88 10                	mov    %dl,(%eax)$/;"	l
f0106593	obj/kern/kernel.asm	/^f0106593:	c7 44 24 0c 0c 97 10 	movl   $0xf010970c,0xc(%esp)$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	f0 $/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	c7 44 24 08 d9 8c 10 	movl   $0xf0108cd9,0x8(%esp)$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	f0 $/;"	l
f01065a3	obj/kern/kernel.asm	/^f01065a3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	e8 d1 00 00 00       	call   f0106680 <printfmt>$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01065b2	obj/kern/kernel.asm	/^f01065b2:	e9 e2 fb ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	0f b6 16             	movzbl (%esi),%edx$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	88 10                	mov    %dl,(%eax)$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	e9 d5 fb ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01065ce	obj/kern/kernel.asm	/^f01065ce:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	ff d7                	call   *%edi$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	e9 be fb ff ff       	jmp    f0106199 <vprintfmt+0x2c>$/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	ff d7                	call   *%edi$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	80 38 25             	cmpb   $0x25,(%eax)$/;"	l
f01065ee	obj/kern/kernel.asm	/^f01065ee:	0f 84 a5 fb ff ff    	je     f0106199 <vprintfmt+0x2c>$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	89 c3                	mov    %eax,%ebx$/;"	l
f01065f6	obj/kern/kernel.asm	/^f01065f6:	eb f0                	jmp    f01065e8 <vprintfmt+0x47b>$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	5b                   	pop    %ebx$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	5e                   	pop    %esi$/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	5f                   	pop    %edi$/;"	l
f01065fe	obj/kern/kernel.asm	/^f01065fe:	5d                   	pop    %ebp$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	c3                   	ret    $/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600 <vsnprintf>:$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	55                   	push   %ebp$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	89 e5                	mov    %esp,%ebp$/;"	l
f0106603	obj/kern/kernel.asm	/^f0106603:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106609	obj/kern/kernel.asm	/^f0106609:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	85 c0                	test   %eax,%eax$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	74 04                	je     f0106614 <vsnprintf+0x14>$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	85 d2                	test   %edx,%edx$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	7f 07                	jg     f010661b <vsnprintf+0x1b>$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	eb 3b                	jmp    f0106656 <vsnprintf+0x56>$/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010662c	obj/kern/kernel.asm	/^f010662c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	c7 04 24 50 61 10 f0 	movl   $0xf0106150,(%esp)$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	e8 20 fb ff ff       	call   f010616d <vprintfmt>$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106656	obj/kern/kernel.asm	/^f0106656:	c9                   	leave  $/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	c3                   	ret    $/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658 <snprintf>:$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	55                   	push   %ebp$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	89 e5                	mov    %esp,%ebp$/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	e8 82 ff ff ff       	call   f0106600 <vsnprintf>$/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	c9                   	leave  $/;"	l
f010667f	obj/kern/kernel.asm	/^f010667f:	c3                   	ret    $/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680 <printfmt>:$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	55                   	push   %ebp$/;"	l
f0106681	obj/kern/kernel.asm	/^f0106681:	89 e5                	mov    %esp,%ebp$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106694	obj/kern/kernel.asm	/^f0106694:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01066a1	obj/kern/kernel.asm	/^f01066a1:	e8 c7 fa ff ff       	call   f010616d <vprintfmt>$/;"	l
f01066a6	obj/kern/kernel.asm	/^f01066a6:	c9                   	leave  $/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	c3                   	ret    $/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0 <readline>:$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	55                   	push   %ebp$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	57                   	push   %edi$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	56                   	push   %esi$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	53                   	push   %ebx$/;"	l
f01066b6	obj/kern/kernel.asm	/^f01066b6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	85 c0                	test   %eax,%eax$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	74 10                	je     f01066d0 <readline+0x20>$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	c7 04 24 d9 8c 10 f0 	movl   $0xf0108cd9,(%esp)$/;"	l
f01066cb	obj/kern/kernel.asm	/^f01066cb:	e8 7b dd ff ff       	call   f010444b <cprintf>$/;"	l
f01066d0	obj/kern/kernel.asm	/^f01066d0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01066d7	obj/kern/kernel.asm	/^f01066d7:	e8 24 9e ff ff       	call   f0100500 <iscons>$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	89 c7                	mov    %eax,%edi$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	e8 07 9e ff ff       	call   f01004ef <getchar>$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	89 c3                	mov    %eax,%ebx$/;"	l
f01066ea	obj/kern/kernel.asm	/^f01066ea:	85 c0                	test   %eax,%eax$/;"	l
f01066ec	obj/kern/kernel.asm	/^f01066ec:	79 17                	jns    f0106705 <readline+0x55>$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	c7 04 24 20 99 10 f0 	movl   $0xf0109920,(%esp)$/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	e8 4d dd ff ff       	call   f010444b <cprintf>$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	eb 76                	jmp    f010677b <readline+0xcb>$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	74 08                	je     f0106712 <readline+0x62>$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	75 19                	jne    f010672b <readline+0x7b>$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	85 f6                	test   %esi,%esi$/;"	l
f0106714	obj/kern/kernel.asm	/^f0106714:	7e 15                	jle    f010672b <readline+0x7b>$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	85 ff                	test   %edi,%edi$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	74 0c                	je     f0106726 <readline+0x76>$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0106721	obj/kern/kernel.asm	/^f0106721:	e8 e4 9f ff ff       	call   f010070a <cputchar>$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106729	obj/kern/kernel.asm	/^f0106729:	eb b8                	jmp    f01066e3 <readline+0x33>$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	66 90                	xchg   %ax,%ax$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	7e 23                	jle    f0106755 <readline+0xa5>$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	7f 1b                	jg     f0106755 <readline+0xa5>$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	85 ff                	test   %edi,%edi$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	74 08                	je     f010674a <readline+0x9a>$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106745	obj/kern/kernel.asm	/^f0106745:	e8 c0 9f ff ff       	call   f010070a <cputchar>$/;"	l
f010674a	obj/kern/kernel.asm	/^f010674a:	88 9e 80 5a 27 f0    	mov    %bl,-0xfd8a580(%esi)$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	eb 8e                	jmp    f01066e3 <readline+0x33>$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	74 05                	je     f010675f <readline+0xaf>$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010675d	obj/kern/kernel.asm	/^f010675d:	75 84                	jne    f01066e3 <readline+0x33>$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	85 ff                	test   %edi,%edi$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	74 0c                	je     f010676f <readline+0xbf>$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	e8 9b 9f ff ff       	call   f010070a <cputchar>$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	c6 86 80 5a 27 f0 00 	movb   $0x0,-0xfd8a580(%esi)$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	b8 80 5a 27 f0       	mov    $0xf0275a80,%eax$/;"	l
f010677b	obj/kern/kernel.asm	/^f010677b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	5b                   	pop    %ebx$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	5e                   	pop    %esi$/;"	l
f0106780	obj/kern/kernel.asm	/^f0106780:	5f                   	pop    %edi$/;"	l
f0106781	obj/kern/kernel.asm	/^f0106781:	5d                   	pop    %ebp$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	c3                   	ret    $/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790 <strlen>:$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790:	55                   	push   %ebp$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	89 e5                	mov    %esp,%ebp$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	74 09                	je     f01067a9 <strlen+0x19>$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01067a3	obj/kern/kernel.asm	/^f01067a3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	75 f7                	jne    f01067a0 <strlen+0x10>$/;"	l
f01067a9	obj/kern/kernel.asm	/^f01067a9:	5d                   	pop    %ebp$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	c3                   	ret    $/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab <strnlen>:$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	55                   	push   %ebp$/;"	l
f01067ac	obj/kern/kernel.asm	/^f01067ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	53                   	push   %ebx$/;"	l
f01067af	obj/kern/kernel.asm	/^f01067af:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01067b2	obj/kern/kernel.asm	/^f01067b2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	85 c9                	test   %ecx,%ecx$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	74 19                	je     f01067d2 <strnlen+0x27>$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01067bc	obj/kern/kernel.asm	/^f01067bc:	74 14                	je     f01067d2 <strnlen+0x27>$/;"	l
f01067be	obj/kern/kernel.asm	/^f01067be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067c3	obj/kern/kernel.asm	/^f01067c3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	39 c8                	cmp    %ecx,%eax$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	74 0d                	je     f01067d7 <strnlen+0x2c>$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	75 f3                	jne    f01067c3 <strnlen+0x18>$/;"	l
f01067d0	obj/kern/kernel.asm	/^f01067d0:	eb 05                	jmp    f01067d7 <strnlen+0x2c>$/;"	l
f01067d2	obj/kern/kernel.asm	/^f01067d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067d7	obj/kern/kernel.asm	/^f01067d7:	5b                   	pop    %ebx$/;"	l
f01067d8	obj/kern/kernel.asm	/^f01067d8:	5d                   	pop    %ebp$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	c3                   	ret    $/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da <strcpy>:$/;"	l
f01067da	obj/kern/kernel.asm	/^f01067da:	55                   	push   %ebp$/;"	l
f01067db	obj/kern/kernel.asm	/^f01067db:	89 e5                	mov    %esp,%ebp$/;"	l
f01067dd	obj/kern/kernel.asm	/^f01067dd:	53                   	push   %ebx$/;"	l
f01067de	obj/kern/kernel.asm	/^f01067de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f01067f0	obj/kern/kernel.asm	/^f01067f0:	83 c2 01             	add    $0x1,%edx$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	84 c9                	test   %cl,%cl$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	75 f2                	jne    f01067e9 <strcpy+0xf>$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	5b                   	pop    %ebx$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	5d                   	pop    %ebp$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	c3                   	ret    $/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa <strcat>:$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	55                   	push   %ebp$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	53                   	push   %ebx$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	e8 84 ff ff ff       	call   f0106790 <strlen>$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	8d 04 03             	lea    (%ebx,%eax,1),%eax$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	e8 bc ff ff ff       	call   f01067da <strcpy>$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	89 d8                	mov    %ebx,%eax$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	83 c4 08             	add    $0x8,%esp$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	5b                   	pop    %ebx$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	5d                   	pop    %ebp$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	c3                   	ret    $/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826 <strncpy>:$/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826:	55                   	push   %ebp$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	89 e5                	mov    %esp,%ebp$/;"	l
f0106829	obj/kern/kernel.asm	/^f0106829:	56                   	push   %esi$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	53                   	push   %ebx$/;"	l
f010682b	obj/kern/kernel.asm	/^f010682b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834:	85 f6                	test   %esi,%esi$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	74 18                	je     f0106850 <strncpy+0x2a>$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010683d	obj/kern/kernel.asm	/^f010683d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0106840	obj/kern/kernel.asm	/^f0106840:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010684c	obj/kern/kernel.asm	/^f010684c:	39 ce                	cmp    %ecx,%esi$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	77 ed                	ja     f010683d <strncpy+0x17>$/;"	l
f0106850	obj/kern/kernel.asm	/^f0106850:	5b                   	pop    %ebx$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	5e                   	pop    %esi$/;"	l
f0106852	obj/kern/kernel.asm	/^f0106852:	5d                   	pop    %ebp$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	c3                   	ret    $/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854 <strlcpy>:$/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854:	55                   	push   %ebp$/;"	l
f0106855	obj/kern/kernel.asm	/^f0106855:	89 e5                	mov    %esp,%ebp$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	56                   	push   %esi$/;"	l
f0106858	obj/kern/kernel.asm	/^f0106858:	53                   	push   %ebx$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	89 f0                	mov    %esi,%eax$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	85 c9                	test   %ecx,%ecx$/;"	l
f0106866	obj/kern/kernel.asm	/^f0106866:	74 27                	je     f010688f <strlcpy+0x3b>$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	74 1d                	je     f010688a <strlcpy+0x36>$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	84 db                	test   %bl,%bl$/;"	l
f0106872	obj/kern/kernel.asm	/^f0106872:	74 16                	je     f010688a <strlcpy+0x36>$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	88 18                	mov    %bl,(%eax)$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	74 0e                	je     f010688c <strlcpy+0x38>$/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	84 db                	test   %bl,%bl$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	75 ec                	jne    f0106874 <strlcpy+0x20>$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	eb 02                	jmp    f010688c <strlcpy+0x38>$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	89 f0                	mov    %esi,%eax$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	29 f0                	sub    %esi,%eax$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	5b                   	pop    %ebx$/;"	l
f0106892	obj/kern/kernel.asm	/^f0106892:	5e                   	pop    %esi$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	5d                   	pop    %ebp$/;"	l
f0106894	obj/kern/kernel.asm	/^f0106894:	c3                   	ret    $/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895 <strcmp>:$/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	55                   	push   %ebp$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	89 e5                	mov    %esp,%ebp$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010689e	obj/kern/kernel.asm	/^f010689e:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01068a1	obj/kern/kernel.asm	/^f01068a1:	84 c0                	test   %al,%al$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	74 15                	je     f01068ba <strcmp+0x25>$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	3a 02                	cmp    (%edx),%al$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	75 11                	jne    f01068ba <strcmp+0x25>$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	83 c2 01             	add    $0x1,%edx$/;"	l
f01068af	obj/kern/kernel.asm	/^f01068af:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	84 c0                	test   %al,%al$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	74 04                	je     f01068ba <strcmp+0x25>$/;"	l
f01068b6	obj/kern/kernel.asm	/^f01068b6:	3a 02                	cmp    (%edx),%al$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	74 ef                	je     f01068a9 <strcmp+0x14>$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	29 d0                	sub    %edx,%eax$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	5d                   	pop    %ebp$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	c3                   	ret    $/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4 <strncmp>:$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	55                   	push   %ebp$/;"	l
f01068c5	obj/kern/kernel.asm	/^f01068c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	53                   	push   %ebx$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01068cb	obj/kern/kernel.asm	/^f01068cb:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01068ce	obj/kern/kernel.asm	/^f01068ce:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	85 c0                	test   %eax,%eax$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	74 23                	je     f01068f8 <strncmp+0x34>$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	84 db                	test   %bl,%bl$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	74 25                	je     f0106901 <strncmp+0x3d>$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	3a 19                	cmp    (%ecx),%bl$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	75 21                	jne    f0106901 <strncmp+0x3d>$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01068e3	obj/kern/kernel.asm	/^f01068e3:	74 13                	je     f01068f8 <strncmp+0x34>$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01068ee	obj/kern/kernel.asm	/^f01068ee:	84 db                	test   %bl,%bl$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	74 0f                	je     f0106901 <strncmp+0x3d>$/;"	l
f01068f2	obj/kern/kernel.asm	/^f01068f2:	3a 19                	cmp    (%ecx),%bl$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	74 ea                	je     f01068e0 <strncmp+0x1c>$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	eb 09                	jmp    f0106901 <strncmp+0x3d>$/;"	l
f01068f8	obj/kern/kernel.asm	/^f01068f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	5b                   	pop    %ebx$/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	5d                   	pop    %ebp$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	90                   	nop$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	c3                   	ret    $/;"	l
f0106901	obj/kern/kernel.asm	/^f0106901:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	29 d0                	sub    %edx,%eax$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	eb f2                	jmp    f01068fd <strncmp+0x39>$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b <strchr>:$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	55                   	push   %ebp$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	89 e5                	mov    %esp,%ebp$/;"	l
f010690e	obj/kern/kernel.asm	/^f010690e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106915	obj/kern/kernel.asm	/^f0106915:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	84 d2                	test   %dl,%dl$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	74 18                	je     f0106934 <strchr+0x29>$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	38 ca                	cmp    %cl,%dl$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	75 0a                	jne    f010692a <strchr+0x1f>$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	eb 17                	jmp    f0106939 <strchr+0x2e>$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	38 ca                	cmp    %cl,%dl$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	74 0f                	je     f0106939 <strchr+0x2e>$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	84 d2                	test   %dl,%dl$/;"	l
f0106932	obj/kern/kernel.asm	/^f0106932:	75 ee                	jne    f0106922 <strchr+0x17>$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	5d                   	pop    %ebp$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	c3                   	ret    $/;"	l
f010693b	obj/kern/kernel.asm	/^f010693b <strfind>:$/;"	l
f010693b	obj/kern/kernel.asm	/^f010693b:	55                   	push   %ebp$/;"	l
f010693c	obj/kern/kernel.asm	/^f010693c:	89 e5                	mov    %esp,%ebp$/;"	l
f010693e	obj/kern/kernel.asm	/^f010693e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	84 d2                	test   %dl,%dl$/;"	l
f010694a	obj/kern/kernel.asm	/^f010694a:	74 18                	je     f0106964 <strfind+0x29>$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	38 ca                	cmp    %cl,%dl$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	75 0a                	jne    f010695a <strfind+0x1f>$/;"	l
f0106950	obj/kern/kernel.asm	/^f0106950:	eb 12                	jmp    f0106964 <strfind+0x29>$/;"	l
f0106952	obj/kern/kernel.asm	/^f0106952:	38 ca                	cmp    %cl,%dl$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	74 0a                	je     f0106964 <strfind+0x29>$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	84 d2                	test   %dl,%dl$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	75 ee                	jne    f0106952 <strfind+0x17>$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	5d                   	pop    %ebp$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	c3                   	ret    $/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966 <memset>:$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	55                   	push   %ebp$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	89 e5                	mov    %esp,%ebp$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0106977	obj/kern/kernel.asm	/^f0106977:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	85 c9                	test   %ecx,%ecx$/;"	l
f0106982	obj/kern/kernel.asm	/^f0106982:	74 30                	je     f01069b4 <memset+0x4e>$/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010698a	obj/kern/kernel.asm	/^f010698a:	75 25                	jne    f01069b1 <memset+0x4b>$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	75 20                	jne    f01069b1 <memset+0x4b>$/;"	l
f0106991	obj/kern/kernel.asm	/^f0106991:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	89 d3                	mov    %edx,%ebx$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0106999	obj/kern/kernel.asm	/^f0106999:	89 d6                	mov    %edx,%esi$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	89 d0                	mov    %edx,%eax$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	09 f0                	or     %esi,%eax$/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	09 d0                	or     %edx,%eax$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	09 d8                	or     %ebx,%eax$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	fc                   	cld    $/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	eb 03                	jmp    f01069b4 <memset+0x4e>$/;"	l
f01069b1	obj/kern/kernel.asm	/^f01069b1:	fc                   	cld    $/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	89 f8                	mov    %edi,%eax$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f01069bd	obj/kern/kernel.asm	/^f01069bd:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	89 ec                	mov    %ebp,%esp$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	5d                   	pop    %ebp$/;"	l
f01069c4	obj/kern/kernel.asm	/^f01069c4:	c3                   	ret    $/;"	l
f01069c5	obj/kern/kernel.asm	/^f01069c5 <memmove>:$/;"	l
f01069c5	obj/kern/kernel.asm	/^f01069c5:	55                   	push   %ebp$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01069c8	obj/kern/kernel.asm	/^f01069c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01069d5	obj/kern/kernel.asm	/^f01069d5:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01069db	obj/kern/kernel.asm	/^f01069db:	89 c7                	mov    %eax,%edi$/;"	l
f01069dd	obj/kern/kernel.asm	/^f01069dd:	39 c6                	cmp    %eax,%esi$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	73 35                	jae    f0106a16 <memmove+0x51>$/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	39 d0                	cmp    %edx,%eax$/;"	l
f01069e6	obj/kern/kernel.asm	/^f01069e6:	73 2e                	jae    f0106a16 <memmove+0x51>$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	01 cf                	add    %ecx,%edi$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01069ed	obj/kern/kernel.asm	/^f01069ed:	75 1b                	jne    f0106a0a <memmove+0x45>$/;"	l
f01069ef	obj/kern/kernel.asm	/^f01069ef:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01069f5	obj/kern/kernel.asm	/^f01069f5:	75 13                	jne    f0106a0a <memmove+0x45>$/;"	l
f01069f7	obj/kern/kernel.asm	/^f01069f7:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	75 0e                	jne    f0106a0a <memmove+0x45>$/;"	l
f01069fc	obj/kern/kernel.asm	/^f01069fc:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01069ff	obj/kern/kernel.asm	/^f01069ff:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	fd                   	std    $/;"	l
f0106a06	obj/kern/kernel.asm	/^f0106a06:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106a08	obj/kern/kernel.asm	/^f0106a08:	eb 09                	jmp    f0106a13 <memmove+0x4e>$/;"	l
f0106a0a	obj/kern/kernel.asm	/^f0106a0a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106a0d	obj/kern/kernel.asm	/^f0106a0d:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106a10	obj/kern/kernel.asm	/^f0106a10:	fd                   	std    $/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	fc                   	cld    $/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	eb 20                	jmp    f0106a36 <memmove+0x71>$/;"	l
f0106a16	obj/kern/kernel.asm	/^f0106a16:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106a1c	obj/kern/kernel.asm	/^f0106a1c:	75 15                	jne    f0106a33 <memmove+0x6e>$/;"	l
f0106a1e	obj/kern/kernel.asm	/^f0106a1e:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0106a24	obj/kern/kernel.asm	/^f0106a24:	75 0d                	jne    f0106a33 <memmove+0x6e>$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	75 08                	jne    f0106a33 <memmove+0x6e>$/;"	l
f0106a2b	obj/kern/kernel.asm	/^f0106a2b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106a2e	obj/kern/kernel.asm	/^f0106a2e:	fc                   	cld    $/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	eb 03                	jmp    f0106a36 <memmove+0x71>$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	fc                   	cld    $/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106a36	obj/kern/kernel.asm	/^f0106a36:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	89 ec                	mov    %ebp,%esp$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	5d                   	pop    %ebp$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	c3                   	ret    $/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41 <memcpy>:$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	55                   	push   %ebp$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a44	obj/kern/kernel.asm	/^f0106a44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106a47	obj/kern/kernel.asm	/^f0106a47:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106a4e	obj/kern/kernel.asm	/^f0106a4e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106a51	obj/kern/kernel.asm	/^f0106a51:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106a5b	obj/kern/kernel.asm	/^f0106a5b:	e8 65 ff ff ff       	call   f01069c5 <memmove>$/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	c9                   	leave  $/;"	l
f0106a61	obj/kern/kernel.asm	/^f0106a61:	c3                   	ret    $/;"	l
f0106a62	obj/kern/kernel.asm	/^f0106a62 <memcmp>:$/;"	l
f0106a62	obj/kern/kernel.asm	/^f0106a62:	55                   	push   %ebp$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a65	obj/kern/kernel.asm	/^f0106a65:	57                   	push   %edi$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	56                   	push   %esi$/;"	l
f0106a67	obj/kern/kernel.asm	/^f0106a67:	53                   	push   %ebx$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106a71	obj/kern/kernel.asm	/^f0106a71:	85 c9                	test   %ecx,%ecx$/;"	l
f0106a73	obj/kern/kernel.asm	/^f0106a73:	74 36                	je     f0106aab <memcmp+0x49>$/;"	l
f0106a75	obj/kern/kernel.asm	/^f0106a75:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0106a78	obj/kern/kernel.asm	/^f0106a78:	0f b6 1f             	movzbl (%edi),%ebx$/;"	l
f0106a7b	obj/kern/kernel.asm	/^f0106a7b:	38 d8                	cmp    %bl,%al$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	74 20                	je     f0106a9f <memcmp+0x3d>$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	eb 14                	jmp    f0106a95 <memcmp+0x33>$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	0f b6 44 16 01       	movzbl 0x1(%esi,%edx,1),%eax$/;"	l
f0106a86	obj/kern/kernel.asm	/^f0106a86:	0f b6 5c 17 01       	movzbl 0x1(%edi,%edx,1),%ebx$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a8e	obj/kern/kernel.asm	/^f0106a8e:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	38 d8                	cmp    %bl,%al$/;"	l
f0106a93	obj/kern/kernel.asm	/^f0106a93:	74 12                	je     f0106aa7 <memcmp+0x45>$/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106a98	obj/kern/kernel.asm	/^f0106a98:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	29 d8                	sub    %ebx,%eax$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	eb 11                	jmp    f0106ab0 <memcmp+0x4e>$/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	85 c9                	test   %ecx,%ecx$/;"	l
f0106aa9	obj/kern/kernel.asm	/^f0106aa9:	75 d6                	jne    f0106a81 <memcmp+0x1f>$/;"	l
f0106aab	obj/kern/kernel.asm	/^f0106aab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	5b                   	pop    %ebx$/;"	l
f0106ab1	obj/kern/kernel.asm	/^f0106ab1:	5e                   	pop    %esi$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	5f                   	pop    %edi$/;"	l
f0106ab3	obj/kern/kernel.asm	/^f0106ab3:	5d                   	pop    %ebp$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	c3                   	ret    $/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5 <memfind>:$/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5:	55                   	push   %ebp$/;"	l
f0106ab6	obj/kern/kernel.asm	/^f0106ab6:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	89 c2                	mov    %eax,%edx$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106ac0	obj/kern/kernel.asm	/^f0106ac0:	39 d0                	cmp    %edx,%eax$/;"	l
f0106ac2	obj/kern/kernel.asm	/^f0106ac2:	73 15                	jae    f0106ad9 <memfind+0x24>$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106ac8	obj/kern/kernel.asm	/^f0106ac8:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106aca	obj/kern/kernel.asm	/^f0106aca:	75 06                	jne    f0106ad2 <memfind+0x1d>$/;"	l
f0106acc	obj/kern/kernel.asm	/^f0106acc:	eb 0b                	jmp    f0106ad9 <memfind+0x24>$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	74 07                	je     f0106ad9 <memfind+0x24>$/;"	l
f0106ad2	obj/kern/kernel.asm	/^f0106ad2:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	39 c2                	cmp    %eax,%edx$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	77 f5                	ja     f0106ace <memfind+0x19>$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	5d                   	pop    %ebp$/;"	l
f0106ada	obj/kern/kernel.asm	/^f0106ada:	c3                   	ret    $/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb <strtol>:$/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb:	55                   	push   %ebp$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ade	obj/kern/kernel.asm	/^f0106ade:	57                   	push   %edi$/;"	l
f0106adf	obj/kern/kernel.asm	/^f0106adf:	56                   	push   %esi$/;"	l
f0106ae0	obj/kern/kernel.asm	/^f0106ae0:	53                   	push   %ebx$/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106ae4	obj/kern/kernel.asm	/^f0106ae4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106ae7	obj/kern/kernel.asm	/^f0106ae7:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106aea	obj/kern/kernel.asm	/^f0106aea:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106aed	obj/kern/kernel.asm	/^f0106aed:	3c 20                	cmp    $0x20,%al$/;"	l
f0106aef	obj/kern/kernel.asm	/^f0106aef:	74 04                	je     f0106af5 <strtol+0x1a>$/;"	l
f0106af1	obj/kern/kernel.asm	/^f0106af1:	3c 09                	cmp    $0x9,%al$/;"	l
f0106af3	obj/kern/kernel.asm	/^f0106af3:	75 0e                	jne    f0106b03 <strtol+0x28>$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	3c 20                	cmp    $0x20,%al$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	74 f6                	je     f0106af5 <strtol+0x1a>$/;"	l
f0106aff	obj/kern/kernel.asm	/^f0106aff:	3c 09                	cmp    $0x9,%al$/;"	l
f0106b01	obj/kern/kernel.asm	/^f0106b01:	74 f2                	je     f0106af5 <strtol+0x1a>$/;"	l
f0106b03	obj/kern/kernel.asm	/^f0106b03:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0106b05	obj/kern/kernel.asm	/^f0106b05:	75 0c                	jne    f0106b13 <strtol+0x38>$/;"	l
f0106b07	obj/kern/kernel.asm	/^f0106b07:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106b0a	obj/kern/kernel.asm	/^f0106b0a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0106b11	obj/kern/kernel.asm	/^f0106b11:	eb 15                	jmp    f0106b28 <strtol+0x4d>$/;"	l
f0106b13	obj/kern/kernel.asm	/^f0106b13:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0106b1a	obj/kern/kernel.asm	/^f0106b1a:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	75 0a                	jne    f0106b28 <strtol+0x4d>$/;"	l
f0106b1e	obj/kern/kernel.asm	/^f0106b1e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106b21	obj/kern/kernel.asm	/^f0106b21:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
f0106b28	obj/kern/kernel.asm	/^f0106b28:	85 db                	test   %ebx,%ebx$/;"	l
f0106b2a	obj/kern/kernel.asm	/^f0106b2a:	0f 94 c0             	sete   %al$/;"	l
f0106b2d	obj/kern/kernel.asm	/^f0106b2d:	74 05                	je     f0106b34 <strtol+0x59>$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	75 18                	jne    f0106b4c <strtol+0x71>$/;"	l
f0106b34	obj/kern/kernel.asm	/^f0106b34:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106b37	obj/kern/kernel.asm	/^f0106b37:	75 13                	jne    f0106b4c <strtol+0x71>$/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106b3d	obj/kern/kernel.asm	/^f0106b3d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106b40	obj/kern/kernel.asm	/^f0106b40:	75 0a                	jne    f0106b4c <strtol+0x71>$/;"	l
f0106b42	obj/kern/kernel.asm	/^f0106b42:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106b45	obj/kern/kernel.asm	/^f0106b45:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106b4a	obj/kern/kernel.asm	/^f0106b4a:	eb 15                	jmp    f0106b61 <strtol+0x86>$/;"	l
f0106b4c	obj/kern/kernel.asm	/^f0106b4c:	84 c0                	test   %al,%al$/;"	l
f0106b4e	obj/kern/kernel.asm	/^f0106b4e:	66 90                	xchg   %ax,%ax$/;"	l
f0106b50	obj/kern/kernel.asm	/^f0106b50:	74 0f                	je     f0106b61 <strtol+0x86>$/;"	l
f0106b52	obj/kern/kernel.asm	/^f0106b52:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0106b57	obj/kern/kernel.asm	/^f0106b57:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	75 05                	jne    f0106b61 <strtol+0x86>$/;"	l
f0106b5c	obj/kern/kernel.asm	/^f0106b5c:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	b3 08                	mov    $0x8,%bl$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106b66	obj/kern/kernel.asm	/^f0106b66:	89 de                	mov    %ebx,%esi$/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106b6b	obj/kern/kernel.asm	/^f0106b6b:	89 cf                	mov    %ecx,%edi$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0106b70	obj/kern/kernel.asm	/^f0106b70:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0106b73	obj/kern/kernel.asm	/^f0106b73:	77 08                	ja     f0106b7d <strtol+0xa2>$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106b78	obj/kern/kernel.asm	/^f0106b78:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	eb 1e                	jmp    f0106b9b <strtol+0xc0>$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	8d 5f 9f             	lea    -0x61(%edi),%ebx$/;"	l
f0106b80	obj/kern/kernel.asm	/^f0106b80:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106b83	obj/kern/kernel.asm	/^f0106b83:	77 08                	ja     f0106b8d <strtol+0xb2>$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106b88	obj/kern/kernel.asm	/^f0106b88:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0106b8b	obj/kern/kernel.asm	/^f0106b8b:	eb 0e                	jmp    f0106b9b <strtol+0xc0>$/;"	l
f0106b8d	obj/kern/kernel.asm	/^f0106b8d:	8d 5f bf             	lea    -0x41(%edi),%ebx$/;"	l
f0106b90	obj/kern/kernel.asm	/^f0106b90:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	77 15                	ja     f0106baa <strtol+0xcf>$/;"	l
f0106b95	obj/kern/kernel.asm	/^f0106b95:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	39 f1                	cmp    %esi,%ecx$/;"	l
f0106b9d	obj/kern/kernel.asm	/^f0106b9d:	7d 0b                	jge    f0106baa <strtol+0xcf>$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106ba2	obj/kern/kernel.asm	/^f0106ba2:	0f af c6             	imul   %esi,%eax$/;"	l
f0106ba5	obj/kern/kernel.asm	/^f0106ba5:	8d 04 01             	lea    (%ecx,%eax,1),%eax$/;"	l
f0106ba8	obj/kern/kernel.asm	/^f0106ba8:	eb be                	jmp    f0106b68 <strtol+0x8d>$/;"	l
f0106baa	obj/kern/kernel.asm	/^f0106baa:	89 c1                	mov    %eax,%ecx$/;"	l
f0106bac	obj/kern/kernel.asm	/^f0106bac:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	74 05                	je     f0106bb7 <strtol+0xdc>$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106bb5	obj/kern/kernel.asm	/^f0106bb5:	89 13                	mov    %edx,(%ebx)$/;"	l
f0106bb7	obj/kern/kernel.asm	/^f0106bb7:	89 ca                	mov    %ecx,%edx$/;"	l
f0106bb9	obj/kern/kernel.asm	/^f0106bb9:	f7 da                	neg    %edx$/;"	l
f0106bbb	obj/kern/kernel.asm	/^f0106bbb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0106bbf	obj/kern/kernel.asm	/^f0106bbf:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106bc5	obj/kern/kernel.asm	/^f0106bc5:	5b                   	pop    %ebx$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	5e                   	pop    %esi$/;"	l
f0106bc7	obj/kern/kernel.asm	/^f0106bc7:	5f                   	pop    %edi$/;"	l
f0106bc8	obj/kern/kernel.asm	/^f0106bc8:	5d                   	pop    %ebp$/;"	l
f0106bc9	obj/kern/kernel.asm	/^f0106bc9:	c3                   	ret    $/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc <mpentry_start>:$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	fa                   	cli    $/;"	l
f0106bcd	obj/kern/kernel.asm	/^f0106bcd:	31 c0                	xor    %eax,%eax$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	8e d8                	mov    %eax,%ds$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	8e c0                	mov    %eax,%es$/;"	l
f0106bd3	obj/kern/kernel.asm	/^f0106bd3:	8e d0                	mov    %eax,%ss$/;"	l
f0106bd5	obj/kern/kernel.asm	/^f0106bd5:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	74 70                	je     f0106c4a <mpentry_end+0x4>$/;"	l
f0106bda	obj/kern/kernel.asm	/^f0106bda:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106bdd	obj/kern/kernel.asm	/^f0106bdd:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106bea	obj/kern/kernel.asm	/^f0106bea:	08 00                	or     %al,(%eax)$/;"	l
f0106bec	obj/kern/kernel.asm	/^f0106bec <start32>:$/;"	l
f0106bec	obj/kern/kernel.asm	/^f0106bec:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106bf0	obj/kern/kernel.asm	/^f0106bf0:	8e d8                	mov    %eax,%ds$/;"	l
f0106bf2	obj/kern/kernel.asm	/^f0106bf2:	8e c0                	mov    %eax,%es$/;"	l
f0106bf4	obj/kern/kernel.asm	/^f0106bf4:	8e d0                	mov    %eax,%ss$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106bfa	obj/kern/kernel.asm	/^f0106bfa:	8e e0                	mov    %eax,%fs$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	8e e8                	mov    %eax,%gs$/;"	l
f0106bfe	obj/kern/kernel.asm	/^f0106bfe:	b8 00 30 12 00       	mov    $0x123000,%eax$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106c09	obj/kern/kernel.asm	/^f0106c09:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106c0e	obj/kern/kernel.asm	/^f0106c0e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106c11	obj/kern/kernel.asm	/^f0106c11:	8b 25 90 5e 27 f0    	mov    0xf0275e90,%esp$/;"	l
f0106c17	obj/kern/kernel.asm	/^f0106c17:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106c1c	obj/kern/kernel.asm	/^f0106c1c:	b8 ed 00 10 f0       	mov    $0xf01000ed,%eax$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	ff d0                	call   *%eax$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23 <spin>:$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23:	eb fe                	jmp    f0106c23 <spin>$/;"	l
f0106c25	obj/kern/kernel.asm	/^f0106c25:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28 <gdt>:$/;"	l
f0106c30	obj/kern/kernel.asm	/^f0106c30:	ff                   	(bad)  $/;"	l
f0106c31	obj/kern/kernel.asm	/^f0106c31:	ff 00                	incl   (%eax)$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	00 00                	add    %al,(%eax)$/;"	l
f0106c35	obj/kern/kernel.asm	/^f0106c35:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106c3c	obj/kern/kernel.asm	/^f0106c3c:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40 <gdtdesc>:$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	17                   	pop    %ss$/;"	l
f0106c41	obj/kern/kernel.asm	/^f0106c41:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46 <mpentry_end>:$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46:	90                   	nop$/;"	l
f0106c50	obj/kern/kernel.asm	/^f0106c50 <sum>:$/;"	l
f0106c50	obj/kern/kernel.asm	/^f0106c50:	55                   	push   %ebp$/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c53	obj/kern/kernel.asm	/^f0106c53:	56                   	push   %esi$/;"	l
f0106c54	obj/kern/kernel.asm	/^f0106c54:	53                   	push   %ebx$/;"	l
f0106c55	obj/kern/kernel.asm	/^f0106c55:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106c5a	obj/kern/kernel.asm	/^f0106c5a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	85 d2                	test   %edx,%edx$/;"	l
f0106c61	obj/kern/kernel.asm	/^f0106c61:	7e 0d                	jle    f0106c70 <sum+0x20>$/;"	l
f0106c63	obj/kern/kernel.asm	/^f0106c63:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f0106c67	obj/kern/kernel.asm	/^f0106c67:	01 f3                	add    %esi,%ebx$/;"	l
f0106c69	obj/kern/kernel.asm	/^f0106c69:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106c6c	obj/kern/kernel.asm	/^f0106c6c:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106c6e	obj/kern/kernel.asm	/^f0106c6e:	75 f3                	jne    f0106c63 <sum+0x13>$/;"	l
f0106c70	obj/kern/kernel.asm	/^f0106c70:	89 d8                	mov    %ebx,%eax$/;"	l
f0106c72	obj/kern/kernel.asm	/^f0106c72:	5b                   	pop    %ebx$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	5e                   	pop    %esi$/;"	l
f0106c74	obj/kern/kernel.asm	/^f0106c74:	5d                   	pop    %ebp$/;"	l
f0106c75	obj/kern/kernel.asm	/^f0106c75:	c3                   	ret    $/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76 <mpsearch1>:$/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76:	55                   	push   %ebp$/;"	l
f0106c77	obj/kern/kernel.asm	/^f0106c77:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c79	obj/kern/kernel.asm	/^f0106c79:	56                   	push   %esi$/;"	l
f0106c7a	obj/kern/kernel.asm	/^f0106c7a:	53                   	push   %ebx$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	8b 0d 94 5e 27 f0    	mov    0xf0275e94,%ecx$/;"	l
f0106c84	obj/kern/kernel.asm	/^f0106c84:	89 c3                	mov    %eax,%ebx$/;"	l
f0106c86	obj/kern/kernel.asm	/^f0106c86:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106c89	obj/kern/kernel.asm	/^f0106c89:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106c8b	obj/kern/kernel.asm	/^f0106c8b:	72 20                	jb     f0106cad <mpsearch1+0x37>$/;"	l
f0106c8d	obj/kern/kernel.asm	/^f0106c8d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106c91	obj/kern/kernel.asm	/^f0106c91:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	f0 $/;"	l
f0106c99	obj/kern/kernel.asm	/^f0106c99:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	00 $/;"	l
f0106ca1	obj/kern/kernel.asm	/^f0106ca1:	c7 04 24 bd 9a 10 f0 	movl   $0xf0109abd,(%esp)$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	e8 d8 93 ff ff       	call   f0100085 <_panic>$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	89 f2                	mov    %esi,%edx$/;"	l
f0106cb2	obj/kern/kernel.asm	/^f0106cb2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106cb5	obj/kern/kernel.asm	/^f0106cb5:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	77 20                	ja     f0106cd9 <mpsearch1+0x63>$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106cbd	obj/kern/kernel.asm	/^f0106cbd:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0106cc4	obj/kern/kernel.asm	/^f0106cc4:	f0 $/;"	l
f0106cc5	obj/kern/kernel.asm	/^f0106cc5:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106ccc	obj/kern/kernel.asm	/^f0106ccc:	00 $/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	c7 04 24 bd 9a 10 f0 	movl   $0xf0109abd,(%esp)$/;"	l
f0106cd4	obj/kern/kernel.asm	/^f0106cd4:	e8 ac 93 ff ff       	call   f0100085 <_panic>$/;"	l
f0106cd9	obj/kern/kernel.asm	/^f0106cd9:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106ce7	obj/kern/kernel.asm	/^f0106ce7:	73 33                	jae    f0106d1c <mpsearch1+0xa6>$/;"	l
f0106ce9	obj/kern/kernel.asm	/^f0106ce9:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106cf0	obj/kern/kernel.asm	/^f0106cf0:	00 $/;"	l
f0106cf1	obj/kern/kernel.asm	/^f0106cf1:	c7 44 24 04 cd 9a 10 	movl   $0xf0109acd,0x4(%esp)$/;"	l
f0106cf8	obj/kern/kernel.asm	/^f0106cf8:	f0 $/;"	l
f0106cf9	obj/kern/kernel.asm	/^f0106cf9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106cfc	obj/kern/kernel.asm	/^f0106cfc:	e8 61 fd ff ff       	call   f0106a62 <memcmp>$/;"	l
f0106d01	obj/kern/kernel.asm	/^f0106d01:	85 c0                	test   %eax,%eax$/;"	l
f0106d03	obj/kern/kernel.asm	/^f0106d03:	75 10                	jne    f0106d15 <mpsearch1+0x9f>$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0106d0a	obj/kern/kernel.asm	/^f0106d0a:	89 d8                	mov    %ebx,%eax$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	e8 3f ff ff ff       	call   f0106c50 <sum>$/;"	l
f0106d11	obj/kern/kernel.asm	/^f0106d11:	84 c0                	test   %al,%al$/;"	l
f0106d13	obj/kern/kernel.asm	/^f0106d13:	74 0c                	je     f0106d21 <mpsearch1+0xab>$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	39 de                	cmp    %ebx,%esi$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	77 cd                	ja     f0106ce9 <mpsearch1+0x73>$/;"	l
f0106d1c	obj/kern/kernel.asm	/^f0106d1c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106d21	obj/kern/kernel.asm	/^f0106d21:	89 d8                	mov    %ebx,%eax$/;"	l
f0106d23	obj/kern/kernel.asm	/^f0106d23:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d26	obj/kern/kernel.asm	/^f0106d26:	5b                   	pop    %ebx$/;"	l
f0106d27	obj/kern/kernel.asm	/^f0106d27:	5e                   	pop    %esi$/;"	l
f0106d28	obj/kern/kernel.asm	/^f0106d28:	5d                   	pop    %ebp$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	c3                   	ret    $/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a <mp_init>:$/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a:	55                   	push   %ebp$/;"	l
f0106d2b	obj/kern/kernel.asm	/^f0106d2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d2d	obj/kern/kernel.asm	/^f0106d2d:	57                   	push   %edi$/;"	l
f0106d2e	obj/kern/kernel.asm	/^f0106d2e:	56                   	push   %esi$/;"	l
f0106d2f	obj/kern/kernel.asm	/^f0106d2f:	53                   	push   %ebx$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106d33	obj/kern/kernel.asm	/^f0106d33:	c7 05 c0 83 27 f0 20 	movl   $0xf0278020,0xf02783c0$/;"	l
f0106d3a	obj/kern/kernel.asm	/^f0106d3a:	80 27 f0 $/;"	l
f0106d3d	obj/kern/kernel.asm	/^f0106d3d:	83 3d 94 5e 27 f0 00 	cmpl   $0x0,0xf0275e94$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44:	75 24                	jne    f0106d6a <mp_init+0x40>$/;"	l
f0106d46	obj/kern/kernel.asm	/^f0106d46:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106d4d	obj/kern/kernel.asm	/^f0106d4d:	00 $/;"	l
f0106d4e	obj/kern/kernel.asm	/^f0106d4e:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0106d55	obj/kern/kernel.asm	/^f0106d55:	f0 $/;"	l
f0106d56	obj/kern/kernel.asm	/^f0106d56:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0106d5d	obj/kern/kernel.asm	/^f0106d5d:	00 $/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	c7 04 24 bd 9a 10 f0 	movl   $0xf0109abd,(%esp)$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	e8 1b 93 ff ff       	call   f0100085 <_panic>$/;"	l
f0106d6a	obj/kern/kernel.asm	/^f0106d6a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106d71	obj/kern/kernel.asm	/^f0106d71:	85 c0                	test   %eax,%eax$/;"	l
f0106d73	obj/kern/kernel.asm	/^f0106d73:	74 16                	je     f0106d8b <mp_init+0x61>$/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106d78	obj/kern/kernel.asm	/^f0106d78:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106d7d	obj/kern/kernel.asm	/^f0106d7d:	e8 f4 fe ff ff       	call   f0106c76 <mpsearch1>$/;"	l
f0106d82	obj/kern/kernel.asm	/^f0106d82:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106d85	obj/kern/kernel.asm	/^f0106d85:	85 c0                	test   %eax,%eax$/;"	l
f0106d87	obj/kern/kernel.asm	/^f0106d87:	75 3c                	jne    f0106dc5 <mp_init+0x9b>$/;"	l
f0106d89	obj/kern/kernel.asm	/^f0106d89:	eb 20                	jmp    f0106dab <mp_init+0x81>$/;"	l
f0106d8b	obj/kern/kernel.asm	/^f0106d8b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106d92	obj/kern/kernel.asm	/^f0106d92:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106d95	obj/kern/kernel.asm	/^f0106d95:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106d9a	obj/kern/kernel.asm	/^f0106d9a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106d9f	obj/kern/kernel.asm	/^f0106d9f:	e8 d2 fe ff ff       	call   f0106c76 <mpsearch1>$/;"	l
f0106da4	obj/kern/kernel.asm	/^f0106da4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106da7	obj/kern/kernel.asm	/^f0106da7:	85 c0                	test   %eax,%eax$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	75 1a                	jne    f0106dc5 <mp_init+0x9b>$/;"	l
f0106dab	obj/kern/kernel.asm	/^f0106dab:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106db0	obj/kern/kernel.asm	/^f0106db0:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106db5	obj/kern/kernel.asm	/^f0106db5:	e8 bc fe ff ff       	call   f0106c76 <mpsearch1>$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106dbd	obj/kern/kernel.asm	/^f0106dbd:	85 c0                	test   %eax,%eax$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	0f 84 28 02 00 00    	je     f0106fed <mp_init+0x2c3>$/;"	l
f0106dc5	obj/kern/kernel.asm	/^f0106dc5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106dc8	obj/kern/kernel.asm	/^f0106dc8:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0106dcb	obj/kern/kernel.asm	/^f0106dcb:	85 ff                	test   %edi,%edi$/;"	l
f0106dcd	obj/kern/kernel.asm	/^f0106dcd:	74 06                	je     f0106dd5 <mp_init+0xab>$/;"	l
f0106dcf	obj/kern/kernel.asm	/^f0106dcf:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106dd3	obj/kern/kernel.asm	/^f0106dd3:	74 11                	je     f0106de6 <mp_init+0xbc>$/;"	l
f0106dd5	obj/kern/kernel.asm	/^f0106dd5:	c7 04 24 30 99 10 f0 	movl   $0xf0109930,(%esp)$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	e8 6a d6 ff ff       	call   f010444b <cprintf>$/;"	l
f0106de1	obj/kern/kernel.asm	/^f0106de1:	e9 07 02 00 00       	jmp    f0106fed <mp_init+0x2c3>$/;"	l
f0106de6	obj/kern/kernel.asm	/^f0106de6:	89 f8                	mov    %edi,%eax$/;"	l
f0106de8	obj/kern/kernel.asm	/^f0106de8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106deb	obj/kern/kernel.asm	/^f0106deb:	3b 05 94 5e 27 f0    	cmp    0xf0275e94,%eax$/;"	l
f0106df1	obj/kern/kernel.asm	/^f0106df1:	72 20                	jb     f0106e13 <mp_init+0xe9>$/;"	l
f0106df3	obj/kern/kernel.asm	/^f0106df3:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106df7	obj/kern/kernel.asm	/^f0106df7:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f0106dfe	obj/kern/kernel.asm	/^f0106dfe:	f0 $/;"	l
f0106dff	obj/kern/kernel.asm	/^f0106dff:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106e06	obj/kern/kernel.asm	/^f0106e06:	00 $/;"	l
f0106e07	obj/kern/kernel.asm	/^f0106e07:	c7 04 24 bd 9a 10 f0 	movl   $0xf0109abd,(%esp)$/;"	l
f0106e0e	obj/kern/kernel.asm	/^f0106e0e:	e8 72 92 ff ff       	call   f0100085 <_panic>$/;"	l
f0106e13	obj/kern/kernel.asm	/^f0106e13:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f0106e19	obj/kern/kernel.asm	/^f0106e19:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20:	00 $/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	c7 44 24 04 d2 9a 10 	movl   $0xf0109ad2,0x4(%esp)$/;"	l
f0106e28	obj/kern/kernel.asm	/^f0106e28:	f0 $/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106e2c	obj/kern/kernel.asm	/^f0106e2c:	e8 31 fc ff ff       	call   f0106a62 <memcmp>$/;"	l
f0106e31	obj/kern/kernel.asm	/^f0106e31:	85 c0                	test   %eax,%eax$/;"	l
f0106e33	obj/kern/kernel.asm	/^f0106e33:	74 11                	je     f0106e46 <mp_init+0x11c>$/;"	l
f0106e35	obj/kern/kernel.asm	/^f0106e35:	c7 04 24 60 99 10 f0 	movl   $0xf0109960,(%esp)$/;"	l
f0106e3c	obj/kern/kernel.asm	/^f0106e3c:	e8 0a d6 ff ff       	call   f010444b <cprintf>$/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	e9 a7 01 00 00       	jmp    f0106fed <mp_init+0x2c3>$/;"	l
f0106e46	obj/kern/kernel.asm	/^f0106e46:	0f b7 57 04          	movzwl 0x4(%edi),%edx$/;"	l
f0106e4a	obj/kern/kernel.asm	/^f0106e4a:	89 f8                	mov    %edi,%eax$/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c:	e8 ff fd ff ff       	call   f0106c50 <sum>$/;"	l
f0106e51	obj/kern/kernel.asm	/^f0106e51:	84 c0                	test   %al,%al$/;"	l
f0106e53	obj/kern/kernel.asm	/^f0106e53:	74 11                	je     f0106e66 <mp_init+0x13c>$/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	c7 04 24 94 99 10 f0 	movl   $0xf0109994,(%esp)$/;"	l
f0106e5c	obj/kern/kernel.asm	/^f0106e5c:	e8 ea d5 ff ff       	call   f010444b <cprintf>$/;"	l
f0106e61	obj/kern/kernel.asm	/^f0106e61:	e9 87 01 00 00       	jmp    f0106fed <mp_init+0x2c3>$/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66:	0f b6 47 06          	movzbl 0x6(%edi),%eax$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	3c 01                	cmp    $0x1,%al$/;"	l
f0106e6c	obj/kern/kernel.asm	/^f0106e6c:	74 1c                	je     f0106e8a <mp_init+0x160>$/;"	l
f0106e6e	obj/kern/kernel.asm	/^f0106e6e:	3c 04                	cmp    $0x4,%al$/;"	l
f0106e70	obj/kern/kernel.asm	/^f0106e70:	74 18                	je     f0106e8a <mp_init+0x160>$/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e79	obj/kern/kernel.asm	/^f0106e79:	c7 04 24 b8 99 10 f0 	movl   $0xf01099b8,(%esp)$/;"	l
f0106e80	obj/kern/kernel.asm	/^f0106e80:	e8 c6 d5 ff ff       	call   f010444b <cprintf>$/;"	l
f0106e85	obj/kern/kernel.asm	/^f0106e85:	e9 63 01 00 00       	jmp    f0106fed <mp_init+0x2c3>$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	0f b7 57 28          	movzwl 0x28(%edi),%edx$/;"	l
f0106e8e	obj/kern/kernel.asm	/^f0106e8e:	0f b7 47 04          	movzwl 0x4(%edi),%eax$/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	8d 04 07             	lea    (%edi,%eax,1),%eax$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	e8 b6 fd ff ff       	call   f0106c50 <sum>$/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	3a 47 2a             	cmp    0x2a(%edi),%al$/;"	l
f0106e9d	obj/kern/kernel.asm	/^f0106e9d:	74 11                	je     f0106eb0 <mp_init+0x186>$/;"	l
f0106e9f	obj/kern/kernel.asm	/^f0106e9f:	c7 04 24 d8 99 10 f0 	movl   $0xf01099d8,(%esp)$/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6:	e8 a0 d5 ff ff       	call   f010444b <cprintf>$/;"	l
f0106eab	obj/kern/kernel.asm	/^f0106eab:	e9 3d 01 00 00       	jmp    f0106fed <mp_init+0x2c3>$/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	85 ff                	test   %edi,%edi$/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	0f 84 35 01 00 00    	je     f0106fed <mp_init+0x2c3>$/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8:	c7 05 00 80 27 f0 01 	movl   $0x1,0xf0278000$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	00 00 00 $/;"	l
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	8b 47 24             	mov    0x24(%edi),%eax$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	a3 00 90 2b f0       	mov    %eax,0xf02b9000$/;"	l
f0106eca	obj/kern/kernel.asm	/^f0106eca:	8d 5f 2c             	lea    0x2c(%edi),%ebx$/;"	l
f0106ecd	obj/kern/kernel.asm	/^f0106ecd:	66 83 7f 22 00       	cmpw   $0x0,0x22(%edi)$/;"	l
f0106ed2	obj/kern/kernel.asm	/^f0106ed2:	0f 84 96 00 00 00    	je     f0106f6e <mp_init+0x244>$/;"	l
f0106ed8	obj/kern/kernel.asm	/^f0106ed8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106edd	obj/kern/kernel.asm	/^f0106edd:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0:	84 c0                	test   %al,%al$/;"	l
f0106ee2	obj/kern/kernel.asm	/^f0106ee2:	74 06                	je     f0106eea <mp_init+0x1c0>$/;"	l
f0106ee4	obj/kern/kernel.asm	/^f0106ee4:	3c 04                	cmp    $0x4,%al$/;"	l
f0106ee6	obj/kern/kernel.asm	/^f0106ee6:	77 56                	ja     f0106f3e <mp_init+0x214>$/;"	l
f0106ee8	obj/kern/kernel.asm	/^f0106ee8:	eb 4f                	jmp    f0106f39 <mp_init+0x20f>$/;"	l
f0106eea	obj/kern/kernel.asm	/^f0106eea:	89 da                	mov    %ebx,%edx$/;"	l
f0106eec	obj/kern/kernel.asm	/^f0106eec:	f6 43 03 02          	testb  $0x2,0x3(%ebx)$/;"	l
f0106ef0	obj/kern/kernel.asm	/^f0106ef0:	74 11                	je     f0106f03 <mp_init+0x1d9>$/;"	l
f0106ef2	obj/kern/kernel.asm	/^f0106ef2:	6b 05 c4 83 27 f0 74 	imul   $0x74,0xf02783c4,%eax$/;"	l
f0106ef9	obj/kern/kernel.asm	/^f0106ef9:	05 20 80 27 f0       	add    $0xf0278020,%eax$/;"	l
f0106efe	obj/kern/kernel.asm	/^f0106efe:	a3 c0 83 27 f0       	mov    %eax,0xf02783c0$/;"	l
f0106f03	obj/kern/kernel.asm	/^f0106f03:	a1 c4 83 27 f0       	mov    0xf02783c4,%eax$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	7f 13                	jg     f0106f20 <mp_init+0x1f6>$/;"	l
f0106f0d	obj/kern/kernel.asm	/^f0106f0d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106f10	obj/kern/kernel.asm	/^f0106f10:	88 82 20 80 27 f0    	mov    %al,-0xfd87fe0(%edx)$/;"	l
f0106f16	obj/kern/kernel.asm	/^f0106f16:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	a3 c4 83 27 f0       	mov    %eax,0xf02783c4$/;"	l
f0106f1e	obj/kern/kernel.asm	/^f0106f1e:	eb 14                	jmp    f0106f34 <mp_init+0x20a>$/;"	l
f0106f20	obj/kern/kernel.asm	/^f0106f20:	0f b6 42 01          	movzbl 0x1(%edx),%eax$/;"	l
f0106f24	obj/kern/kernel.asm	/^f0106f24:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f28	obj/kern/kernel.asm	/^f0106f28:	c7 04 24 08 9a 10 f0 	movl   $0xf0109a08,(%esp)$/;"	l
f0106f2f	obj/kern/kernel.asm	/^f0106f2f:	e8 17 d5 ff ff       	call   f010444b <cprintf>$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	83 c3 14             	add    $0x14,%ebx$/;"	l
f0106f37	obj/kern/kernel.asm	/^f0106f37:	eb 26                	jmp    f0106f5f <mp_init+0x235>$/;"	l
f0106f39	obj/kern/kernel.asm	/^f0106f39:	83 c3 08             	add    $0x8,%ebx$/;"	l
f0106f3c	obj/kern/kernel.asm	/^f0106f3c:	eb 21                	jmp    f0106f5f <mp_init+0x235>$/;"	l
f0106f3e	obj/kern/kernel.asm	/^f0106f3e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106f41	obj/kern/kernel.asm	/^f0106f41:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f45	obj/kern/kernel.asm	/^f0106f45:	c7 04 24 30 9a 10 f0 	movl   $0xf0109a30,(%esp)$/;"	l
f0106f4c	obj/kern/kernel.asm	/^f0106f4c:	e8 fa d4 ff ff       	call   f010444b <cprintf>$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	c7 05 00 80 27 f0 00 	movl   $0x0,0xf0278000$/;"	l
f0106f58	obj/kern/kernel.asm	/^f0106f58:	00 00 00 $/;"	l
f0106f5b	obj/kern/kernel.asm	/^f0106f5b:	0f b7 77 22          	movzwl 0x22(%edi),%esi$/;"	l
f0106f5f	obj/kern/kernel.asm	/^f0106f5f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106f62	obj/kern/kernel.asm	/^f0106f62:	0f b7 47 22          	movzwl 0x22(%edi),%eax$/;"	l
f0106f66	obj/kern/kernel.asm	/^f0106f66:	39 f0                	cmp    %esi,%eax$/;"	l
f0106f68	obj/kern/kernel.asm	/^f0106f68:	0f 87 6f ff ff ff    	ja     f0106edd <mp_init+0x1b3>$/;"	l
f0106f6e	obj/kern/kernel.asm	/^f0106f6e:	a1 c0 83 27 f0       	mov    0xf02783c0,%eax$/;"	l
f0106f73	obj/kern/kernel.asm	/^f0106f73:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106f7a	obj/kern/kernel.asm	/^f0106f7a:	83 3d 00 80 27 f0 00 	cmpl   $0x0,0xf0278000$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	75 22                	jne    f0106fa5 <mp_init+0x27b>$/;"	l
f0106f83	obj/kern/kernel.asm	/^f0106f83:	c7 05 c4 83 27 f0 01 	movl   $0x1,0xf02783c4$/;"	l
f0106f8a	obj/kern/kernel.asm	/^f0106f8a:	00 00 00 $/;"	l
f0106f8d	obj/kern/kernel.asm	/^f0106f8d:	c7 05 00 90 2b f0 00 	movl   $0x0,0xf02b9000$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	00 00 00 $/;"	l
f0106f97	obj/kern/kernel.asm	/^f0106f97:	c7 04 24 50 9a 10 f0 	movl   $0xf0109a50,(%esp)$/;"	l
f0106f9e	obj/kern/kernel.asm	/^f0106f9e:	e8 a8 d4 ff ff       	call   f010444b <cprintf>$/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3:	eb 48                	jmp    f0106fed <mp_init+0x2c3>$/;"	l
f0106fa5	obj/kern/kernel.asm	/^f0106fa5:	a1 c4 83 27 f0       	mov    0xf02783c4,%eax$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106fae	obj/kern/kernel.asm	/^f0106fae:	a1 c0 83 27 f0       	mov    0xf02783c0,%eax$/;"	l
f0106fb3	obj/kern/kernel.asm	/^f0106fb3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106fb6	obj/kern/kernel.asm	/^f0106fb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106fba	obj/kern/kernel.asm	/^f0106fba:	c7 04 24 d7 9a 10 f0 	movl   $0xf0109ad7,(%esp)$/;"	l
f0106fc1	obj/kern/kernel.asm	/^f0106fc1:	e8 85 d4 ff ff       	call   f010444b <cprintf>$/;"	l
f0106fc6	obj/kern/kernel.asm	/^f0106fc6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	74 1e                	je     f0106fed <mp_init+0x2c3>$/;"	l
f0106fcf	obj/kern/kernel.asm	/^f0106fcf:	c7 04 24 7c 9a 10 f0 	movl   $0xf0109a7c,(%esp)$/;"	l
f0106fd6	obj/kern/kernel.asm	/^f0106fd6:	e8 70 d4 ff ff       	call   f010444b <cprintf>$/;"	l
f0106fdb	obj/kern/kernel.asm	/^f0106fdb:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106fe0	obj/kern/kernel.asm	/^f0106fe0:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106fe5	obj/kern/kernel.asm	/^f0106fe5:	ee                   	out    %al,(%dx)$/;"	l
f0106fe6	obj/kern/kernel.asm	/^f0106fe6:	b2 23                	mov    $0x23,%dl$/;"	l
f0106fe8	obj/kern/kernel.asm	/^f0106fe8:	ec                   	in     (%dx),%al$/;"	l
f0106fe9	obj/kern/kernel.asm	/^f0106fe9:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106fec	obj/kern/kernel.asm	/^f0106fec:	ee                   	out    %al,(%dx)$/;"	l
f0106fed	obj/kern/kernel.asm	/^f0106fed:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106ff0	obj/kern/kernel.asm	/^f0106ff0:	5b                   	pop    %ebx$/;"	l
f0106ff1	obj/kern/kernel.asm	/^f0106ff1:	5e                   	pop    %esi$/;"	l
f0106ff2	obj/kern/kernel.asm	/^f0106ff2:	5f                   	pop    %edi$/;"	l
f0106ff3	obj/kern/kernel.asm	/^f0106ff3:	5d                   	pop    %ebp$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	c3                   	ret    $/;"	l
f0106ff5	obj/kern/kernel.asm	/^f0106ff5:	00 00                	add    %al,(%eax)$/;"	l
f0106ff8	obj/kern/kernel.asm	/^f0106ff8 <lapicw>:$/;"	l
f0106ff8	obj/kern/kernel.asm	/^f0106ff8:	55                   	push   %ebp$/;"	l
f0106ff9	obj/kern/kernel.asm	/^f0106ff9:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ffb	obj/kern/kernel.asm	/^f0106ffb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106ffe	obj/kern/kernel.asm	/^f0106ffe:	03 05 00 90 2b f0    	add    0xf02b9000,%eax$/;"	l
f0107004	obj/kern/kernel.asm	/^f0107004:	89 10                	mov    %edx,(%eax)$/;"	l
f0107006	obj/kern/kernel.asm	/^f0107006:	a1 00 90 2b f0       	mov    0xf02b9000,%eax$/;"	l
f010700b	obj/kern/kernel.asm	/^f010700b:	83 c0 20             	add    $0x20,%eax$/;"	l
f010700e	obj/kern/kernel.asm	/^f010700e:	8b 00                	mov    (%eax),%eax$/;"	l
f0107010	obj/kern/kernel.asm	/^f0107010:	5d                   	pop    %ebp$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	c3                   	ret    $/;"	l
f0107012	obj/kern/kernel.asm	/^f0107012 <cpunum>:$/;"	l
f0107012	obj/kern/kernel.asm	/^f0107012:	55                   	push   %ebp$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	89 e5                	mov    %esp,%ebp$/;"	l
f0107015	obj/kern/kernel.asm	/^f0107015:	8b 15 00 90 2b f0    	mov    0xf02b9000,%edx$/;"	l
f010701b	obj/kern/kernel.asm	/^f010701b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107020	obj/kern/kernel.asm	/^f0107020:	85 d2                	test   %edx,%edx$/;"	l
f0107022	obj/kern/kernel.asm	/^f0107022:	74 08                	je     f010702c <cpunum+0x1a>$/;"	l
f0107024	obj/kern/kernel.asm	/^f0107024:	83 c2 20             	add    $0x20,%edx$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	8b 02                	mov    (%edx),%eax$/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010702c	obj/kern/kernel.asm	/^f010702c:	5d                   	pop    %ebp$/;"	l
f010702d	obj/kern/kernel.asm	/^f010702d:	c3                   	ret    $/;"	l
f010702e	obj/kern/kernel.asm	/^f010702e <lapic_init>:$/;"	l
f010702e	obj/kern/kernel.asm	/^f010702e:	55                   	push   %ebp$/;"	l
f010702f	obj/kern/kernel.asm	/^f010702f:	89 e5                	mov    %esp,%ebp$/;"	l
f0107031	obj/kern/kernel.asm	/^f0107031:	83 3d 00 90 2b f0 00 	cmpl   $0x0,0xf02b9000$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	0f 84 0b 01 00 00    	je     f0107149 <lapic_init+0x11b>$/;"	l
f010703e	obj/kern/kernel.asm	/^f010703e:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0107043	obj/kern/kernel.asm	/^f0107043:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0107048	obj/kern/kernel.asm	/^f0107048:	e8 ab ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f010704d	obj/kern/kernel.asm	/^f010704d:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0107052	obj/kern/kernel.asm	/^f0107052:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0107057	obj/kern/kernel.asm	/^f0107057:	e8 9c ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0107061	obj/kern/kernel.asm	/^f0107061:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0107066	obj/kern/kernel.asm	/^f0107066:	e8 8d ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f010706b	obj/kern/kernel.asm	/^f010706b:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0107070	obj/kern/kernel.asm	/^f0107070:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0107075	obj/kern/kernel.asm	/^f0107075:	e8 7e ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f010707a	obj/kern/kernel.asm	/^f010707a:	e8 93 ff ff ff       	call   f0107012 <cpunum>$/;"	l
f010707f	obj/kern/kernel.asm	/^f010707f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107082	obj/kern/kernel.asm	/^f0107082:	05 20 80 27 f0       	add    $0xf0278020,%eax$/;"	l
f0107087	obj/kern/kernel.asm	/^f0107087:	3b 05 c0 83 27 f0    	cmp    0xf02783c0,%eax$/;"	l
f010708d	obj/kern/kernel.asm	/^f010708d:	74 0f                	je     f010709e <lapic_init+0x70>$/;"	l
f010708f	obj/kern/kernel.asm	/^f010708f:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0107094	obj/kern/kernel.asm	/^f0107094:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	e8 5a ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f010709e	obj/kern/kernel.asm	/^f010709e:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01070a3	obj/kern/kernel.asm	/^f01070a3:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f01070a8	obj/kern/kernel.asm	/^f01070a8:	e8 4b ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f01070ad	obj/kern/kernel.asm	/^f01070ad:	a1 00 90 2b f0       	mov    0xf02b9000,%eax$/;"	l
f01070b2	obj/kern/kernel.asm	/^f01070b2:	83 c0 30             	add    $0x30,%eax$/;"	l
f01070b5	obj/kern/kernel.asm	/^f01070b5:	8b 00                	mov    (%eax),%eax$/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01070ba	obj/kern/kernel.asm	/^f01070ba:	3c 03                	cmp    $0x3,%al$/;"	l
f01070bc	obj/kern/kernel.asm	/^f01070bc:	76 0f                	jbe    f01070cd <lapic_init+0x9f>$/;"	l
f01070be	obj/kern/kernel.asm	/^f01070be:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01070c3	obj/kern/kernel.asm	/^f01070c3:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01070c8	obj/kern/kernel.asm	/^f01070c8:	e8 2b ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f01070cd	obj/kern/kernel.asm	/^f01070cd:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01070d2	obj/kern/kernel.asm	/^f01070d2:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01070d7	obj/kern/kernel.asm	/^f01070d7:	e8 1c ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f01070dc	obj/kern/kernel.asm	/^f01070dc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070e1	obj/kern/kernel.asm	/^f01070e1:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01070e6	obj/kern/kernel.asm	/^f01070e6:	e8 0d ff ff ff       	call   f0106ff8 <lapicw>$/;"	l
f01070eb	obj/kern/kernel.asm	/^f01070eb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070f0	obj/kern/kernel.asm	/^f01070f0:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01070f5	obj/kern/kernel.asm	/^f01070f5:	e8 fe fe ff ff       	call   f0106ff8 <lapicw>$/;"	l
f01070fa	obj/kern/kernel.asm	/^f01070fa:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070ff	obj/kern/kernel.asm	/^f01070ff:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0107104	obj/kern/kernel.asm	/^f0107104:	e8 ef fe ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107109	obj/kern/kernel.asm	/^f0107109:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010710e	obj/kern/kernel.asm	/^f010710e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107113	obj/kern/kernel.asm	/^f0107113:	e8 e0 fe ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107118	obj/kern/kernel.asm	/^f0107118:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107122	obj/kern/kernel.asm	/^f0107122:	e8 d1 fe ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107127	obj/kern/kernel.asm	/^f0107127:	8b 15 00 90 2b f0    	mov    0xf02b9000,%edx$/;"	l
f010712d	obj/kern/kernel.asm	/^f010712d:	81 c2 00 03 00 00    	add    $0x300,%edx$/;"	l
f0107133	obj/kern/kernel.asm	/^f0107133:	8b 02                	mov    (%edx),%eax$/;"	l
f0107135	obj/kern/kernel.asm	/^f0107135:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0107138	obj/kern/kernel.asm	/^f0107138:	75 f9                	jne    f0107133 <lapic_init+0x105>$/;"	l
f010713a	obj/kern/kernel.asm	/^f010713a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010713f	obj/kern/kernel.asm	/^f010713f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107144	obj/kern/kernel.asm	/^f0107144:	e8 af fe ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107149	obj/kern/kernel.asm	/^f0107149:	5d                   	pop    %ebp$/;"	l
f010714a	obj/kern/kernel.asm	/^f010714a:	c3                   	ret    $/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b <lapic_eoi>:$/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b:	55                   	push   %ebp$/;"	l
f010714c	obj/kern/kernel.asm	/^f010714c:	89 e5                	mov    %esp,%ebp$/;"	l
f010714e	obj/kern/kernel.asm	/^f010714e:	83 3d 00 90 2b f0 00 	cmpl   $0x0,0xf02b9000$/;"	l
f0107155	obj/kern/kernel.asm	/^f0107155:	74 0f                	je     f0107166 <lapic_eoi+0x1b>$/;"	l
f0107157	obj/kern/kernel.asm	/^f0107157:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010715c	obj/kern/kernel.asm	/^f010715c:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0107161	obj/kern/kernel.asm	/^f0107161:	e8 92 fe ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107166	obj/kern/kernel.asm	/^f0107166:	5d                   	pop    %ebp$/;"	l
f0107167	obj/kern/kernel.asm	/^f0107167:	c3                   	ret    $/;"	l
f0107168	obj/kern/kernel.asm	/^f0107168 <microdelay>:$/;"	l
f0107168	obj/kern/kernel.asm	/^f0107168:	55                   	push   %ebp$/;"	l
f0107169	obj/kern/kernel.asm	/^f0107169:	89 e5                	mov    %esp,%ebp$/;"	l
f010716b	obj/kern/kernel.asm	/^f010716b:	5d                   	pop    %ebp$/;"	l
f010716c	obj/kern/kernel.asm	/^f010716c:	c3                   	ret    $/;"	l
f010716d	obj/kern/kernel.asm	/^f010716d <lapic_ipi>:$/;"	l
f010716d	obj/kern/kernel.asm	/^f010716d:	55                   	push   %ebp$/;"	l
f010716e	obj/kern/kernel.asm	/^f010716e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107170	obj/kern/kernel.asm	/^f0107170:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107173	obj/kern/kernel.asm	/^f0107173:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0107179	obj/kern/kernel.asm	/^f0107179:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010717e	obj/kern/kernel.asm	/^f010717e:	e8 75 fe ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	8b 15 00 90 2b f0    	mov    0xf02b9000,%edx$/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	81 c2 00 03 00 00    	add    $0x300,%edx$/;"	l
f010718f	obj/kern/kernel.asm	/^f010718f:	8b 02                	mov    (%edx),%eax$/;"	l
f0107191	obj/kern/kernel.asm	/^f0107191:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0107194	obj/kern/kernel.asm	/^f0107194:	75 f9                	jne    f010718f <lapic_ipi+0x22>$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	5d                   	pop    %ebp$/;"	l
f0107197	obj/kern/kernel.asm	/^f0107197:	c3                   	ret    $/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198 <lapic_startap>:$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	55                   	push   %ebp$/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199:	89 e5                	mov    %esp,%ebp$/;"	l
f010719b	obj/kern/kernel.asm	/^f010719b:	56                   	push   %esi$/;"	l
f010719c	obj/kern/kernel.asm	/^f010719c:	53                   	push   %ebx$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01071a0	obj/kern/kernel.asm	/^f01071a0:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01071a3	obj/kern/kernel.asm	/^f01071a3:	0f b6 5d 08          	movzbl 0x8(%ebp),%ebx$/;"	l
f01071a7	obj/kern/kernel.asm	/^f01071a7:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01071b1	obj/kern/kernel.asm	/^f01071b1:	ee                   	out    %al,(%dx)$/;"	l
f01071b2	obj/kern/kernel.asm	/^f01071b2:	b2 71                	mov    $0x71,%dl$/;"	l
f01071b4	obj/kern/kernel.asm	/^f01071b4:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01071b9	obj/kern/kernel.asm	/^f01071b9:	ee                   	out    %al,(%dx)$/;"	l
f01071ba	obj/kern/kernel.asm	/^f01071ba:	83 3d 94 5e 27 f0 00 	cmpl   $0x0,0xf0275e94$/;"	l
f01071c1	obj/kern/kernel.asm	/^f01071c1:	75 24                	jne    f01071e7 <lapic_startap+0x4f>$/;"	l
f01071c3	obj/kern/kernel.asm	/^f01071c3:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f01071ca	obj/kern/kernel.asm	/^f01071ca:	00 $/;"	l
f01071cb	obj/kern/kernel.asm	/^f01071cb:	c7 44 24 08 80 80 10 	movl   $0xf0108080,0x8(%esp)$/;"	l
f01071d2	obj/kern/kernel.asm	/^f01071d2:	f0 $/;"	l
f01071d3	obj/kern/kernel.asm	/^f01071d3:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)$/;"	l
f01071da	obj/kern/kernel.asm	/^f01071da:	00 $/;"	l
f01071db	obj/kern/kernel.asm	/^f01071db:	c7 04 24 f4 9a 10 f0 	movl   $0xf0109af4,(%esp)$/;"	l
f01071e2	obj/kern/kernel.asm	/^f01071e2:	e8 9e 8e ff ff       	call   f0100085 <_panic>$/;"	l
f01071e7	obj/kern/kernel.asm	/^f01071e7:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01071ee	obj/kern/kernel.asm	/^f01071ee:	00 00 $/;"	l
f01071f0	obj/kern/kernel.asm	/^f01071f0:	89 f0                	mov    %esi,%eax$/;"	l
f01071f2	obj/kern/kernel.asm	/^f01071f2:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01071f5	obj/kern/kernel.asm	/^f01071f5:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01071fb	obj/kern/kernel.asm	/^f01071fb:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f01071fe	obj/kern/kernel.asm	/^f01071fe:	89 da                	mov    %ebx,%edx$/;"	l
f0107200	obj/kern/kernel.asm	/^f0107200:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107205	obj/kern/kernel.asm	/^f0107205:	e8 ee fd ff ff       	call   f0106ff8 <lapicw>$/;"	l
f010720a	obj/kern/kernel.asm	/^f010720a:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f010720f	obj/kern/kernel.asm	/^f010720f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107214	obj/kern/kernel.asm	/^f0107214:	e8 df fd ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107219	obj/kern/kernel.asm	/^f0107219:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f010721e	obj/kern/kernel.asm	/^f010721e:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107223	obj/kern/kernel.asm	/^f0107223:	e8 d0 fd ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107228	obj/kern/kernel.asm	/^f0107228:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f010722b	obj/kern/kernel.asm	/^f010722b:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0107231	obj/kern/kernel.asm	/^f0107231:	89 da                	mov    %ebx,%edx$/;"	l
f0107233	obj/kern/kernel.asm	/^f0107233:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107238	obj/kern/kernel.asm	/^f0107238:	e8 bb fd ff ff       	call   f0106ff8 <lapicw>$/;"	l
f010723d	obj/kern/kernel.asm	/^f010723d:	89 f2                	mov    %esi,%edx$/;"	l
f010723f	obj/kern/kernel.asm	/^f010723f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107244	obj/kern/kernel.asm	/^f0107244:	e8 af fd ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107249	obj/kern/kernel.asm	/^f0107249:	89 da                	mov    %ebx,%edx$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107250	obj/kern/kernel.asm	/^f0107250:	e8 a3 fd ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107255	obj/kern/kernel.asm	/^f0107255:	89 f2                	mov    %esi,%edx$/;"	l
f0107257	obj/kern/kernel.asm	/^f0107257:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	e8 97 fd ff ff       	call   f0106ff8 <lapicw>$/;"	l
f0107261	obj/kern/kernel.asm	/^f0107261:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107264	obj/kern/kernel.asm	/^f0107264:	5b                   	pop    %ebx$/;"	l
f0107265	obj/kern/kernel.asm	/^f0107265:	5e                   	pop    %esi$/;"	l
f0107266	obj/kern/kernel.asm	/^f0107266:	5d                   	pop    %ebp$/;"	l
f0107267	obj/kern/kernel.asm	/^f0107267:	c3                   	ret    $/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270 <__spin_initlock>:$/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270:	55                   	push   %ebp$/;"	l
f0107271	obj/kern/kernel.asm	/^f0107271:	89 e5                	mov    %esp,%ebp$/;"	l
f0107273	obj/kern/kernel.asm	/^f0107273:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010727c	obj/kern/kernel.asm	/^f010727c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010727f	obj/kern/kernel.asm	/^f010727f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0107282	obj/kern/kernel.asm	/^f0107282:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0107289	obj/kern/kernel.asm	/^f0107289:	5d                   	pop    %ebp$/;"	l
f010728a	obj/kern/kernel.asm	/^f010728a:	c3                   	ret    $/;"	l
f010728b	obj/kern/kernel.asm	/^f010728b <holding>:$/;"	l
f010728b	obj/kern/kernel.asm	/^f010728b:	55                   	push   %ebp$/;"	l
f010728c	obj/kern/kernel.asm	/^f010728c:	89 e5                	mov    %esp,%ebp$/;"	l
f010728e	obj/kern/kernel.asm	/^f010728e:	53                   	push   %ebx$/;"	l
f010728f	obj/kern/kernel.asm	/^f010728f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107292	obj/kern/kernel.asm	/^f0107292:	89 c2                	mov    %eax,%edx$/;"	l
f0107294	obj/kern/kernel.asm	/^f0107294:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107299	obj/kern/kernel.asm	/^f0107299:	83 3a 00             	cmpl   $0x0,(%edx)$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	74 18                	je     f01072b6 <holding+0x2b>$/;"	l
f010729e	obj/kern/kernel.asm	/^f010729e:	8b 5a 08             	mov    0x8(%edx),%ebx$/;"	l
f01072a1	obj/kern/kernel.asm	/^f01072a1:	e8 6c fd ff ff       	call   f0107012 <cpunum>$/;"	l
f01072a6	obj/kern/kernel.asm	/^f01072a6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01072a9	obj/kern/kernel.asm	/^f01072a9:	05 20 80 27 f0       	add    $0xf0278020,%eax$/;"	l
f01072ae	obj/kern/kernel.asm	/^f01072ae:	39 c3                	cmp    %eax,%ebx$/;"	l
f01072b0	obj/kern/kernel.asm	/^f01072b0:	0f 94 c0             	sete   %al$/;"	l
f01072b3	obj/kern/kernel.asm	/^f01072b3:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01072b6	obj/kern/kernel.asm	/^f01072b6:	83 c4 04             	add    $0x4,%esp$/;"	l
f01072b9	obj/kern/kernel.asm	/^f01072b9:	5b                   	pop    %ebx$/;"	l
f01072ba	obj/kern/kernel.asm	/^f01072ba:	5d                   	pop    %ebp$/;"	l
f01072bb	obj/kern/kernel.asm	/^f01072bb:	c3                   	ret    $/;"	l
f01072bc	obj/kern/kernel.asm	/^f01072bc <spin_unlock>:$/;"	l
f01072bc	obj/kern/kernel.asm	/^f01072bc:	55                   	push   %ebp$/;"	l
f01072bd	obj/kern/kernel.asm	/^f01072bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01072bf	obj/kern/kernel.asm	/^f01072bf:	83 ec 78             	sub    $0x78,%esp$/;"	l
f01072c2	obj/kern/kernel.asm	/^f01072c2:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01072c5	obj/kern/kernel.asm	/^f01072c5:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01072cb	obj/kern/kernel.asm	/^f01072cb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01072ce	obj/kern/kernel.asm	/^f01072ce:	89 d8                	mov    %ebx,%eax$/;"	l
f01072d0	obj/kern/kernel.asm	/^f01072d0:	e8 b6 ff ff ff       	call   f010728b <holding>$/;"	l
f01072d5	obj/kern/kernel.asm	/^f01072d5:	85 c0                	test   %eax,%eax$/;"	l
f01072d7	obj/kern/kernel.asm	/^f01072d7:	0f 85 d5 00 00 00    	jne    f01073b2 <spin_unlock+0xf6>$/;"	l
f01072dd	obj/kern/kernel.asm	/^f01072dd:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f01072e4	obj/kern/kernel.asm	/^f01072e4:	00 $/;"	l
f01072e5	obj/kern/kernel.asm	/^f01072e5:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f01072e8	obj/kern/kernel.asm	/^f01072e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01072ec	obj/kern/kernel.asm	/^f01072ec:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01072f2	obj/kern/kernel.asm	/^f01072f2:	e8 ce f6 ff ff       	call   f01069c5 <memmove>$/;"	l
f01072f7	obj/kern/kernel.asm	/^f01072f7:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01072fa	obj/kern/kernel.asm	/^f01072fa:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f01072fd	obj/kern/kernel.asm	/^f01072fd:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0107300	obj/kern/kernel.asm	/^f0107300:	e8 0d fd ff ff       	call   f0107012 <cpunum>$/;"	l
f0107305	obj/kern/kernel.asm	/^f0107305:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0107309	obj/kern/kernel.asm	/^f0107309:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010730d	obj/kern/kernel.asm	/^f010730d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107311	obj/kern/kernel.asm	/^f0107311:	c7 04 24 04 9b 10 f0 	movl   $0xf0109b04,(%esp)$/;"	l
f0107318	obj/kern/kernel.asm	/^f0107318:	e8 2e d1 ff ff       	call   f010444b <cprintf>$/;"	l
f010731d	obj/kern/kernel.asm	/^f010731d:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	85 c0                	test   %eax,%eax$/;"	l
f0107322	obj/kern/kernel.asm	/^f0107322:	74 72                	je     f0107396 <spin_unlock+0xda>$/;"	l
f0107324	obj/kern/kernel.asm	/^f0107324:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f0107327	obj/kern/kernel.asm	/^f0107327:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f010732a	obj/kern/kernel.asm	/^f010732a:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f010732d	obj/kern/kernel.asm	/^f010732d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0107331	obj/kern/kernel.asm	/^f0107331:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107334	obj/kern/kernel.asm	/^f0107334:	e8 d5 e9 ff ff       	call   f0105d0e <debuginfo_eip>$/;"	l
f0107339	obj/kern/kernel.asm	/^f0107339:	85 c0                	test   %eax,%eax$/;"	l
f010733b	obj/kern/kernel.asm	/^f010733b:	78 39                	js     f0107376 <spin_unlock+0xba>$/;"	l
f010733d	obj/kern/kernel.asm	/^f010733d:	8b 03                	mov    (%ebx),%eax$/;"	l
f010733f	obj/kern/kernel.asm	/^f010733f:	89 c2                	mov    %eax,%edx$/;"	l
f0107341	obj/kern/kernel.asm	/^f0107341:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0107344	obj/kern/kernel.asm	/^f0107344:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0107348	obj/kern/kernel.asm	/^f0107348:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010734b	obj/kern/kernel.asm	/^f010734b:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f010734f	obj/kern/kernel.asm	/^f010734f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0107352	obj/kern/kernel.asm	/^f0107352:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0107356	obj/kern/kernel.asm	/^f0107356:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0107359	obj/kern/kernel.asm	/^f0107359:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010735d	obj/kern/kernel.asm	/^f010735d:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0107360	obj/kern/kernel.asm	/^f0107360:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0107364	obj/kern/kernel.asm	/^f0107364:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107368	obj/kern/kernel.asm	/^f0107368:	c7 04 24 66 9b 10 f0 	movl   $0xf0109b66,(%esp)$/;"	l
f010736f	obj/kern/kernel.asm	/^f010736f:	e8 d7 d0 ff ff       	call   f010444b <cprintf>$/;"	l
f0107374	obj/kern/kernel.asm	/^f0107374:	eb 12                	jmp    f0107388 <spin_unlock+0xcc>$/;"	l
f0107376	obj/kern/kernel.asm	/^f0107376:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107378	obj/kern/kernel.asm	/^f0107378:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010737c	obj/kern/kernel.asm	/^f010737c:	c7 04 24 7d 9b 10 f0 	movl   $0xf0109b7d,(%esp)$/;"	l
f0107383	obj/kern/kernel.asm	/^f0107383:	e8 c3 d0 ff ff       	call   f010444b <cprintf>$/;"	l
f0107388	obj/kern/kernel.asm	/^f0107388:	39 fb                	cmp    %edi,%ebx$/;"	l
f010738a	obj/kern/kernel.asm	/^f010738a:	74 0a                	je     f0107396 <spin_unlock+0xda>$/;"	l
f010738c	obj/kern/kernel.asm	/^f010738c:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010738f	obj/kern/kernel.asm	/^f010738f:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0107392	obj/kern/kernel.asm	/^f0107392:	85 c0                	test   %eax,%eax$/;"	l
f0107394	obj/kern/kernel.asm	/^f0107394:	75 97                	jne    f010732d <spin_unlock+0x71>$/;"	l
f0107396	obj/kern/kernel.asm	/^f0107396:	c7 44 24 08 85 9b 10 	movl   $0xf0109b85,0x8(%esp)$/;"	l
f010739d	obj/kern/kernel.asm	/^f010739d:	f0 $/;"	l
f010739e	obj/kern/kernel.asm	/^f010739e:	c7 44 24 04 68 00 00 	movl   $0x68,0x4(%esp)$/;"	l
f01073a5	obj/kern/kernel.asm	/^f01073a5:	00 $/;"	l
f01073a6	obj/kern/kernel.asm	/^f01073a6:	c7 04 24 91 9b 10 f0 	movl   $0xf0109b91,(%esp)$/;"	l
f01073ad	obj/kern/kernel.asm	/^f01073ad:	e8 d3 8c ff ff       	call   f0100085 <_panic>$/;"	l
f01073b2	obj/kern/kernel.asm	/^f01073b2:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f01073b9	obj/kern/kernel.asm	/^f01073b9:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f01073c0	obj/kern/kernel.asm	/^f01073c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01073c5	obj/kern/kernel.asm	/^f01073c5:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01073c8	obj/kern/kernel.asm	/^f01073c8:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01073cb	obj/kern/kernel.asm	/^f01073cb:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01073ce	obj/kern/kernel.asm	/^f01073ce:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01073d1	obj/kern/kernel.asm	/^f01073d1:	89 ec                	mov    %ebp,%esp$/;"	l
f01073d3	obj/kern/kernel.asm	/^f01073d3:	5d                   	pop    %ebp$/;"	l
f01073d4	obj/kern/kernel.asm	/^f01073d4:	c3                   	ret    $/;"	l
f01073d5	obj/kern/kernel.asm	/^f01073d5 <spin_lock>:$/;"	l
f01073d5	obj/kern/kernel.asm	/^f01073d5:	55                   	push   %ebp$/;"	l
f01073d6	obj/kern/kernel.asm	/^f01073d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01073d8	obj/kern/kernel.asm	/^f01073d8:	56                   	push   %esi$/;"	l
f01073d9	obj/kern/kernel.asm	/^f01073d9:	53                   	push   %ebx$/;"	l
f01073da	obj/kern/kernel.asm	/^f01073da:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01073dd	obj/kern/kernel.asm	/^f01073dd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01073e0	obj/kern/kernel.asm	/^f01073e0:	89 d8                	mov    %ebx,%eax$/;"	l
f01073e2	obj/kern/kernel.asm	/^f01073e2:	e8 a4 fe ff ff       	call   f010728b <holding>$/;"	l
f01073e7	obj/kern/kernel.asm	/^f01073e7:	85 c0                	test   %eax,%eax$/;"	l
f01073e9	obj/kern/kernel.asm	/^f01073e9:	75 12                	jne    f01073fd <spin_lock+0x28>$/;"	l
f01073eb	obj/kern/kernel.asm	/^f01073eb:	89 da                	mov    %ebx,%edx$/;"	l
f01073ed	obj/kern/kernel.asm	/^f01073ed:	b0 01                	mov    $0x1,%al$/;"	l
f01073ef	obj/kern/kernel.asm	/^f01073ef:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01073f2	obj/kern/kernel.asm	/^f01073f2:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f01073f7	obj/kern/kernel.asm	/^f01073f7:	85 c0                	test   %eax,%eax$/;"	l
f01073f9	obj/kern/kernel.asm	/^f01073f9:	75 2e                	jne    f0107429 <spin_lock+0x54>$/;"	l
f01073fb	obj/kern/kernel.asm	/^f01073fb:	eb 37                	jmp    f0107434 <spin_lock+0x5f>$/;"	l
f01073fd	obj/kern/kernel.asm	/^f01073fd:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400:	e8 0d fc ff ff       	call   f0107012 <cpunum>$/;"	l
f0107405	obj/kern/kernel.asm	/^f0107405:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0107409	obj/kern/kernel.asm	/^f0107409:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010740d	obj/kern/kernel.asm	/^f010740d:	c7 44 24 08 3c 9b 10 	movl   $0xf0109b3c,0x8(%esp)$/;"	l
f0107414	obj/kern/kernel.asm	/^f0107414:	f0 $/;"	l
f0107415	obj/kern/kernel.asm	/^f0107415:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
f010741c	obj/kern/kernel.asm	/^f010741c:	00 $/;"	l
f010741d	obj/kern/kernel.asm	/^f010741d:	c7 04 24 91 9b 10 f0 	movl   $0xf0109b91,(%esp)$/;"	l
f0107424	obj/kern/kernel.asm	/^f0107424:	e8 5c 8c ff ff       	call   f0100085 <_panic>$/;"	l
f0107429	obj/kern/kernel.asm	/^f0107429:	f3 90                	pause  $/;"	l
f010742b	obj/kern/kernel.asm	/^f010742b:	89 c8                	mov    %ecx,%eax$/;"	l
f010742d	obj/kern/kernel.asm	/^f010742d:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0107430	obj/kern/kernel.asm	/^f0107430:	85 c0                	test   %eax,%eax$/;"	l
f0107432	obj/kern/kernel.asm	/^f0107432:	75 f5                	jne    f0107429 <spin_lock+0x54>$/;"	l
f0107434	obj/kern/kernel.asm	/^f0107434:	e8 d9 fb ff ff       	call   f0107012 <cpunum>$/;"	l
f0107439	obj/kern/kernel.asm	/^f0107439:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010743c	obj/kern/kernel.asm	/^f010743c:	05 20 80 27 f0       	add    $0xf0278020,%eax$/;"	l
f0107441	obj/kern/kernel.asm	/^f0107441:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0107444	obj/kern/kernel.asm	/^f0107444:	8d 73 0c             	lea    0xc(%ebx),%esi$/;"	l
f0107447	obj/kern/kernel.asm	/^f0107447:	89 e8                	mov    %ebp,%eax$/;"	l
f0107449	obj/kern/kernel.asm	/^f0107449:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f010744f	obj/kern/kernel.asm	/^f010744f:	81 fa ff ff 7f 0e    	cmp    $0xe7fffff,%edx$/;"	l
f0107455	obj/kern/kernel.asm	/^f0107455:	76 40                	jbe    f0107497 <spin_lock+0xc2>$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	eb 33                	jmp    f010748c <spin_lock+0xb7>$/;"	l
f0107459	obj/kern/kernel.asm	/^f0107459:	8d 8a 00 00 80 10    	lea    0x10800000(%edx),%ecx$/;"	l
f010745f	obj/kern/kernel.asm	/^f010745f:	81 f9 ff ff 7f 0e    	cmp    $0xe7fffff,%ecx$/;"	l
f0107465	obj/kern/kernel.asm	/^f0107465:	77 2a                	ja     f0107491 <spin_lock+0xbc>$/;"	l
f0107467	obj/kern/kernel.asm	/^f0107467:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f010746a	obj/kern/kernel.asm	/^f010746a:	89 0c 86             	mov    %ecx,(%esi,%eax,4)$/;"	l
f010746d	obj/kern/kernel.asm	/^f010746d:	8b 12                	mov    (%edx),%edx$/;"	l
f010746f	obj/kern/kernel.asm	/^f010746f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107472	obj/kern/kernel.asm	/^f0107472:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0107475	obj/kern/kernel.asm	/^f0107475:	75 e2                	jne    f0107459 <spin_lock+0x84>$/;"	l
f0107477	obj/kern/kernel.asm	/^f0107477:	eb 2d                	jmp    f01074a6 <spin_lock+0xd1>$/;"	l
f0107479	obj/kern/kernel.asm	/^f0107479:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f010747f	obj/kern/kernel.asm	/^f010747f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107482	obj/kern/kernel.asm	/^f0107482:	83 c2 04             	add    $0x4,%edx$/;"	l
f0107485	obj/kern/kernel.asm	/^f0107485:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0107488	obj/kern/kernel.asm	/^f0107488:	7e ef                	jle    f0107479 <spin_lock+0xa4>$/;"	l
f010748a	obj/kern/kernel.asm	/^f010748a:	eb 1a                	jmp    f01074a6 <spin_lock+0xd1>$/;"	l
f010748c	obj/kern/kernel.asm	/^f010748c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107491	obj/kern/kernel.asm	/^f0107491:	8d 54 83 0c          	lea    0xc(%ebx,%eax,4),%edx$/;"	l
f0107495	obj/kern/kernel.asm	/^f0107495:	eb e2                	jmp    f0107479 <spin_lock+0xa4>$/;"	l
f0107497	obj/kern/kernel.asm	/^f0107497:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010749a	obj/kern/kernel.asm	/^f010749a:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f010749d	obj/kern/kernel.asm	/^f010749d:	8b 10                	mov    (%eax),%edx$/;"	l
f010749f	obj/kern/kernel.asm	/^f010749f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01074a4	obj/kern/kernel.asm	/^f01074a4:	eb b3                	jmp    f0107459 <spin_lock+0x84>$/;"	l
f01074a6	obj/kern/kernel.asm	/^f01074a6:	83 c4 20             	add    $0x20,%esp$/;"	l
f01074a9	obj/kern/kernel.asm	/^f01074a9:	5b                   	pop    %ebx$/;"	l
f01074aa	obj/kern/kernel.asm	/^f01074aa:	5e                   	pop    %esi$/;"	l
f01074ab	obj/kern/kernel.asm	/^f01074ab:	5d                   	pop    %ebp$/;"	l
f01074ac	obj/kern/kernel.asm	/^f01074ac:	c3                   	ret    $/;"	l
f01074ad	obj/kern/kernel.asm	/^f01074ad:	00 00                	add    %al,(%eax)$/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0 <E1000_transmit>:$/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0:	55                   	push   %ebp$/;"	l
f01074b1	obj/kern/kernel.asm	/^f01074b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01074b3	obj/kern/kernel.asm	/^f01074b3:	53                   	push   %ebx$/;"	l
f01074b4	obj/kern/kernel.asm	/^f01074b4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01074ba	obj/kern/kernel.asm	/^f01074ba:	8b 15 c0 6e 27 f0    	mov    0xf0276ec0,%edx$/;"	l
f01074c0	obj/kern/kernel.asm	/^f01074c0:	8b 02                	mov    (%edx),%eax$/;"	l
f01074c2	obj/kern/kernel.asm	/^f01074c2:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01074c5	obj/kern/kernel.asm	/^f01074c5:	05 e0 6e 27 f0       	add    $0xf0276ee0,%eax$/;"	l
f01074ca	obj/kern/kernel.asm	/^f01074ca:	89 cb                	mov    %ecx,%ebx$/;"	l
f01074cc	obj/kern/kernel.asm	/^f01074cc:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f01074d2	obj/kern/kernel.asm	/^f01074d2:	77 20                	ja     f01074f4 <E1000_transmit+0x44>$/;"	l
f01074d4	obj/kern/kernel.asm	/^f01074d4:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01074d8	obj/kern/kernel.asm	/^f01074d8:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01074df	obj/kern/kernel.asm	/^f01074df:	f0 $/;"	l
f01074e0	obj/kern/kernel.asm	/^f01074e0:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
f01074e7	obj/kern/kernel.asm	/^f01074e7:	00 $/;"	l
f01074e8	obj/kern/kernel.asm	/^f01074e8:	c7 04 24 c3 9b 10 f0 	movl   $0xf0109bc3,(%esp)$/;"	l
f01074ef	obj/kern/kernel.asm	/^f01074ef:	e8 91 8b ff ff       	call   f0100085 <_panic>$/;"	l
f01074f4	obj/kern/kernel.asm	/^f01074f4:	81 c3 00 00 00 10    	add    $0x10000000,%ebx$/;"	l
f01074fa	obj/kern/kernel.asm	/^f01074fa:	89 18                	mov    %ebx,(%eax)$/;"	l
f01074fc	obj/kern/kernel.asm	/^f01074fc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0107503	obj/kern/kernel.asm	/^f0107503:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0107506	obj/kern/kernel.asm	/^f0107506:	66 89 48 08          	mov    %cx,0x8(%eax)$/;"	l
f010750a	obj/kern/kernel.asm	/^f010750a:	81 48 08 00 00 00 99 	orl    $0x99000000,0x8(%eax)$/;"	l
f0107511	obj/kern/kernel.asm	/^f0107511:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0107513	obj/kern/kernel.asm	/^f0107513:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0107516	obj/kern/kernel.asm	/^f0107516:	89 c8                	mov    %ecx,%eax$/;"	l
f0107518	obj/kern/kernel.asm	/^f0107518:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010751b	obj/kern/kernel.asm	/^f010751b:	c1 e8 1a             	shr    $0x1a,%eax$/;"	l
f010751e	obj/kern/kernel.asm	/^f010751e:	01 c1                	add    %eax,%ecx$/;"	l
f0107520	obj/kern/kernel.asm	/^f0107520:	83 e1 3f             	and    $0x3f,%ecx$/;"	l
f0107523	obj/kern/kernel.asm	/^f0107523:	29 c1                	sub    %eax,%ecx$/;"	l
f0107525	obj/kern/kernel.asm	/^f0107525:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107527	obj/kern/kernel.asm	/^f0107527:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010752c	obj/kern/kernel.asm	/^f010752c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010752f	obj/kern/kernel.asm	/^f010752f:	5b                   	pop    %ebx$/;"	l
f0107530	obj/kern/kernel.asm	/^f0107530:	5d                   	pop    %ebp$/;"	l
f0107531	obj/kern/kernel.asm	/^f0107531:	c3                   	ret    $/;"	l
f0107532	obj/kern/kernel.asm	/^f0107532 <pci_E1000_attach>:$/;"	l
f0107532	obj/kern/kernel.asm	/^f0107532:	55                   	push   %ebp$/;"	l
f0107533	obj/kern/kernel.asm	/^f0107533:	89 e5                	mov    %esp,%ebp$/;"	l
f0107535	obj/kern/kernel.asm	/^f0107535:	53                   	push   %ebx$/;"	l
f0107536	obj/kern/kernel.asm	/^f0107536:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0107539	obj/kern/kernel.asm	/^f0107539:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010753c	obj/kern/kernel.asm	/^f010753c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010753f	obj/kern/kernel.asm	/^f010753f:	e8 f9 05 00 00       	call   f0107b3d <pci_func_enable>$/;"	l
f0107544	obj/kern/kernel.asm	/^f0107544:	c7 44 24 10 1a 00 00 	movl   $0x1a,0x10(%esp)$/;"	l
f010754b	obj/kern/kernel.asm	/^f010754b:	00 $/;"	l
f010754c	obj/kern/kernel.asm	/^f010754c:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f010754f	obj/kern/kernel.asm	/^f010754f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107553	obj/kern/kernel.asm	/^f0107553:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0107556	obj/kern/kernel.asm	/^f0107556:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010755a	obj/kern/kernel.asm	/^f010755a:	c7 44 24 04 00 10 c0 	movl   $0xefc01000,0x4(%esp)$/;"	l
f0107561	obj/kern/kernel.asm	/^f0107561:	ef $/;"	l
f0107562	obj/kern/kernel.asm	/^f0107562:	a1 98 5e 27 f0       	mov    0xf0275e98,%eax$/;"	l
f0107567	obj/kern/kernel.asm	/^f0107567:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010756a	obj/kern/kernel.asm	/^f010756a:	e8 28 a5 ff ff       	call   f0101a97 <boot_map_region>$/;"	l
f010756f	obj/kern/kernel.asm	/^f010756f:	c7 05 e0 72 27 f0 00 	movl   $0xefc01000,0xf02772e0$/;"	l
f0107576	obj/kern/kernel.asm	/^f0107576:	10 c0 ef $/;"	l
f0107579	obj/kern/kernel.asm	/^f0107579:	a1 08 10 c0 ef       	mov    0xefc01008,%eax$/;"	l
f010757e	obj/kern/kernel.asm	/^f010757e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107582	obj/kern/kernel.asm	/^f0107582:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0107585	obj/kern/kernel.asm	/^f0107585:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107589	obj/kern/kernel.asm	/^f0107589:	c7 44 24 04 00 10 c0 	movl   $0xefc01000,0x4(%esp)$/;"	l
f0107590	obj/kern/kernel.asm	/^f0107590:	ef $/;"	l
f0107591	obj/kern/kernel.asm	/^f0107591:	c7 04 24 d0 9b 10 f0 	movl   $0xf0109bd0,(%esp)$/;"	l
f0107598	obj/kern/kernel.asm	/^f0107598:	e8 ae ce ff ff       	call   f010444b <cprintf>$/;"	l
f010759d	obj/kern/kernel.asm	/^f010759d:	8b 15 e0 72 27 f0    	mov    0xf02772e0,%edx$/;"	l
f01075a3	obj/kern/kernel.asm	/^f01075a3:	b8 e0 6e 27 f0       	mov    $0xf0276ee0,%eax$/;"	l
f01075a8	obj/kern/kernel.asm	/^f01075a8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01075ad	obj/kern/kernel.asm	/^f01075ad:	77 20                	ja     f01075cf <pci_E1000_attach+0x9d>$/;"	l
f01075af	obj/kern/kernel.asm	/^f01075af:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01075b3	obj/kern/kernel.asm	/^f01075b3:	c7 44 24 08 3c 80 10 	movl   $0xf010803c,0x8(%esp)$/;"	l
f01075ba	obj/kern/kernel.asm	/^f01075ba:	f0 $/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f01075c2	obj/kern/kernel.asm	/^f01075c2:	00 $/;"	l
f01075c3	obj/kern/kernel.asm	/^f01075c3:	c7 04 24 c3 9b 10 f0 	movl   $0xf0109bc3,(%esp)$/;"	l
f01075ca	obj/kern/kernel.asm	/^f01075ca:	e8 b6 8a ff ff       	call   f0100085 <_panic>$/;"	l
f01075cf	obj/kern/kernel.asm	/^f01075cf:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01075d4	obj/kern/kernel.asm	/^f01075d4:	89 82 00 38 00 00    	mov    %eax,0x3800(%edx)$/;"	l
f01075da	obj/kern/kernel.asm	/^f01075da:	a1 e0 72 27 f0       	mov    0xf02772e0,%eax$/;"	l
f01075df	obj/kern/kernel.asm	/^f01075df:	c7 80 04 38 00 00 00 	movl   $0x0,0x3804(%eax)$/;"	l
f01075e6	obj/kern/kernel.asm	/^f01075e6:	00 00 00 $/;"	l
f01075e9	obj/kern/kernel.asm	/^f01075e9:	a1 e0 72 27 f0       	mov    0xf02772e0,%eax$/;"	l
f01075ee	obj/kern/kernel.asm	/^f01075ee:	c7 80 08 38 00 00 00 	movl   $0x400,0x3808(%eax)$/;"	l
f01075f5	obj/kern/kernel.asm	/^f01075f5:	04 00 00 $/;"	l
f01075f8	obj/kern/kernel.asm	/^f01075f8:	a1 e0 72 27 f0       	mov    0xf02772e0,%eax$/;"	l
f01075fd	obj/kern/kernel.asm	/^f01075fd:	c7 80 10 38 00 00 00 	movl   $0x0,0x3810(%eax)$/;"	l
f0107604	obj/kern/kernel.asm	/^f0107604:	00 00 00 $/;"	l
f0107607	obj/kern/kernel.asm	/^f0107607:	a1 e0 72 27 f0       	mov    0xf02772e0,%eax$/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	c7 80 18 38 00 00 00 	movl   $0x0,0x3818(%eax)$/;"	l
f0107613	obj/kern/kernel.asm	/^f0107613:	00 00 00 $/;"	l
f0107616	obj/kern/kernel.asm	/^f0107616:	a1 e0 72 27 f0       	mov    0xf02772e0,%eax$/;"	l
f010761b	obj/kern/kernel.asm	/^f010761b:	8d 90 10 38 00 00    	lea    0x3810(%eax),%edx$/;"	l
f0107621	obj/kern/kernel.asm	/^f0107621:	89 15 a0 5e 27 f0    	mov    %edx,0xf0275ea0$/;"	l
f0107627	obj/kern/kernel.asm	/^f0107627:	8d 90 18 38 00 00    	lea    0x3818(%eax),%edx$/;"	l
f010762d	obj/kern/kernel.asm	/^f010762d:	89 15 c0 6e 27 f0    	mov    %edx,0xf0276ec0$/;"	l
f0107633	obj/kern/kernel.asm	/^f0107633:	81 88 00 04 00 00 0a 	orl    $0x4010a,0x400(%eax)$/;"	l
f010763a	obj/kern/kernel.asm	/^f010763a:	01 04 00 $/;"	l
f010763d	obj/kern/kernel.asm	/^f010763d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107642	obj/kern/kernel.asm	/^f0107642:	83 c4 24             	add    $0x24,%esp$/;"	l
f0107645	obj/kern/kernel.asm	/^f0107645:	5b                   	pop    %ebx$/;"	l
f0107646	obj/kern/kernel.asm	/^f0107646:	5d                   	pop    %ebp$/;"	l
f0107647	obj/kern/kernel.asm	/^f0107647:	c3                   	ret    $/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650 <pci_attach_match>:$/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650:	55                   	push   %ebp$/;"	l
f0107651	obj/kern/kernel.asm	/^f0107651:	89 e5                	mov    %esp,%ebp$/;"	l
f0107653	obj/kern/kernel.asm	/^f0107653:	57                   	push   %edi$/;"	l
f0107654	obj/kern/kernel.asm	/^f0107654:	56                   	push   %esi$/;"	l
f0107655	obj/kern/kernel.asm	/^f0107655:	53                   	push   %ebx$/;"	l
f0107656	obj/kern/kernel.asm	/^f0107656:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0107659	obj/kern/kernel.asm	/^f0107659:	89 c7                	mov    %eax,%edi$/;"	l
f010765b	obj/kern/kernel.asm	/^f010765b:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010765e	obj/kern/kernel.asm	/^f010765e:	89 ce                	mov    %ecx,%esi$/;"	l
f0107660	obj/kern/kernel.asm	/^f0107660:	8b 41 08             	mov    0x8(%ecx),%eax$/;"	l
f0107663	obj/kern/kernel.asm	/^f0107663:	85 c0                	test   %eax,%eax$/;"	l
f0107665	obj/kern/kernel.asm	/^f0107665:	74 4d                	je     f01076b4 <pci_attach_match+0x64>$/;"	l
f0107667	obj/kern/kernel.asm	/^f0107667:	8d 59 0c             	lea    0xc(%ecx),%ebx$/;"	l
f010766a	obj/kern/kernel.asm	/^f010766a:	39 3e                	cmp    %edi,(%esi)$/;"	l
f010766c	obj/kern/kernel.asm	/^f010766c:	75 3a                	jne    f01076a8 <pci_attach_match+0x58>$/;"	l
f010766e	obj/kern/kernel.asm	/^f010766e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0107671	obj/kern/kernel.asm	/^f0107671:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f0107674	obj/kern/kernel.asm	/^f0107674:	75 32                	jne    f01076a8 <pci_attach_match+0x58>$/;"	l
f0107676	obj/kern/kernel.asm	/^f0107676:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107679	obj/kern/kernel.asm	/^f0107679:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010767c	obj/kern/kernel.asm	/^f010767c:	ff d0                	call   *%eax$/;"	l
f010767e	obj/kern/kernel.asm	/^f010767e:	85 c0                	test   %eax,%eax$/;"	l
f0107680	obj/kern/kernel.asm	/^f0107680:	7f 37                	jg     f01076b9 <pci_attach_match+0x69>$/;"	l
f0107682	obj/kern/kernel.asm	/^f0107682:	85 c0                	test   %eax,%eax$/;"	l
f0107684	obj/kern/kernel.asm	/^f0107684:	79 22                	jns    f01076a8 <pci_attach_match+0x58>$/;"	l
f0107686	obj/kern/kernel.asm	/^f0107686:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010768a	obj/kern/kernel.asm	/^f010768a:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010768d	obj/kern/kernel.asm	/^f010768d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107691	obj/kern/kernel.asm	/^f0107691:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107694	obj/kern/kernel.asm	/^f0107694:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107698	obj/kern/kernel.asm	/^f0107698:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010769c	obj/kern/kernel.asm	/^f010769c:	c7 04 24 e4 9b 10 f0 	movl   $0xf0109be4,(%esp)$/;"	l
f01076a3	obj/kern/kernel.asm	/^f01076a3:	e8 a3 cd ff ff       	call   f010444b <cprintf>$/;"	l
f01076a8	obj/kern/kernel.asm	/^f01076a8:	89 de                	mov    %ebx,%esi$/;"	l
f01076aa	obj/kern/kernel.asm	/^f01076aa:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01076ad	obj/kern/kernel.asm	/^f01076ad:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01076b0	obj/kern/kernel.asm	/^f01076b0:	85 c0                	test   %eax,%eax$/;"	l
f01076b2	obj/kern/kernel.asm	/^f01076b2:	75 b6                	jne    f010766a <pci_attach_match+0x1a>$/;"	l
f01076b4	obj/kern/kernel.asm	/^f01076b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01076b9	obj/kern/kernel.asm	/^f01076b9:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01076bc	obj/kern/kernel.asm	/^f01076bc:	5b                   	pop    %ebx$/;"	l
f01076bd	obj/kern/kernel.asm	/^f01076bd:	5e                   	pop    %esi$/;"	l
f01076be	obj/kern/kernel.asm	/^f01076be:	5f                   	pop    %edi$/;"	l
f01076bf	obj/kern/kernel.asm	/^f01076bf:	5d                   	pop    %ebp$/;"	l
f01076c0	obj/kern/kernel.asm	/^f01076c0:	c3                   	ret    $/;"	l
f01076c1	obj/kern/kernel.asm	/^f01076c1 <pci_conf1_set_addr>:$/;"	l
f01076c1	obj/kern/kernel.asm	/^f01076c1:	55                   	push   %ebp$/;"	l
f01076c2	obj/kern/kernel.asm	/^f01076c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01076c4	obj/kern/kernel.asm	/^f01076c4:	53                   	push   %ebx$/;"	l
f01076c5	obj/kern/kernel.asm	/^f01076c5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01076c8	obj/kern/kernel.asm	/^f01076c8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01076cb	obj/kern/kernel.asm	/^f01076cb:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0:	76 24                	jbe    f01076f6 <pci_conf1_set_addr+0x35>$/;"	l
f01076d2	obj/kern/kernel.asm	/^f01076d2:	c7 44 24 0c 8c 9d 10 	movl   $0xf0109d8c,0xc(%esp)$/;"	l
f01076d9	obj/kern/kernel.asm	/^f01076d9:	f0 $/;"	l
f01076da	obj/kern/kernel.asm	/^f01076da:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f01076e1	obj/kern/kernel.asm	/^f01076e1:	f0 $/;"	l
f01076e2	obj/kern/kernel.asm	/^f01076e2:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f01076e9	obj/kern/kernel.asm	/^f01076e9:	00 $/;"	l
f01076ea	obj/kern/kernel.asm	/^f01076ea:	c7 04 24 96 9d 10 f0 	movl   $0xf0109d96,(%esp)$/;"	l
f01076f1	obj/kern/kernel.asm	/^f01076f1:	e8 8f 89 ff ff       	call   f0100085 <_panic>$/;"	l
f01076f6	obj/kern/kernel.asm	/^f01076f6:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f01076f9	obj/kern/kernel.asm	/^f01076f9:	76 24                	jbe    f010771f <pci_conf1_set_addr+0x5e>$/;"	l
f01076fb	obj/kern/kernel.asm	/^f01076fb:	c7 44 24 0c a1 9d 10 	movl   $0xf0109da1,0xc(%esp)$/;"	l
f0107702	obj/kern/kernel.asm	/^f0107702:	f0 $/;"	l
f0107703	obj/kern/kernel.asm	/^f0107703:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010770a	obj/kern/kernel.asm	/^f010770a:	f0 $/;"	l
f010770b	obj/kern/kernel.asm	/^f010770b:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f0107712	obj/kern/kernel.asm	/^f0107712:	00 $/;"	l
f0107713	obj/kern/kernel.asm	/^f0107713:	c7 04 24 96 9d 10 f0 	movl   $0xf0109d96,(%esp)$/;"	l
f010771a	obj/kern/kernel.asm	/^f010771a:	e8 66 89 ff ff       	call   f0100085 <_panic>$/;"	l
f010771f	obj/kern/kernel.asm	/^f010771f:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f0107722	obj/kern/kernel.asm	/^f0107722:	76 24                	jbe    f0107748 <pci_conf1_set_addr+0x87>$/;"	l
f0107724	obj/kern/kernel.asm	/^f0107724:	c7 44 24 0c aa 9d 10 	movl   $0xf0109daa,0xc(%esp)$/;"	l
f010772b	obj/kern/kernel.asm	/^f010772b:	f0 $/;"	l
f010772c	obj/kern/kernel.asm	/^f010772c:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0107733	obj/kern/kernel.asm	/^f0107733:	f0 $/;"	l
f0107734	obj/kern/kernel.asm	/^f0107734:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)$/;"	l
f010773b	obj/kern/kernel.asm	/^f010773b:	00 $/;"	l
f010773c	obj/kern/kernel.asm	/^f010773c:	c7 04 24 96 9d 10 f0 	movl   $0xf0109d96,(%esp)$/;"	l
f0107743	obj/kern/kernel.asm	/^f0107743:	e8 3d 89 ff ff       	call   f0100085 <_panic>$/;"	l
f0107748	obj/kern/kernel.asm	/^f0107748:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f010774e	obj/kern/kernel.asm	/^f010774e:	76 24                	jbe    f0107774 <pci_conf1_set_addr+0xb3>$/;"	l
f0107750	obj/kern/kernel.asm	/^f0107750:	c7 44 24 0c b3 9d 10 	movl   $0xf0109db3,0xc(%esp)$/;"	l
f0107757	obj/kern/kernel.asm	/^f0107757:	f0 $/;"	l
f0107758	obj/kern/kernel.asm	/^f0107758:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f010775f	obj/kern/kernel.asm	/^f010775f:	f0 $/;"	l
f0107760	obj/kern/kernel.asm	/^f0107760:	c7 44 24 04 31 00 00 	movl   $0x31,0x4(%esp)$/;"	l
f0107767	obj/kern/kernel.asm	/^f0107767:	00 $/;"	l
f0107768	obj/kern/kernel.asm	/^f0107768:	c7 04 24 96 9d 10 f0 	movl   $0xf0109d96,(%esp)$/;"	l
f010776f	obj/kern/kernel.asm	/^f010776f:	e8 11 89 ff ff       	call   f0100085 <_panic>$/;"	l
f0107774	obj/kern/kernel.asm	/^f0107774:	f6 c3 03             	test   $0x3,%bl$/;"	l
f0107777	obj/kern/kernel.asm	/^f0107777:	74 24                	je     f010779d <pci_conf1_set_addr+0xdc>$/;"	l
f0107779	obj/kern/kernel.asm	/^f0107779:	c7 44 24 0c c0 9d 10 	movl   $0xf0109dc0,0xc(%esp)$/;"	l
f0107780	obj/kern/kernel.asm	/^f0107780:	f0 $/;"	l
f0107781	obj/kern/kernel.asm	/^f0107781:	c7 44 24 08 c7 8c 10 	movl   $0xf0108cc7,0x8(%esp)$/;"	l
f0107788	obj/kern/kernel.asm	/^f0107788:	f0 $/;"	l
f0107789	obj/kern/kernel.asm	/^f0107789:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
f0107790	obj/kern/kernel.asm	/^f0107790:	00 $/;"	l
f0107791	obj/kern/kernel.asm	/^f0107791:	c7 04 24 96 9d 10 f0 	movl   $0xf0109d96,(%esp)$/;"	l
f0107798	obj/kern/kernel.asm	/^f0107798:	e8 e8 88 ff ff       	call   f0100085 <_panic>$/;"	l
f010779d	obj/kern/kernel.asm	/^f010779d:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01077a0	obj/kern/kernel.asm	/^f01077a0:	0d 00 00 00 80       	or     $0x80000000,%eax$/;"	l
f01077a5	obj/kern/kernel.asm	/^f01077a5:	c1 e2 0b             	shl    $0xb,%edx$/;"	l
f01077a8	obj/kern/kernel.asm	/^f01077a8:	09 d0                	or     %edx,%eax$/;"	l
f01077aa	obj/kern/kernel.asm	/^f01077aa:	09 d8                	or     %ebx,%eax$/;"	l
f01077ac	obj/kern/kernel.asm	/^f01077ac:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01077af	obj/kern/kernel.asm	/^f01077af:	09 c8                	or     %ecx,%eax$/;"	l
f01077b1	obj/kern/kernel.asm	/^f01077b1:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f01077b6	obj/kern/kernel.asm	/^f01077b6:	ef                   	out    %eax,(%dx)$/;"	l
f01077b7	obj/kern/kernel.asm	/^f01077b7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01077ba	obj/kern/kernel.asm	/^f01077ba:	5b                   	pop    %ebx$/;"	l
f01077bb	obj/kern/kernel.asm	/^f01077bb:	5d                   	pop    %ebp$/;"	l
f01077bc	obj/kern/kernel.asm	/^f01077bc:	c3                   	ret    $/;"	l
f01077bd	obj/kern/kernel.asm	/^f01077bd <pci_conf_read>:$/;"	l
f01077bd	obj/kern/kernel.asm	/^f01077bd:	55                   	push   %ebp$/;"	l
f01077be	obj/kern/kernel.asm	/^f01077be:	89 e5                	mov    %esp,%ebp$/;"	l
f01077c0	obj/kern/kernel.asm	/^f01077c0:	53                   	push   %ebx$/;"	l
f01077c1	obj/kern/kernel.asm	/^f01077c1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01077c4	obj/kern/kernel.asm	/^f01077c4:	89 d3                	mov    %edx,%ebx$/;"	l
f01077c6	obj/kern/kernel.asm	/^f01077c6:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f01077c9	obj/kern/kernel.asm	/^f01077c9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01077cc	obj/kern/kernel.asm	/^f01077cc:	8b 00                	mov    (%eax),%eax$/;"	l
f01077ce	obj/kern/kernel.asm	/^f01077ce:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01077d1	obj/kern/kernel.asm	/^f01077d1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01077d4	obj/kern/kernel.asm	/^f01077d4:	e8 e8 fe ff ff       	call   f01076c1 <pci_conf1_set_addr>$/;"	l
f01077d9	obj/kern/kernel.asm	/^f01077d9:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f01077de	obj/kern/kernel.asm	/^f01077de:	ed                   	in     (%dx),%eax$/;"	l
f01077df	obj/kern/kernel.asm	/^f01077df:	83 c4 14             	add    $0x14,%esp$/;"	l
f01077e2	obj/kern/kernel.asm	/^f01077e2:	5b                   	pop    %ebx$/;"	l
f01077e3	obj/kern/kernel.asm	/^f01077e3:	5d                   	pop    %ebp$/;"	l
f01077e4	obj/kern/kernel.asm	/^f01077e4:	c3                   	ret    $/;"	l
f01077e5	obj/kern/kernel.asm	/^f01077e5 <pci_scan_bus>:$/;"	l
f01077e5	obj/kern/kernel.asm	/^f01077e5:	55                   	push   %ebp$/;"	l
f01077e6	obj/kern/kernel.asm	/^f01077e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01077e8	obj/kern/kernel.asm	/^f01077e8:	57                   	push   %edi$/;"	l
f01077e9	obj/kern/kernel.asm	/^f01077e9:	56                   	push   %esi$/;"	l
f01077ea	obj/kern/kernel.asm	/^f01077ea:	53                   	push   %ebx$/;"	l
f01077eb	obj/kern/kernel.asm	/^f01077eb:	81 ec 3c 01 00 00    	sub    $0x13c,%esp$/;"	l
f01077f1	obj/kern/kernel.asm	/^f01077f1:	89 c3                	mov    %eax,%ebx$/;"	l
f01077f3	obj/kern/kernel.asm	/^f01077f3:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f01077fa	obj/kern/kernel.asm	/^f01077fa:	00 $/;"	l
f01077fb	obj/kern/kernel.asm	/^f01077fb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107802	obj/kern/kernel.asm	/^f0107802:	00 $/;"	l
f0107803	obj/kern/kernel.asm	/^f0107803:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107806	obj/kern/kernel.asm	/^f0107806:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107809	obj/kern/kernel.asm	/^f0107809:	e8 58 f1 ff ff       	call   f0106966 <memset>$/;"	l
f010780e	obj/kern/kernel.asm	/^f010780e:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0107811	obj/kern/kernel.asm	/^f0107811:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0107818	obj/kern/kernel.asm	/^f0107818:	c7 85 fc fe ff ff 00 	movl   $0x0,-0x104(%ebp)$/;"	l
f010781f	obj/kern/kernel.asm	/^f010781f:	00 00 00 $/;"	l
f0107822	obj/kern/kernel.asm	/^f0107822:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107825	obj/kern/kernel.asm	/^f0107825:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)$/;"	l
f010782b	obj/kern/kernel.asm	/^f010782b:	8d 8d 58 ff ff ff    	lea    -0xa8(%ebp),%ecx$/;"	l
f0107831	obj/kern/kernel.asm	/^f0107831:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%ebp)$/;"	l
f0107837	obj/kern/kernel.asm	/^f0107837:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f010783d	obj/kern/kernel.asm	/^f010783d:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)$/;"	l
f0107843	obj/kern/kernel.asm	/^f0107843:	89 8d 00 ff ff ff    	mov    %ecx,-0x100(%ebp)$/;"	l
f0107849	obj/kern/kernel.asm	/^f0107849:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f010784f	obj/kern/kernel.asm	/^f010784f:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0107854	obj/kern/kernel.asm	/^f0107854:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107857	obj/kern/kernel.asm	/^f0107857:	e8 61 ff ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f010785c	obj/kern/kernel.asm	/^f010785c:	89 c2                	mov    %eax,%edx$/;"	l
f010785e	obj/kern/kernel.asm	/^f010785e:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107861	obj/kern/kernel.asm	/^f0107861:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0107864	obj/kern/kernel.asm	/^f0107864:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0107867	obj/kern/kernel.asm	/^f0107867:	0f 87 77 01 00 00    	ja     f01079e4 <pci_scan_bus+0x1ff>$/;"	l
f010786d	obj/kern/kernel.asm	/^f010786d:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0107872	obj/kern/kernel.asm	/^f0107872:	8b bd f4 fe ff ff    	mov    -0x10c(%ebp),%edi$/;"	l
f0107878	obj/kern/kernel.asm	/^f0107878:	8b b5 f0 fe ff ff    	mov    -0x110(%ebp),%esi$/;"	l
f010787e	obj/kern/kernel.asm	/^f010787e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0107880	obj/kern/kernel.asm	/^f0107880:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%ebp)$/;"	l
f0107887	obj/kern/kernel.asm	/^f0107887:	00 00 00 $/;"	l
f010788a	obj/kern/kernel.asm	/^f010788a:	89 c3                	mov    %eax,%ebx$/;"	l
f010788c	obj/kern/kernel.asm	/^f010788c:	81 e3 00 00 80 00    	and    $0x800000,%ebx$/;"	l
f0107892	obj/kern/kernel.asm	/^f0107892:	e9 2f 01 00 00       	jmp    f01079c6 <pci_scan_bus+0x1e1>$/;"	l
f0107897	obj/kern/kernel.asm	/^f0107897:	8b bd ec fe ff ff    	mov    -0x114(%ebp),%edi$/;"	l
f010789d	obj/kern/kernel.asm	/^f010789d:	8b b5 f4 fe ff ff    	mov    -0x10c(%ebp),%esi$/;"	l
f01078a3	obj/kern/kernel.asm	/^f01078a3:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01078a8	obj/kern/kernel.asm	/^f01078a8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01078aa	obj/kern/kernel.asm	/^f01078aa:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01078af	obj/kern/kernel.asm	/^f01078af:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f01078b5	obj/kern/kernel.asm	/^f01078b5:	e8 03 ff ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f01078ba	obj/kern/kernel.asm	/^f01078ba:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)$/;"	l
f01078c0	obj/kern/kernel.asm	/^f01078c0:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f01078c4	obj/kern/kernel.asm	/^f01078c4:	0f 84 f5 00 00 00    	je     f01079bf <pci_scan_bus+0x1da>$/;"	l
f01078ca	obj/kern/kernel.asm	/^f01078ca:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f01078cf	obj/kern/kernel.asm	/^f01078cf:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax$/;"	l
f01078d5	obj/kern/kernel.asm	/^f01078d5:	e8 e3 fe ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f01078da	obj/kern/kernel.asm	/^f01078da:	88 85 54 ff ff ff    	mov    %al,-0xac(%ebp)$/;"	l
f01078e0	obj/kern/kernel.asm	/^f01078e0:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f01078e5	obj/kern/kernel.asm	/^f01078e5:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax$/;"	l
f01078eb	obj/kern/kernel.asm	/^f01078eb:	e8 cd fe ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f01078f0	obj/kern/kernel.asm	/^f01078f0:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)$/;"	l
f01078f6	obj/kern/kernel.asm	/^f01078f6:	89 c2                	mov    %eax,%edx$/;"	l
f01078f8	obj/kern/kernel.asm	/^f01078f8:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f01078fb	obj/kern/kernel.asm	/^f01078fb:	b9 d4 9d 10 f0       	mov    $0xf0109dd4,%ecx$/;"	l
f0107900	obj/kern/kernel.asm	/^f0107900:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0107903	obj/kern/kernel.asm	/^f0107903:	77 07                	ja     f010790c <pci_scan_bus+0x127>$/;"	l
f0107905	obj/kern/kernel.asm	/^f0107905:	8b 0c 95 48 9e 10 f0 	mov    -0xfef61b8(,%edx,4),%ecx$/;"	l
f010790c	obj/kern/kernel.asm	/^f010790c:	8b bd 1c ff ff ff    	mov    -0xe4(%ebp),%edi$/;"	l
f0107912	obj/kern/kernel.asm	/^f0107912:	0f b6 b5 54 ff ff ff 	movzbl -0xac(%ebp),%esi$/;"	l
f0107919	obj/kern/kernel.asm	/^f0107919:	89 74 24 24          	mov    %esi,0x24(%esp)$/;"	l
f010791d	obj/kern/kernel.asm	/^f010791d:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f0107921	obj/kern/kernel.asm	/^f0107921:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107924	obj/kern/kernel.asm	/^f0107924:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0107929	obj/kern/kernel.asm	/^f0107929:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f010792d	obj/kern/kernel.asm	/^f010792d:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0107931	obj/kern/kernel.asm	/^f0107931:	89 f8                	mov    %edi,%eax$/;"	l
f0107933	obj/kern/kernel.asm	/^f0107933:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107936	obj/kern/kernel.asm	/^f0107936:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010793a	obj/kern/kernel.asm	/^f010793a:	81 e7 ff ff 00 00    	and    $0xffff,%edi$/;"	l
f0107940	obj/kern/kernel.asm	/^f0107940:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0107944	obj/kern/kernel.asm	/^f0107944:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax$/;"	l
f010794a	obj/kern/kernel.asm	/^f010794a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010794e	obj/kern/kernel.asm	/^f010794e:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax$/;"	l
f0107954	obj/kern/kernel.asm	/^f0107954:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107958	obj/kern/kernel.asm	/^f0107958:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax$/;"	l
f010795e	obj/kern/kernel.asm	/^f010795e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107961	obj/kern/kernel.asm	/^f0107961:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107965	obj/kern/kernel.asm	/^f0107965:	c7 04 24 10 9c 10 f0 	movl   $0xf0109c10,(%esp)$/;"	l
f010796c	obj/kern/kernel.asm	/^f010796c:	e8 da ca ff ff       	call   f010444b <cprintf>$/;"	l
f0107971	obj/kern/kernel.asm	/^f0107971:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax$/;"	l
f0107977	obj/kern/kernel.asm	/^f0107977:	89 c2                	mov    %eax,%edx$/;"	l
f0107979	obj/kern/kernel.asm	/^f0107979:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f010797c	obj/kern/kernel.asm	/^f010797c:	81 e2 ff 00 00 00    	and    $0xff,%edx$/;"	l
f0107982	obj/kern/kernel.asm	/^f0107982:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107985	obj/kern/kernel.asm	/^f0107985:	8b 8d 04 ff ff ff    	mov    -0xfc(%ebp),%ecx$/;"	l
f010798b	obj/kern/kernel.asm	/^f010798b:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f010798e	obj/kern/kernel.asm	/^f010798e:	b9 b4 53 12 f0       	mov    $0xf01253b4,%ecx$/;"	l
f0107993	obj/kern/kernel.asm	/^f0107993:	e8 b8 fc ff ff       	call   f0107650 <pci_attach_match>$/;"	l
f0107998	obj/kern/kernel.asm	/^f0107998:	85 c0                	test   %eax,%eax$/;"	l
f010799a	obj/kern/kernel.asm	/^f010799a:	75 23                	jne    f01079bf <pci_scan_bus+0x1da>$/;"	l
f010799c	obj/kern/kernel.asm	/^f010799c:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax$/;"	l
f01079a2	obj/kern/kernel.asm	/^f01079a2:	89 c2                	mov    %eax,%edx$/;"	l
f01079a4	obj/kern/kernel.asm	/^f01079a4:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01079a7	obj/kern/kernel.asm	/^f01079a7:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f01079ac	obj/kern/kernel.asm	/^f01079ac:	8b 8d 04 ff ff ff    	mov    -0xfc(%ebp),%ecx$/;"	l
f01079b2	obj/kern/kernel.asm	/^f01079b2:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01079b5	obj/kern/kernel.asm	/^f01079b5:	b9 cc 53 12 f0       	mov    $0xf01253cc,%ecx$/;"	l
f01079ba	obj/kern/kernel.asm	/^f01079ba:	e8 91 fc ff ff       	call   f0107650 <pci_attach_match>$/;"	l
f01079bf	obj/kern/kernel.asm	/^f01079bf:	83 85 60 ff ff ff 01 	addl   $0x1,-0xa0(%ebp)$/;"	l
f01079c6	obj/kern/kernel.asm	/^f01079c6:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f01079c9	obj/kern/kernel.asm	/^f01079c9:	19 c0                	sbb    %eax,%eax$/;"	l
f01079cb	obj/kern/kernel.asm	/^f01079cb:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f01079ce	obj/kern/kernel.asm	/^f01079ce:	83 c0 08             	add    $0x8,%eax$/;"	l
f01079d1	obj/kern/kernel.asm	/^f01079d1:	3b 85 60 ff ff ff    	cmp    -0xa0(%ebp),%eax$/;"	l
f01079d7	obj/kern/kernel.asm	/^f01079d7:	0f 87 ba fe ff ff    	ja     f0107897 <pci_scan_bus+0xb2>$/;"	l
f01079dd	obj/kern/kernel.asm	/^f01079dd:	83 85 fc fe ff ff 01 	addl   $0x1,-0x104(%ebp)$/;"	l
f01079e4	obj/kern/kernel.asm	/^f01079e4:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f01079e7	obj/kern/kernel.asm	/^f01079e7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01079ea	obj/kern/kernel.asm	/^f01079ea:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f01079ed	obj/kern/kernel.asm	/^f01079ed:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f01079f0	obj/kern/kernel.asm	/^f01079f0:	0f 86 59 fe ff ff    	jbe    f010784f <pci_scan_bus+0x6a>$/;"	l
f01079f6	obj/kern/kernel.asm	/^f01079f6:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax$/;"	l
f01079fc	obj/kern/kernel.asm	/^f01079fc:	81 c4 3c 01 00 00    	add    $0x13c,%esp$/;"	l
f0107a02	obj/kern/kernel.asm	/^f0107a02:	5b                   	pop    %ebx$/;"	l
f0107a03	obj/kern/kernel.asm	/^f0107a03:	5e                   	pop    %esi$/;"	l
f0107a04	obj/kern/kernel.asm	/^f0107a04:	5f                   	pop    %edi$/;"	l
f0107a05	obj/kern/kernel.asm	/^f0107a05:	5d                   	pop    %ebp$/;"	l
f0107a06	obj/kern/kernel.asm	/^f0107a06:	c3                   	ret    $/;"	l
f0107a07	obj/kern/kernel.asm	/^f0107a07 <pci_init>:$/;"	l
f0107a07	obj/kern/kernel.asm	/^f0107a07:	55                   	push   %ebp$/;"	l
f0107a08	obj/kern/kernel.asm	/^f0107a08:	89 e5                	mov    %esp,%ebp$/;"	l
f0107a0a	obj/kern/kernel.asm	/^f0107a0a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107a0d	obj/kern/kernel.asm	/^f0107a0d:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107a14	obj/kern/kernel.asm	/^f0107a14:	00 $/;"	l
f0107a15	obj/kern/kernel.asm	/^f0107a15:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107a1c	obj/kern/kernel.asm	/^f0107a1c:	00 $/;"	l
f0107a1d	obj/kern/kernel.asm	/^f0107a1d:	c7 04 24 80 5e 27 f0 	movl   $0xf0275e80,(%esp)$/;"	l
f0107a24	obj/kern/kernel.asm	/^f0107a24:	e8 3d ef ff ff       	call   f0106966 <memset>$/;"	l
f0107a29	obj/kern/kernel.asm	/^f0107a29:	b8 80 5e 27 f0       	mov    $0xf0275e80,%eax$/;"	l
f0107a2e	obj/kern/kernel.asm	/^f0107a2e:	e8 b2 fd ff ff       	call   f01077e5 <pci_scan_bus>$/;"	l
f0107a33	obj/kern/kernel.asm	/^f0107a33:	c9                   	leave  $/;"	l
f0107a34	obj/kern/kernel.asm	/^f0107a34:	c3                   	ret    $/;"	l
f0107a35	obj/kern/kernel.asm	/^f0107a35 <pci_bridge_attach>:$/;"	l
f0107a35	obj/kern/kernel.asm	/^f0107a35:	55                   	push   %ebp$/;"	l
f0107a36	obj/kern/kernel.asm	/^f0107a36:	89 e5                	mov    %esp,%ebp$/;"	l
f0107a38	obj/kern/kernel.asm	/^f0107a38:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0107a3b	obj/kern/kernel.asm	/^f0107a3b:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0107a3e	obj/kern/kernel.asm	/^f0107a3e:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0107a41	obj/kern/kernel.asm	/^f0107a41:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0107a44	obj/kern/kernel.asm	/^f0107a44:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107a47	obj/kern/kernel.asm	/^f0107a47:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f0107a4c	obj/kern/kernel.asm	/^f0107a4c:	89 d8                	mov    %ebx,%eax$/;"	l
f0107a4e	obj/kern/kernel.asm	/^f0107a4e:	e8 6a fd ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107a53	obj/kern/kernel.asm	/^f0107a53:	89 c7                	mov    %eax,%edi$/;"	l
f0107a55	obj/kern/kernel.asm	/^f0107a55:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0107a5a	obj/kern/kernel.asm	/^f0107a5a:	89 d8                	mov    %ebx,%eax$/;"	l
f0107a5c	obj/kern/kernel.asm	/^f0107a5c:	e8 5c fd ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107a61	obj/kern/kernel.asm	/^f0107a61:	89 c6                	mov    %eax,%esi$/;"	l
f0107a63	obj/kern/kernel.asm	/^f0107a63:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0107a66	obj/kern/kernel.asm	/^f0107a66:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0107a69	obj/kern/kernel.asm	/^f0107a69:	75 2a                	jne    f0107a95 <pci_bridge_attach+0x60>$/;"	l
f0107a6b	obj/kern/kernel.asm	/^f0107a6b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107a6e	obj/kern/kernel.asm	/^f0107a6e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107a72	obj/kern/kernel.asm	/^f0107a72:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107a75	obj/kern/kernel.asm	/^f0107a75:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107a79	obj/kern/kernel.asm	/^f0107a79:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107a7b	obj/kern/kernel.asm	/^f0107a7b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107a7e	obj/kern/kernel.asm	/^f0107a7e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107a82	obj/kern/kernel.asm	/^f0107a82:	c7 04 24 4c 9c 10 f0 	movl   $0xf0109c4c,(%esp)$/;"	l
f0107a89	obj/kern/kernel.asm	/^f0107a89:	e8 bd c9 ff ff       	call   f010444b <cprintf>$/;"	l
f0107a8e	obj/kern/kernel.asm	/^f0107a8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107a93	obj/kern/kernel.asm	/^f0107a93:	eb 66                	jmp    f0107afb <pci_bridge_attach+0xc6>$/;"	l
f0107a95	obj/kern/kernel.asm	/^f0107a95:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107a9c	obj/kern/kernel.asm	/^f0107a9c:	00 $/;"	l
f0107a9d	obj/kern/kernel.asm	/^f0107a9d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107aa4	obj/kern/kernel.asm	/^f0107aa4:	00 $/;"	l
f0107aa5	obj/kern/kernel.asm	/^f0107aa5:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0107aa8	obj/kern/kernel.asm	/^f0107aa8:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107aab	obj/kern/kernel.asm	/^f0107aab:	e8 b6 ee ff ff       	call   f0106966 <memset>$/;"	l
f0107ab0	obj/kern/kernel.asm	/^f0107ab0:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0107ab3	obj/kern/kernel.asm	/^f0107ab3:	89 f2                	mov    %esi,%edx$/;"	l
f0107ab5	obj/kern/kernel.asm	/^f0107ab5:	0f b6 c6             	movzbl %dh,%eax$/;"	l
f0107ab8	obj/kern/kernel.asm	/^f0107ab8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107abb	obj/kern/kernel.asm	/^f0107abb:	c1 ee 10             	shr    $0x10,%esi$/;"	l
f0107abe	obj/kern/kernel.asm	/^f0107abe:	81 e6 ff 00 00 00    	and    $0xff,%esi$/;"	l
f0107ac4	obj/kern/kernel.asm	/^f0107ac4:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0107ac8	obj/kern/kernel.asm	/^f0107ac8:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107acc	obj/kern/kernel.asm	/^f0107acc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107acf	obj/kern/kernel.asm	/^f0107acf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107ad3	obj/kern/kernel.asm	/^f0107ad3:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107ad6	obj/kern/kernel.asm	/^f0107ad6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107ada	obj/kern/kernel.asm	/^f0107ada:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107adc	obj/kern/kernel.asm	/^f0107adc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107adf	obj/kern/kernel.asm	/^f0107adf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ae3	obj/kern/kernel.asm	/^f0107ae3:	c7 04 24 d0 9c 10 f0 	movl   $0xf0109cd0,(%esp)$/;"	l
f0107aea	obj/kern/kernel.asm	/^f0107aea:	e8 5c c9 ff ff       	call   f010444b <cprintf>$/;"	l
f0107aef	obj/kern/kernel.asm	/^f0107aef:	89 f8                	mov    %edi,%eax$/;"	l
f0107af1	obj/kern/kernel.asm	/^f0107af1:	e8 ef fc ff ff       	call   f01077e5 <pci_scan_bus>$/;"	l
f0107af6	obj/kern/kernel.asm	/^f0107af6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107afb	obj/kern/kernel.asm	/^f0107afb:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0107afe	obj/kern/kernel.asm	/^f0107afe:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0107b01	obj/kern/kernel.asm	/^f0107b01:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0107b04	obj/kern/kernel.asm	/^f0107b04:	89 ec                	mov    %ebp,%esp$/;"	l
f0107b06	obj/kern/kernel.asm	/^f0107b06:	5d                   	pop    %ebp$/;"	l
f0107b07	obj/kern/kernel.asm	/^f0107b07:	c3                   	ret    $/;"	l
f0107b08	obj/kern/kernel.asm	/^f0107b08 <pci_conf_write>:$/;"	l
f0107b08	obj/kern/kernel.asm	/^f0107b08:	55                   	push   %ebp$/;"	l
f0107b09	obj/kern/kernel.asm	/^f0107b09:	89 e5                	mov    %esp,%ebp$/;"	l
f0107b0b	obj/kern/kernel.asm	/^f0107b0b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107b0e	obj/kern/kernel.asm	/^f0107b0e:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0107b11	obj/kern/kernel.asm	/^f0107b11:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0107b14	obj/kern/kernel.asm	/^f0107b14:	89 d3                	mov    %edx,%ebx$/;"	l
f0107b16	obj/kern/kernel.asm	/^f0107b16:	89 ce                	mov    %ecx,%esi$/;"	l
f0107b18	obj/kern/kernel.asm	/^f0107b18:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107b1b	obj/kern/kernel.asm	/^f0107b1b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0107b1e	obj/kern/kernel.asm	/^f0107b1e:	8b 00                	mov    (%eax),%eax$/;"	l
f0107b20	obj/kern/kernel.asm	/^f0107b20:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107b23	obj/kern/kernel.asm	/^f0107b23:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0107b26	obj/kern/kernel.asm	/^f0107b26:	e8 96 fb ff ff       	call   f01076c1 <pci_conf1_set_addr>$/;"	l
f0107b2b	obj/kern/kernel.asm	/^f0107b2b:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107b30	obj/kern/kernel.asm	/^f0107b30:	89 f0                	mov    %esi,%eax$/;"	l
f0107b32	obj/kern/kernel.asm	/^f0107b32:	ef                   	out    %eax,(%dx)$/;"	l
f0107b33	obj/kern/kernel.asm	/^f0107b33:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0107b36	obj/kern/kernel.asm	/^f0107b36:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0107b39	obj/kern/kernel.asm	/^f0107b39:	89 ec                	mov    %ebp,%esp$/;"	l
f0107b3b	obj/kern/kernel.asm	/^f0107b3b:	5d                   	pop    %ebp$/;"	l
f0107b3c	obj/kern/kernel.asm	/^f0107b3c:	c3                   	ret    $/;"	l
f0107b3d	obj/kern/kernel.asm	/^f0107b3d <pci_func_enable>:$/;"	l
f0107b3d	obj/kern/kernel.asm	/^f0107b3d:	55                   	push   %ebp$/;"	l
f0107b3e	obj/kern/kernel.asm	/^f0107b3e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107b40	obj/kern/kernel.asm	/^f0107b40:	57                   	push   %edi$/;"	l
f0107b41	obj/kern/kernel.asm	/^f0107b41:	56                   	push   %esi$/;"	l
f0107b42	obj/kern/kernel.asm	/^f0107b42:	53                   	push   %ebx$/;"	l
f0107b43	obj/kern/kernel.asm	/^f0107b43:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0107b46	obj/kern/kernel.asm	/^f0107b46:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107b49	obj/kern/kernel.asm	/^f0107b49:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0107b4e	obj/kern/kernel.asm	/^f0107b4e:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0107b53	obj/kern/kernel.asm	/^f0107b53:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b55	obj/kern/kernel.asm	/^f0107b55:	e8 ae ff ff ff       	call   f0107b08 <pci_conf_write>$/;"	l
f0107b5a	obj/kern/kernel.asm	/^f0107b5a:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0107b5f	obj/kern/kernel.asm	/^f0107b5f:	89 f2                	mov    %esi,%edx$/;"	l
f0107b61	obj/kern/kernel.asm	/^f0107b61:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b63	obj/kern/kernel.asm	/^f0107b63:	e8 55 fc ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107b68	obj/kern/kernel.asm	/^f0107b68:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107b6b	obj/kern/kernel.asm	/^f0107b6b:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0107b70	obj/kern/kernel.asm	/^f0107b70:	89 f2                	mov    %esi,%edx$/;"	l
f0107b72	obj/kern/kernel.asm	/^f0107b72:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b74	obj/kern/kernel.asm	/^f0107b74:	e8 8f ff ff ff       	call   f0107b08 <pci_conf_write>$/;"	l
f0107b79	obj/kern/kernel.asm	/^f0107b79:	89 f2                	mov    %esi,%edx$/;"	l
f0107b7b	obj/kern/kernel.asm	/^f0107b7b:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b7d	obj/kern/kernel.asm	/^f0107b7d:	e8 3b fc ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107b82	obj/kern/kernel.asm	/^f0107b82:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
f0107b87	obj/kern/kernel.asm	/^f0107b87:	85 c0                	test   %eax,%eax$/;"	l
f0107b89	obj/kern/kernel.asm	/^f0107b89:	0f 84 c4 00 00 00    	je     f0107c53 <pci_func_enable+0x116>$/;"	l
f0107b8f	obj/kern/kernel.asm	/^f0107b8f:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107b92	obj/kern/kernel.asm	/^f0107b92:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107b95	obj/kern/kernel.asm	/^f0107b95:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0107b98	obj/kern/kernel.asm	/^f0107b98:	a8 01                	test   $0x1,%al$/;"	l
f0107b9a	obj/kern/kernel.asm	/^f0107b9a:	75 2c                	jne    f0107bc8 <pci_func_enable+0x8b>$/;"	l
f0107b9c	obj/kern/kernel.asm	/^f0107b9c:	89 c2                	mov    %eax,%edx$/;"	l
f0107b9e	obj/kern/kernel.asm	/^f0107b9e:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107ba1	obj/kern/kernel.asm	/^f0107ba1:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107ba4	obj/kern/kernel.asm	/^f0107ba4:	0f 94 c2             	sete   %dl$/;"	l
f0107ba7	obj/kern/kernel.asm	/^f0107ba7:	0f b6 fa             	movzbl %dl,%edi$/;"	l
f0107baa	obj/kern/kernel.asm	/^f0107baa:	8d 3c bd 04 00 00 00 	lea    0x4(,%edi,4),%edi$/;"	l
f0107bb1	obj/kern/kernel.asm	/^f0107bb1:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107bb4	obj/kern/kernel.asm	/^f0107bb4:	89 c2                	mov    %eax,%edx$/;"	l
f0107bb6	obj/kern/kernel.asm	/^f0107bb6:	f7 da                	neg    %edx$/;"	l
f0107bb8	obj/kern/kernel.asm	/^f0107bb8:	21 c2                	and    %eax,%edx$/;"	l
f0107bba	obj/kern/kernel.asm	/^f0107bba:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107bbd	obj/kern/kernel.asm	/^f0107bbd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107bc0	obj/kern/kernel.asm	/^f0107bc0:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107bc3	obj/kern/kernel.asm	/^f0107bc3:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107bc6	obj/kern/kernel.asm	/^f0107bc6:	eb 1a                	jmp    f0107be2 <pci_func_enable+0xa5>$/;"	l
f0107bc8	obj/kern/kernel.asm	/^f0107bc8:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107bcb	obj/kern/kernel.asm	/^f0107bcb:	89 c2                	mov    %eax,%edx$/;"	l
f0107bcd	obj/kern/kernel.asm	/^f0107bcd:	f7 da                	neg    %edx$/;"	l
f0107bcf	obj/kern/kernel.asm	/^f0107bcf:	21 c2                	and    %eax,%edx$/;"	l
f0107bd1	obj/kern/kernel.asm	/^f0107bd1:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107bd4	obj/kern/kernel.asm	/^f0107bd4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0107bd7	obj/kern/kernel.asm	/^f0107bd7:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
f0107bda	obj/kern/kernel.asm	/^f0107bda:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0107bdd	obj/kern/kernel.asm	/^f0107bdd:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
f0107be2	obj/kern/kernel.asm	/^f0107be2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107be5	obj/kern/kernel.asm	/^f0107be5:	89 f2                	mov    %esi,%edx$/;"	l
f0107be7	obj/kern/kernel.asm	/^f0107be7:	89 d8                	mov    %ebx,%eax$/;"	l
f0107be9	obj/kern/kernel.asm	/^f0107be9:	e8 1a ff ff ff       	call   f0107b08 <pci_conf_write>$/;"	l
f0107bee	obj/kern/kernel.asm	/^f0107bee:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0107bf1	obj/kern/kernel.asm	/^f0107bf1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107bf4	obj/kern/kernel.asm	/^f0107bf4:	89 54 83 14          	mov    %edx,0x14(%ebx,%eax,4)$/;"	l
f0107bf8	obj/kern/kernel.asm	/^f0107bf8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0107bfb	obj/kern/kernel.asm	/^f0107bfb:	89 54 83 2c          	mov    %edx,0x2c(%ebx,%eax,4)$/;"	l
f0107bff	obj/kern/kernel.asm	/^f0107bff:	85 d2                	test   %edx,%edx$/;"	l
f0107c01	obj/kern/kernel.asm	/^f0107c01:	74 50                	je     f0107c53 <pci_func_enable+0x116>$/;"	l
f0107c03	obj/kern/kernel.asm	/^f0107c03:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0107c07	obj/kern/kernel.asm	/^f0107c07:	75 4a                	jne    f0107c53 <pci_func_enable+0x116>$/;"	l
f0107c09	obj/kern/kernel.asm	/^f0107c09:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0107c0c	obj/kern/kernel.asm	/^f0107c0c:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0107c10	obj/kern/kernel.asm	/^f0107c10:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0107c13	obj/kern/kernel.asm	/^f0107c13:	89 54 24 1c          	mov    %edx,0x1c(%esp)$/;"	l
f0107c17	obj/kern/kernel.asm	/^f0107c17:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0107c1a	obj/kern/kernel.asm	/^f0107c1a:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0107c1e	obj/kern/kernel.asm	/^f0107c1e:	89 c2                	mov    %eax,%edx$/;"	l
f0107c20	obj/kern/kernel.asm	/^f0107c20:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107c23	obj/kern/kernel.asm	/^f0107c23:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107c27	obj/kern/kernel.asm	/^f0107c27:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0107c2c	obj/kern/kernel.asm	/^f0107c2c:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107c30	obj/kern/kernel.asm	/^f0107c30:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107c33	obj/kern/kernel.asm	/^f0107c33:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107c37	obj/kern/kernel.asm	/^f0107c37:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107c3a	obj/kern/kernel.asm	/^f0107c3a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107c3e	obj/kern/kernel.asm	/^f0107c3e:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107c40	obj/kern/kernel.asm	/^f0107c40:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107c43	obj/kern/kernel.asm	/^f0107c43:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107c47	obj/kern/kernel.asm	/^f0107c47:	c7 04 24 00 9d 10 f0 	movl   $0xf0109d00,(%esp)$/;"	l
f0107c4e	obj/kern/kernel.asm	/^f0107c4e:	e8 f8 c7 ff ff       	call   f010444b <cprintf>$/;"	l
f0107c53	obj/kern/kernel.asm	/^f0107c53:	01 fe                	add    %edi,%esi$/;"	l
f0107c55	obj/kern/kernel.asm	/^f0107c55:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0107c58	obj/kern/kernel.asm	/^f0107c58:	0f 86 01 ff ff ff    	jbe    f0107b5f <pci_func_enable+0x22>$/;"	l
f0107c5e	obj/kern/kernel.asm	/^f0107c5e:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0107c61	obj/kern/kernel.asm	/^f0107c61:	89 c2                	mov    %eax,%edx$/;"	l
f0107c63	obj/kern/kernel.asm	/^f0107c63:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107c66	obj/kern/kernel.asm	/^f0107c66:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107c6a	obj/kern/kernel.asm	/^f0107c6a:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0107c6f	obj/kern/kernel.asm	/^f0107c6f:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107c73	obj/kern/kernel.asm	/^f0107c73:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107c76	obj/kern/kernel.asm	/^f0107c76:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107c7a	obj/kern/kernel.asm	/^f0107c7a:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107c7d	obj/kern/kernel.asm	/^f0107c7d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107c81	obj/kern/kernel.asm	/^f0107c81:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107c83	obj/kern/kernel.asm	/^f0107c83:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107c86	obj/kern/kernel.asm	/^f0107c86:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107c8a	obj/kern/kernel.asm	/^f0107c8a:	c7 04 24 5c 9d 10 f0 	movl   $0xf0109d5c,(%esp)$/;"	l
f0107c91	obj/kern/kernel.asm	/^f0107c91:	e8 b5 c7 ff ff       	call   f010444b <cprintf>$/;"	l
f0107c96	obj/kern/kernel.asm	/^f0107c96:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107c99	obj/kern/kernel.asm	/^f0107c99:	5b                   	pop    %ebx$/;"	l
f0107c9a	obj/kern/kernel.asm	/^f0107c9a:	5e                   	pop    %esi$/;"	l
f0107c9b	obj/kern/kernel.asm	/^f0107c9b:	5f                   	pop    %edi$/;"	l
f0107c9c	obj/kern/kernel.asm	/^f0107c9c:	5d                   	pop    %ebp$/;"	l
f0107c9d	obj/kern/kernel.asm	/^f0107c9d:	c3                   	ret    $/;"	l
f0107ca0	obj/kern/kernel.asm	/^f0107ca0 <time_init>:$/;"	l
f0107ca0	obj/kern/kernel.asm	/^f0107ca0:	55                   	push   %ebp$/;"	l
f0107ca1	obj/kern/kernel.asm	/^f0107ca1:	89 e5                	mov    %esp,%ebp$/;"	l
f0107ca3	obj/kern/kernel.asm	/^f0107ca3:	c7 05 88 5e 27 f0 00 	movl   $0x0,0xf0275e88$/;"	l
f0107caa	obj/kern/kernel.asm	/^f0107caa:	00 00 00 $/;"	l
f0107cad	obj/kern/kernel.asm	/^f0107cad:	5d                   	pop    %ebp$/;"	l
f0107cae	obj/kern/kernel.asm	/^f0107cae:	c3                   	ret    $/;"	l
f0107caf	obj/kern/kernel.asm	/^f0107caf <time_msec>:$/;"	l
f0107caf	obj/kern/kernel.asm	/^f0107caf:	55                   	push   %ebp$/;"	l
f0107cb0	obj/kern/kernel.asm	/^f0107cb0:	89 e5                	mov    %esp,%ebp$/;"	l
f0107cb2	obj/kern/kernel.asm	/^f0107cb2:	a1 88 5e 27 f0       	mov    0xf0275e88,%eax$/;"	l
f0107cb7	obj/kern/kernel.asm	/^f0107cb7:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0107cba	obj/kern/kernel.asm	/^f0107cba:	01 c0                	add    %eax,%eax$/;"	l
f0107cbc	obj/kern/kernel.asm	/^f0107cbc:	5d                   	pop    %ebp$/;"	l
f0107cbd	obj/kern/kernel.asm	/^f0107cbd:	c3                   	ret    $/;"	l
f0107cbe	obj/kern/kernel.asm	/^f0107cbe <time_tick>:$/;"	l
f0107cbe	obj/kern/kernel.asm	/^f0107cbe:	55                   	push   %ebp$/;"	l
f0107cbf	obj/kern/kernel.asm	/^f0107cbf:	89 e5                	mov    %esp,%ebp$/;"	l
f0107cc1	obj/kern/kernel.asm	/^f0107cc1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107cc4	obj/kern/kernel.asm	/^f0107cc4:	a1 88 5e 27 f0       	mov    0xf0275e88,%eax$/;"	l
f0107cc9	obj/kern/kernel.asm	/^f0107cc9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107ccc	obj/kern/kernel.asm	/^f0107ccc:	a3 88 5e 27 f0       	mov    %eax,0xf0275e88$/;"	l
f0107cd1	obj/kern/kernel.asm	/^f0107cd1:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107cd4	obj/kern/kernel.asm	/^f0107cd4:	01 d2                	add    %edx,%edx$/;"	l
f0107cd6	obj/kern/kernel.asm	/^f0107cd6:	39 d0                	cmp    %edx,%eax$/;"	l
f0107cd8	obj/kern/kernel.asm	/^f0107cd8:	76 1c                	jbe    f0107cf6 <time_tick+0x38>$/;"	l
f0107cda	obj/kern/kernel.asm	/^f0107cda:	c7 44 24 08 64 9e 10 	movl   $0xf0109e64,0x8(%esp)$/;"	l
f0107ce1	obj/kern/kernel.asm	/^f0107ce1:	f0 $/;"	l
f0107ce2	obj/kern/kernel.asm	/^f0107ce2:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0107ce9	obj/kern/kernel.asm	/^f0107ce9:	00 $/;"	l
f0107cea	obj/kern/kernel.asm	/^f0107cea:	c7 04 24 7f 9e 10 f0 	movl   $0xf0109e7f,(%esp)$/;"	l
f0107cf1	obj/kern/kernel.asm	/^f0107cf1:	e8 8f 83 ff ff       	call   f0100085 <_panic>$/;"	l
f0107cf6	obj/kern/kernel.asm	/^f0107cf6:	c9                   	leave  $/;"	l
f0107cf7	obj/kern/kernel.asm	/^f0107cf7:	c3                   	ret    $/;"	l
f0107d00	obj/kern/kernel.asm	/^f0107d00 <__udivdi3>:$/;"	l
f0107d00	obj/kern/kernel.asm	/^f0107d00:	55                   	push   %ebp$/;"	l
f0107d01	obj/kern/kernel.asm	/^f0107d01:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d03	obj/kern/kernel.asm	/^f0107d03:	57                   	push   %edi$/;"	l
f0107d04	obj/kern/kernel.asm	/^f0107d04:	56                   	push   %esi$/;"	l
f0107d05	obj/kern/kernel.asm	/^f0107d05:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107d08	obj/kern/kernel.asm	/^f0107d08:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0107d0b	obj/kern/kernel.asm	/^f0107d0b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107d0e	obj/kern/kernel.asm	/^f0107d0e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0107d11	obj/kern/kernel.asm	/^f0107d11:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0107d14	obj/kern/kernel.asm	/^f0107d14:	85 c0                	test   %eax,%eax$/;"	l
f0107d16	obj/kern/kernel.asm	/^f0107d16:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
f0107d19	obj/kern/kernel.asm	/^f0107d19:	75 35                	jne    f0107d50 <__udivdi3+0x50>$/;"	l
f0107d1b	obj/kern/kernel.asm	/^f0107d1b:	39 fe                	cmp    %edi,%esi$/;"	l
f0107d1d	obj/kern/kernel.asm	/^f0107d1d:	77 61                	ja     f0107d80 <__udivdi3+0x80>$/;"	l
f0107d1f	obj/kern/kernel.asm	/^f0107d1f:	85 f6                	test   %esi,%esi$/;"	l
f0107d21	obj/kern/kernel.asm	/^f0107d21:	75 0b                	jne    f0107d2e <__udivdi3+0x2e>$/;"	l
f0107d23	obj/kern/kernel.asm	/^f0107d23:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107d28	obj/kern/kernel.asm	/^f0107d28:	31 d2                	xor    %edx,%edx$/;"	l
f0107d2a	obj/kern/kernel.asm	/^f0107d2a:	f7 f6                	div    %esi$/;"	l
f0107d2c	obj/kern/kernel.asm	/^f0107d2c:	89 c6                	mov    %eax,%esi$/;"	l
f0107d2e	obj/kern/kernel.asm	/^f0107d2e:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0107d31	obj/kern/kernel.asm	/^f0107d31:	31 d2                	xor    %edx,%edx$/;"	l
f0107d33	obj/kern/kernel.asm	/^f0107d33:	89 f8                	mov    %edi,%eax$/;"	l
f0107d35	obj/kern/kernel.asm	/^f0107d35:	f7 f6                	div    %esi$/;"	l
f0107d37	obj/kern/kernel.asm	/^f0107d37:	89 c7                	mov    %eax,%edi$/;"	l
f0107d39	obj/kern/kernel.asm	/^f0107d39:	89 c8                	mov    %ecx,%eax$/;"	l
f0107d3b	obj/kern/kernel.asm	/^f0107d3b:	f7 f6                	div    %esi$/;"	l
f0107d3d	obj/kern/kernel.asm	/^f0107d3d:	89 c1                	mov    %eax,%ecx$/;"	l
f0107d3f	obj/kern/kernel.asm	/^f0107d3f:	89 fa                	mov    %edi,%edx$/;"	l
f0107d41	obj/kern/kernel.asm	/^f0107d41:	89 c8                	mov    %ecx,%eax$/;"	l
f0107d43	obj/kern/kernel.asm	/^f0107d43:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d46	obj/kern/kernel.asm	/^f0107d46:	5e                   	pop    %esi$/;"	l
f0107d47	obj/kern/kernel.asm	/^f0107d47:	5f                   	pop    %edi$/;"	l
f0107d48	obj/kern/kernel.asm	/^f0107d48:	5d                   	pop    %ebp$/;"	l
f0107d49	obj/kern/kernel.asm	/^f0107d49:	c3                   	ret    $/;"	l
f0107d4a	obj/kern/kernel.asm	/^f0107d4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107d50	obj/kern/kernel.asm	/^f0107d50:	39 f8                	cmp    %edi,%eax$/;"	l
f0107d52	obj/kern/kernel.asm	/^f0107d52:	77 1c                	ja     f0107d70 <__udivdi3+0x70>$/;"	l
f0107d54	obj/kern/kernel.asm	/^f0107d54:	0f bd d0             	bsr    %eax,%edx$/;"	l
f0107d57	obj/kern/kernel.asm	/^f0107d57:	83 f2 1f             	xor    $0x1f,%edx$/;"	l
f0107d5a	obj/kern/kernel.asm	/^f0107d5a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0107d5d	obj/kern/kernel.asm	/^f0107d5d:	75 39                	jne    f0107d98 <__udivdi3+0x98>$/;"	l
f0107d5f	obj/kern/kernel.asm	/^f0107d5f:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f0107d62	obj/kern/kernel.asm	/^f0107d62:	0f 86 a0 00 00 00    	jbe    f0107e08 <__udivdi3+0x108>$/;"	l
f0107d68	obj/kern/kernel.asm	/^f0107d68:	39 f8                	cmp    %edi,%eax$/;"	l
f0107d6a	obj/kern/kernel.asm	/^f0107d6a:	0f 82 98 00 00 00    	jb     f0107e08 <__udivdi3+0x108>$/;"	l
f0107d70	obj/kern/kernel.asm	/^f0107d70:	31 ff                	xor    %edi,%edi$/;"	l
f0107d72	obj/kern/kernel.asm	/^f0107d72:	31 c9                	xor    %ecx,%ecx$/;"	l
f0107d74	obj/kern/kernel.asm	/^f0107d74:	89 c8                	mov    %ecx,%eax$/;"	l
f0107d76	obj/kern/kernel.asm	/^f0107d76:	89 fa                	mov    %edi,%edx$/;"	l
f0107d78	obj/kern/kernel.asm	/^f0107d78:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d7b	obj/kern/kernel.asm	/^f0107d7b:	5e                   	pop    %esi$/;"	l
f0107d7c	obj/kern/kernel.asm	/^f0107d7c:	5f                   	pop    %edi$/;"	l
f0107d7d	obj/kern/kernel.asm	/^f0107d7d:	5d                   	pop    %ebp$/;"	l
f0107d7e	obj/kern/kernel.asm	/^f0107d7e:	c3                   	ret    $/;"	l
f0107d7f	obj/kern/kernel.asm	/^f0107d7f:	90                   	nop$/;"	l
f0107d80	obj/kern/kernel.asm	/^f0107d80:	89 d1                	mov    %edx,%ecx$/;"	l
f0107d82	obj/kern/kernel.asm	/^f0107d82:	89 fa                	mov    %edi,%edx$/;"	l
f0107d84	obj/kern/kernel.asm	/^f0107d84:	89 c8                	mov    %ecx,%eax$/;"	l
f0107d86	obj/kern/kernel.asm	/^f0107d86:	31 ff                	xor    %edi,%edi$/;"	l
f0107d88	obj/kern/kernel.asm	/^f0107d88:	f7 f6                	div    %esi$/;"	l
f0107d8a	obj/kern/kernel.asm	/^f0107d8a:	89 c1                	mov    %eax,%ecx$/;"	l
f0107d8c	obj/kern/kernel.asm	/^f0107d8c:	89 fa                	mov    %edi,%edx$/;"	l
f0107d8e	obj/kern/kernel.asm	/^f0107d8e:	89 c8                	mov    %ecx,%eax$/;"	l
f0107d90	obj/kern/kernel.asm	/^f0107d90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d93	obj/kern/kernel.asm	/^f0107d93:	5e                   	pop    %esi$/;"	l
f0107d94	obj/kern/kernel.asm	/^f0107d94:	5f                   	pop    %edi$/;"	l
f0107d95	obj/kern/kernel.asm	/^f0107d95:	5d                   	pop    %ebp$/;"	l
f0107d96	obj/kern/kernel.asm	/^f0107d96:	c3                   	ret    $/;"	l
f0107d97	obj/kern/kernel.asm	/^f0107d97:	90                   	nop$/;"	l
f0107d98	obj/kern/kernel.asm	/^f0107d98:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0107d9c	obj/kern/kernel.asm	/^f0107d9c:	89 f2                	mov    %esi,%edx$/;"	l
f0107d9e	obj/kern/kernel.asm	/^f0107d9e:	d3 e0                	shl    %cl,%eax$/;"	d
f0107da0	obj/kern/kernel.asm	/^f0107da0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0107da3	obj/kern/kernel.asm	/^f0107da3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107da8	obj/kern/kernel.asm	/^f0107da8:	2b 45 f4             	sub    -0xc(%ebp),%eax$/;"	l
f0107dab	obj/kern/kernel.asm	/^f0107dab:	89 c1                	mov    %eax,%ecx$/;"	l
f0107dad	obj/kern/kernel.asm	/^f0107dad:	d3 ea                	shr    %cl,%edx$/;"	d
f0107daf	obj/kern/kernel.asm	/^f0107daf:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0107db3	obj/kern/kernel.asm	/^f0107db3:	0b 55 ec             	or     -0x14(%ebp),%edx$/;"	l
f0107db6	obj/kern/kernel.asm	/^f0107db6:	d3 e6                	shl    %cl,%esi$/;"	d
f0107db8	obj/kern/kernel.asm	/^f0107db8:	89 c1                	mov    %eax,%ecx$/;"	l
f0107dba	obj/kern/kernel.asm	/^f0107dba:	89 75 e8             	mov    %esi,-0x18(%ebp)$/;"	l
f0107dbd	obj/kern/kernel.asm	/^f0107dbd:	89 fe                	mov    %edi,%esi$/;"	l
f0107dbf	obj/kern/kernel.asm	/^f0107dbf:	d3 ee                	shr    %cl,%esi$/;"	d
f0107dc1	obj/kern/kernel.asm	/^f0107dc1:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0107dc5	obj/kern/kernel.asm	/^f0107dc5:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0107dc8	obj/kern/kernel.asm	/^f0107dc8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107dcb	obj/kern/kernel.asm	/^f0107dcb:	d3 e7                	shl    %cl,%edi$/;"	d
f0107dcd	obj/kern/kernel.asm	/^f0107dcd:	89 c1                	mov    %eax,%ecx$/;"	l
f0107dcf	obj/kern/kernel.asm	/^f0107dcf:	d3 ea                	shr    %cl,%edx$/;"	d
f0107dd1	obj/kern/kernel.asm	/^f0107dd1:	09 d7                	or     %edx,%edi$/;"	l
f0107dd3	obj/kern/kernel.asm	/^f0107dd3:	89 f2                	mov    %esi,%edx$/;"	l
f0107dd5	obj/kern/kernel.asm	/^f0107dd5:	89 f8                	mov    %edi,%eax$/;"	l
f0107dd7	obj/kern/kernel.asm	/^f0107dd7:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
f0107dda	obj/kern/kernel.asm	/^f0107dda:	89 d6                	mov    %edx,%esi$/;"	l
f0107ddc	obj/kern/kernel.asm	/^f0107ddc:	89 c7                	mov    %eax,%edi$/;"	l
f0107dde	obj/kern/kernel.asm	/^f0107dde:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f0107de1	obj/kern/kernel.asm	/^f0107de1:	39 d6                	cmp    %edx,%esi$/;"	l
f0107de3	obj/kern/kernel.asm	/^f0107de3:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0107de6	obj/kern/kernel.asm	/^f0107de6:	72 30                	jb     f0107e18 <__udivdi3+0x118>$/;"	l
f0107de8	obj/kern/kernel.asm	/^f0107de8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107deb	obj/kern/kernel.asm	/^f0107deb:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0107def	obj/kern/kernel.asm	/^f0107def:	d3 e2                	shl    %cl,%edx$/;"	d
f0107df1	obj/kern/kernel.asm	/^f0107df1:	39 c2                	cmp    %eax,%edx$/;"	l
f0107df3	obj/kern/kernel.asm	/^f0107df3:	73 05                	jae    f0107dfa <__udivdi3+0xfa>$/;"	l
f0107df5	obj/kern/kernel.asm	/^f0107df5:	3b 75 ec             	cmp    -0x14(%ebp),%esi$/;"	l
f0107df8	obj/kern/kernel.asm	/^f0107df8:	74 1e                	je     f0107e18 <__udivdi3+0x118>$/;"	l
f0107dfa	obj/kern/kernel.asm	/^f0107dfa:	89 f9                	mov    %edi,%ecx$/;"	l
f0107dfc	obj/kern/kernel.asm	/^f0107dfc:	31 ff                	xor    %edi,%edi$/;"	l
f0107dfe	obj/kern/kernel.asm	/^f0107dfe:	e9 71 ff ff ff       	jmp    f0107d74 <__udivdi3+0x74>$/;"	l
f0107e03	obj/kern/kernel.asm	/^f0107e03:	90                   	nop$/;"	l
f0107e04	obj/kern/kernel.asm	/^f0107e04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107e08	obj/kern/kernel.asm	/^f0107e08:	31 ff                	xor    %edi,%edi$/;"	l
f0107e0a	obj/kern/kernel.asm	/^f0107e0a:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0107e0f	obj/kern/kernel.asm	/^f0107e0f:	e9 60 ff ff ff       	jmp    f0107d74 <__udivdi3+0x74>$/;"	l
f0107e14	obj/kern/kernel.asm	/^f0107e14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107e18	obj/kern/kernel.asm	/^f0107e18:	8d 4f ff             	lea    -0x1(%edi),%ecx$/;"	l
f0107e1b	obj/kern/kernel.asm	/^f0107e1b:	31 ff                	xor    %edi,%edi$/;"	l
f0107e1d	obj/kern/kernel.asm	/^f0107e1d:	89 c8                	mov    %ecx,%eax$/;"	l
f0107e1f	obj/kern/kernel.asm	/^f0107e1f:	89 fa                	mov    %edi,%edx$/;"	l
f0107e21	obj/kern/kernel.asm	/^f0107e21:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e24	obj/kern/kernel.asm	/^f0107e24:	5e                   	pop    %esi$/;"	l
f0107e25	obj/kern/kernel.asm	/^f0107e25:	5f                   	pop    %edi$/;"	l
f0107e26	obj/kern/kernel.asm	/^f0107e26:	5d                   	pop    %ebp$/;"	l
f0107e27	obj/kern/kernel.asm	/^f0107e27:	c3                   	ret    $/;"	l
f0107e30	obj/kern/kernel.asm	/^f0107e30 <__umoddi3>:$/;"	l
f0107e30	obj/kern/kernel.asm	/^f0107e30:	55                   	push   %ebp$/;"	l
f0107e31	obj/kern/kernel.asm	/^f0107e31:	89 e5                	mov    %esp,%ebp$/;"	l
f0107e33	obj/kern/kernel.asm	/^f0107e33:	57                   	push   %edi$/;"	l
f0107e34	obj/kern/kernel.asm	/^f0107e34:	56                   	push   %esi$/;"	l
f0107e35	obj/kern/kernel.asm	/^f0107e35:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0107e38	obj/kern/kernel.asm	/^f0107e38:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0107e3b	obj/kern/kernel.asm	/^f0107e3b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0107e3e	obj/kern/kernel.asm	/^f0107e3e:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0107e41	obj/kern/kernel.asm	/^f0107e41:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0107e44	obj/kern/kernel.asm	/^f0107e44:	85 d2                	test   %edx,%edx$/;"	l
f0107e46	obj/kern/kernel.asm	/^f0107e46:	89 c8                	mov    %ecx,%eax$/;"	l
f0107e48	obj/kern/kernel.asm	/^f0107e48:	89 4d f4             	mov    %ecx,-0xc(%ebp)$/;"	l
f0107e4b	obj/kern/kernel.asm	/^f0107e4b:	75 13                	jne    f0107e60 <__umoddi3+0x30>$/;"	l
f0107e4d	obj/kern/kernel.asm	/^f0107e4d:	39 f7                	cmp    %esi,%edi$/;"	l
f0107e4f	obj/kern/kernel.asm	/^f0107e4f:	76 3f                	jbe    f0107e90 <__umoddi3+0x60>$/;"	l
f0107e51	obj/kern/kernel.asm	/^f0107e51:	89 f2                	mov    %esi,%edx$/;"	l
f0107e53	obj/kern/kernel.asm	/^f0107e53:	f7 f7                	div    %edi$/;"	l
f0107e55	obj/kern/kernel.asm	/^f0107e55:	89 d0                	mov    %edx,%eax$/;"	l
f0107e57	obj/kern/kernel.asm	/^f0107e57:	31 d2                	xor    %edx,%edx$/;"	l
f0107e59	obj/kern/kernel.asm	/^f0107e59:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107e5c	obj/kern/kernel.asm	/^f0107e5c:	5e                   	pop    %esi$/;"	l
f0107e5d	obj/kern/kernel.asm	/^f0107e5d:	5f                   	pop    %edi$/;"	l
f0107e5e	obj/kern/kernel.asm	/^f0107e5e:	5d                   	pop    %ebp$/;"	l
f0107e5f	obj/kern/kernel.asm	/^f0107e5f:	c3                   	ret    $/;"	l
f0107e60	obj/kern/kernel.asm	/^f0107e60:	39 f2                	cmp    %esi,%edx$/;"	l
f0107e62	obj/kern/kernel.asm	/^f0107e62:	77 4c                	ja     f0107eb0 <__umoddi3+0x80>$/;"	l
f0107e64	obj/kern/kernel.asm	/^f0107e64:	0f bd ca             	bsr    %edx,%ecx$/;"	l
f0107e67	obj/kern/kernel.asm	/^f0107e67:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f0107e6a	obj/kern/kernel.asm	/^f0107e6a:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0107e6d	obj/kern/kernel.asm	/^f0107e6d:	75 51                	jne    f0107ec0 <__umoddi3+0x90>$/;"	l
f0107e6f	obj/kern/kernel.asm	/^f0107e6f:	3b 7d f4             	cmp    -0xc(%ebp),%edi$/;"	l
f0107e72	obj/kern/kernel.asm	/^f0107e72:	0f 87 e0 00 00 00    	ja     f0107f58 <__umoddi3+0x128>$/;"	l
f0107e78	obj/kern/kernel.asm	/^f0107e78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107e7b	obj/kern/kernel.asm	/^f0107e7b:	29 f8                	sub    %edi,%eax$/;"	l
f0107e7d	obj/kern/kernel.asm	/^f0107e7d:	19 d6                	sbb    %edx,%esi$/;"	l
f0107e7f	obj/kern/kernel.asm	/^f0107e7f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0107e82	obj/kern/kernel.asm	/^f0107e82:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107e85	obj/kern/kernel.asm	/^f0107e85:	89 f2                	mov    %esi,%edx$/;"	l
f0107e87	obj/kern/kernel.asm	/^f0107e87:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107e8a	obj/kern/kernel.asm	/^f0107e8a:	5e                   	pop    %esi$/;"	l
f0107e8b	obj/kern/kernel.asm	/^f0107e8b:	5f                   	pop    %edi$/;"	l
f0107e8c	obj/kern/kernel.asm	/^f0107e8c:	5d                   	pop    %ebp$/;"	l
f0107e8d	obj/kern/kernel.asm	/^f0107e8d:	c3                   	ret    $/;"	l
f0107e8e	obj/kern/kernel.asm	/^f0107e8e:	66 90                	xchg   %ax,%ax$/;"	l
f0107e90	obj/kern/kernel.asm	/^f0107e90:	85 ff                	test   %edi,%edi$/;"	l
f0107e92	obj/kern/kernel.asm	/^f0107e92:	75 0b                	jne    f0107e9f <__umoddi3+0x6f>$/;"	l
f0107e94	obj/kern/kernel.asm	/^f0107e94:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107e99	obj/kern/kernel.asm	/^f0107e99:	31 d2                	xor    %edx,%edx$/;"	l
f0107e9b	obj/kern/kernel.asm	/^f0107e9b:	f7 f7                	div    %edi$/;"	l
f0107e9d	obj/kern/kernel.asm	/^f0107e9d:	89 c7                	mov    %eax,%edi$/;"	l
f0107e9f	obj/kern/kernel.asm	/^f0107e9f:	89 f0                	mov    %esi,%eax$/;"	l
f0107ea1	obj/kern/kernel.asm	/^f0107ea1:	31 d2                	xor    %edx,%edx$/;"	l
f0107ea3	obj/kern/kernel.asm	/^f0107ea3:	f7 f7                	div    %edi$/;"	l
f0107ea5	obj/kern/kernel.asm	/^f0107ea5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107ea8	obj/kern/kernel.asm	/^f0107ea8:	f7 f7                	div    %edi$/;"	l
f0107eaa	obj/kern/kernel.asm	/^f0107eaa:	eb a9                	jmp    f0107e55 <__umoddi3+0x25>$/;"	l
f0107eac	obj/kern/kernel.asm	/^f0107eac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107eb0	obj/kern/kernel.asm	/^f0107eb0:	89 c8                	mov    %ecx,%eax$/;"	l
f0107eb2	obj/kern/kernel.asm	/^f0107eb2:	89 f2                	mov    %esi,%edx$/;"	l
f0107eb4	obj/kern/kernel.asm	/^f0107eb4:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107eb7	obj/kern/kernel.asm	/^f0107eb7:	5e                   	pop    %esi$/;"	l
f0107eb8	obj/kern/kernel.asm	/^f0107eb8:	5f                   	pop    %edi$/;"	l
f0107eb9	obj/kern/kernel.asm	/^f0107eb9:	5d                   	pop    %ebp$/;"	l
f0107eba	obj/kern/kernel.asm	/^f0107eba:	c3                   	ret    $/;"	l
f0107ebb	obj/kern/kernel.asm	/^f0107ebb:	90                   	nop$/;"	l
f0107ebc	obj/kern/kernel.asm	/^f0107ebc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107ec0	obj/kern/kernel.asm	/^f0107ec0:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0107ec4	obj/kern/kernel.asm	/^f0107ec4:	d3 e2                	shl    %cl,%edx$/;"	d
f0107ec6	obj/kern/kernel.asm	/^f0107ec6:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0107ec9	obj/kern/kernel.asm	/^f0107ec9:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0107ece	obj/kern/kernel.asm	/^f0107ece:	2b 55 f0             	sub    -0x10(%ebp),%edx$/;"	l
f0107ed1	obj/kern/kernel.asm	/^f0107ed1:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0107ed4	obj/kern/kernel.asm	/^f0107ed4:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0107ed8	obj/kern/kernel.asm	/^f0107ed8:	89 fa                	mov    %edi,%edx$/;"	l
f0107eda	obj/kern/kernel.asm	/^f0107eda:	d3 ea                	shr    %cl,%edx$/;"	d
f0107edc	obj/kern/kernel.asm	/^f0107edc:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0107ee0	obj/kern/kernel.asm	/^f0107ee0:	0b 55 f4             	or     -0xc(%ebp),%edx$/;"	l
f0107ee3	obj/kern/kernel.asm	/^f0107ee3:	d3 e7                	shl    %cl,%edi$/;"	d
f0107ee5	obj/kern/kernel.asm	/^f0107ee5:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0107ee9	obj/kern/kernel.asm	/^f0107ee9:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0107eec	obj/kern/kernel.asm	/^f0107eec:	89 f2                	mov    %esi,%edx$/;"	l
f0107eee	obj/kern/kernel.asm	/^f0107eee:	89 7d e8             	mov    %edi,-0x18(%ebp)$/;"	l
f0107ef1	obj/kern/kernel.asm	/^f0107ef1:	89 c7                	mov    %eax,%edi$/;"	l
f0107ef3	obj/kern/kernel.asm	/^f0107ef3:	d3 ea                	shr    %cl,%edx$/;"	d
f0107ef5	obj/kern/kernel.asm	/^f0107ef5:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0107ef9	obj/kern/kernel.asm	/^f0107ef9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0107efc	obj/kern/kernel.asm	/^f0107efc:	89 c2                	mov    %eax,%edx$/;"	l
f0107efe	obj/kern/kernel.asm	/^f0107efe:	d3 e6                	shl    %cl,%esi$/;"	d
f0107f00	obj/kern/kernel.asm	/^f0107f00:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0107f04	obj/kern/kernel.asm	/^f0107f04:	d3 ea                	shr    %cl,%edx$/;"	d
f0107f06	obj/kern/kernel.asm	/^f0107f06:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0107f0a	obj/kern/kernel.asm	/^f0107f0a:	09 d6                	or     %edx,%esi$/;"	l
f0107f0c	obj/kern/kernel.asm	/^f0107f0c:	89 f0                	mov    %esi,%eax$/;"	l
f0107f0e	obj/kern/kernel.asm	/^f0107f0e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0107f11	obj/kern/kernel.asm	/^f0107f11:	d3 e7                	shl    %cl,%edi$/;"	d
f0107f13	obj/kern/kernel.asm	/^f0107f13:	89 f2                	mov    %esi,%edx$/;"	l
f0107f15	obj/kern/kernel.asm	/^f0107f15:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f0107f18	obj/kern/kernel.asm	/^f0107f18:	89 d6                	mov    %edx,%esi$/;"	l
f0107f1a	obj/kern/kernel.asm	/^f0107f1a:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f0107f1d	obj/kern/kernel.asm	/^f0107f1d:	39 d6                	cmp    %edx,%esi$/;"	l
f0107f1f	obj/kern/kernel.asm	/^f0107f1f:	72 2b                	jb     f0107f4c <__umoddi3+0x11c>$/;"	l
f0107f21	obj/kern/kernel.asm	/^f0107f21:	39 c7                	cmp    %eax,%edi$/;"	l
f0107f23	obj/kern/kernel.asm	/^f0107f23:	72 23                	jb     f0107f48 <__umoddi3+0x118>$/;"	l
f0107f25	obj/kern/kernel.asm	/^f0107f25:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0107f29	obj/kern/kernel.asm	/^f0107f29:	29 c7                	sub    %eax,%edi$/;"	l
f0107f2b	obj/kern/kernel.asm	/^f0107f2b:	19 d6                	sbb    %edx,%esi$/;"	l
f0107f2d	obj/kern/kernel.asm	/^f0107f2d:	89 f0                	mov    %esi,%eax$/;"	l
f0107f2f	obj/kern/kernel.asm	/^f0107f2f:	89 f2                	mov    %esi,%edx$/;"	l
f0107f31	obj/kern/kernel.asm	/^f0107f31:	d3 ef                	shr    %cl,%edi$/;"	d
f0107f33	obj/kern/kernel.asm	/^f0107f33:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0107f37	obj/kern/kernel.asm	/^f0107f37:	d3 e0                	shl    %cl,%eax$/;"	d
f0107f39	obj/kern/kernel.asm	/^f0107f39:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0107f3d	obj/kern/kernel.asm	/^f0107f3d:	09 f8                	or     %edi,%eax$/;"	l
f0107f3f	obj/kern/kernel.asm	/^f0107f3f:	d3 ea                	shr    %cl,%edx$/;"	d
f0107f41	obj/kern/kernel.asm	/^f0107f41:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107f44	obj/kern/kernel.asm	/^f0107f44:	5e                   	pop    %esi$/;"	l
f0107f45	obj/kern/kernel.asm	/^f0107f45:	5f                   	pop    %edi$/;"	l
f0107f46	obj/kern/kernel.asm	/^f0107f46:	5d                   	pop    %ebp$/;"	l
f0107f47	obj/kern/kernel.asm	/^f0107f47:	c3                   	ret    $/;"	l
f0107f48	obj/kern/kernel.asm	/^f0107f48:	39 d6                	cmp    %edx,%esi$/;"	l
f0107f4a	obj/kern/kernel.asm	/^f0107f4a:	75 d9                	jne    f0107f25 <__umoddi3+0xf5>$/;"	l
f0107f4c	obj/kern/kernel.asm	/^f0107f4c:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
f0107f4f	obj/kern/kernel.asm	/^f0107f4f:	1b 55 f4             	sbb    -0xc(%ebp),%edx$/;"	l
f0107f52	obj/kern/kernel.asm	/^f0107f52:	eb d1                	jmp    f0107f25 <__umoddi3+0xf5>$/;"	l
f0107f54	obj/kern/kernel.asm	/^f0107f54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107f58	obj/kern/kernel.asm	/^f0107f58:	39 f2                	cmp    %esi,%edx$/;"	l
f0107f5a	obj/kern/kernel.asm	/^f0107f5a:	0f 82 18 ff ff ff    	jb     f0107e78 <__umoddi3+0x48>$/;"	l
f0107f60	obj/kern/kernel.asm	/^f0107f60:	e9 1d ff ff ff       	jmp    f0107e82 <__umoddi3+0x52>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/writemotd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/writemotd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
fields	kern/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_context_desc::__anon49	typeref:struct:e1000_context_desc::__anon49::__anon50
fields	kern/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_data_desc::__anon53	typeref:struct:e1000_data_desc::__anon53::__anon54
fields	kern/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_tx_desc::__anon43	typeref:struct:e1000_tx_desc::__anon43::__anon44
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_remove	fs/fs.c	/^file_remove(const char *path)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find	obj/kern/kernel.asm	/^			find = check;$/;"	d
find	obj/kern/kernel.asm	/^	find = NULL;$/;"	d
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
findlow	obj/kern/kernel.asm	/^			findlow = PGNUM(page2pa(find));$/;"	d
findup	obj/kern/kernel.asm	/^			findup	= PGNUM(page2pa(find)+PGSIZE*3);$/;"	d
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free	obj/kern/kernel.asm	/^		first_free = (struct Page*)pa2page(page2pa(find)+PGSIZE*i);$/;"	d
first_free	obj/kern/kernel.asm	/^	first_free = NULL;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	fs/buf.h	/^  int flags;$/;"	m	struct:buf
flags	kern/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_data_desc::__anon51	typeref:struct:e1000_data_desc::__anon51::__anon52
flags	kern/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_tx_desc::__anon41	typeref:struct:e1000_tx_desc::__anon41::__anon42
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/writemotd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon17::__anon18	typeref:struct:netifapi_msg_msg::__anon17::__anon18::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon22::__anon25
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output, buf=buf):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/kern/kernel.asm	/^	hdr = (struct Elf*)binary;$/;"	d
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdr_len	kern/e1000_hw.h	/^            uint8_t hdr_len;    \/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon49::__anon50
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	fs/bio.c	/^  struct buf head;$/;"	m	struct:__anon9	typeref:struct:__anon9::buf	file:
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon11
i	obj/kern/kernel.asm	/^			i = 0;$/;"	d
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle	obj/kern/kernel.asm	/^	idle = &envs[cpunum()];$/;"	d
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx_va	obj/kern/kernel.asm	/^		idx_va = ROUNDDOWN (idx_va, PGSIZE);$/;"	d
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon11
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon17::__anon18
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::__anon23
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon17::__anon18
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int E1000_transmit(char* buf,int length){$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello2.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/writemotd.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/writemotd.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon26::__anon32	typeref:struct:api_msg_msg::__anon26::__anon32::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon16	typeref:struct:netconn::__anon16::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_config	kern/e1000_hw.h	/^        uint32_t ip_config;$/;"	m	union:e1000_context_desc::__anon45
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_fields	kern/e1000_hw.h	/^        } ip_fields;$/;"	m	union:e1000_context_desc::__anon45	typeref:struct:e1000_context_desc::__anon45::__anon46
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon26::__anon28	typeref:struct:api_msg_msg::__anon26::__anon28::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon26::__anon29	typeref:struct:api_msg_msg::__anon26::__anon29::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon17::__anon18	typeref:struct:netifapi_msg_msg::__anon17::__anon18::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipcse	kern/e1000_hw.h	/^            uint16_t ipcse;     \/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon45::__anon46
ipcso	kern/e1000_hw.h	/^            uint8_t ipcso;      \/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon45::__anon46
ipcss	kern/e1000_hw.h	/^            uint8_t ipcss;      \/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon45::__anon46
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr_prev	obj/net/ns.asm	/^    ipr_prev = ipr;$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::__anon32
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon26::__anon32	typeref:enum:api_msg_msg::__anon26::__anon32::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_net_buf	kern/e1000.h	/^char kern_net_buf[PGSIZE];$/;"	v
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^		lapic = NULL;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = (uint32_t *)conf->lapicaddr;$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::__anon33
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon26::__anon30
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon26::__anon31
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/kern/kernel.asm	/^	len = ROUNDUP(len,PGSIZE);$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon51::__anon52
length	kern/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon41::__anon42
length	kern/e1000_hw.h	/^    uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/writemotd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
lh	fs/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon26::__anon29
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock	fs/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon9	typeref:struct:__anon9::spinlock	file:
lock	fs/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock
log	fs/log.c	/^struct log log;$/;"	v	typeref:struct:log
log	fs/log.c	/^struct log {$/;"	s	file:
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logheader	fs/log.c	/^struct logheader {$/;"	s	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/evilhello2.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/writemotd.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lower	kern/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon51
lower	kern/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon41
lower_setup	kern/e1000_hw.h	/^    } lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon45
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/writemotd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon35
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon34
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon22::__anon25
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon26
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon17
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon22
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon1	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon1	file:
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	kern/e1000_hw.h	/^            uint16_t mss;       \/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon49::__anon50
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon26::__anon32	typeref:struct:api_msg_msg::__anon26::__anon32::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	fs/log.c	/^  int n;$/;"	m	struct:logheader	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::__anon27
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon39
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nbytes	obj/fs/fs.asm	/^  nbytes = MIN(req->req_n, PGSIZE);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon22::__anon23	typeref:struct:tcpip_msg::__anon22::__anon23::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon17::__anon18	typeref:struct:netifapi_msg_msg::__anon17::__anon18::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/writemotd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	fs/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = result + n;$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nexttail	obj/kern/kernel.asm	/^	nexttail = (nexttail+1)%TX_DESC_RING_SIZE;$/;"	d
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/writemotd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
nstr	obj/kern/kernel.asm	/^		nstr = (buffover[i\/4]>>(8*i)) & 0x000000ff;$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/writemotd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/writemotd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/evilhello2.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/writemotd.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/writemotd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	70;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/fs/fs.asm	/^out:$/;"	l
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
out	obj/net/testinput.asm	/^out:$/;"	l
out	obj/net/testoutput.asm	/^out:$/;"	l
out	obj/user/badsegment.asm	/^out:$/;"	l
out	obj/user/breakpoint.asm	/^out:$/;"	l
out	obj/user/buggyhello.asm	/^out:$/;"	l
out	obj/user/buggyhello2.asm	/^out:$/;"	l
out	obj/user/divzero.asm	/^out:$/;"	l
out	obj/user/dumbfork.asm	/^out:$/;"	l
out	obj/user/echosrv.asm	/^out:$/;"	l
out	obj/user/echotest.asm	/^out:$/;"	l
out	obj/user/evilhello.asm	/^out:$/;"	l
out	obj/user/evilhello2.asm	/^out:$/;"	l
out	obj/user/fairness.asm	/^out:$/;"	l
out	obj/user/faultalloc.asm	/^out:$/;"	l
out	obj/user/faultallocbad.asm	/^out:$/;"	l
out	obj/user/faultbadhandler.asm	/^out:$/;"	l
out	obj/user/faultdie.asm	/^out:$/;"	l
out	obj/user/faultevilhandler.asm	/^out:$/;"	l
out	obj/user/faultnostack.asm	/^out:$/;"	l
out	obj/user/faultread.asm	/^out:$/;"	l
out	obj/user/faultreadkernel.asm	/^out:$/;"	l
out	obj/user/faultregs.asm	/^out:$/;"	l
out	obj/user/faultwrite.asm	/^out:$/;"	l
out	obj/user/faultwritekernel.asm	/^out:$/;"	l
out	obj/user/forktree.asm	/^out:$/;"	l
out	obj/user/hello.asm	/^out:$/;"	l
out	obj/user/httpd.asm	/^out:$/;"	l
out	obj/user/icode.asm	/^out:$/;"	l
out	obj/user/idle.asm	/^out:$/;"	l
out	obj/user/init.asm	/^out:$/;"	l
out	obj/user/pingpong.asm	/^out:$/;"	l
out	obj/user/pingpongs.asm	/^out:$/;"	l
out	obj/user/primes.asm	/^out:$/;"	l
out	obj/user/softint.asm	/^out:$/;"	l
out	obj/user/spin.asm	/^out:$/;"	l
out	obj/user/stresssched.asm	/^out:$/;"	l
out	obj/user/testbss.asm	/^out:$/;"	l
out	obj/user/testfile.asm	/^out:$/;"	l
out	obj/user/testtime.asm	/^out:$/;"	l
out	obj/user/writemotd.asm	/^out:$/;"	l
out	obj/user/yield.asm	/^out:$/;"	l
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/writemotd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overflow_me	kern/monitor.c	/^overflow_me(void)$/;"	f
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon22::__anon23	typeref:struct:tcpip_msg::__anon22::__anon23::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^		p = page_lookup(curenv->env_pgdir,srcva,&ptestore);$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/kern/kernel.asm	/^	p = page_lookup(srce->env_pgdir,srcva,&pte_store);$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/writemotd.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc_4pages	kern/pmap.c	/^page_alloc_4pages(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_4pages	kern/pmap.c	/^page_free_4pages(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = first_free->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^	pages = boot_alloc(npages * sizeof(struct Page));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon20
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon21
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon16
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_E1000_attach	kern/e1000.c	/^pci_E1000_attach(struct pci_func *pcif)$/;"	f
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon55
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon55
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon55
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon55
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde	obj/kern/kernel.asm	/^	pde = &pgdir[PDX(va)];$/;"	d
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/kern/kernel.asm	/^		perm = a4 & 0xfff;$/;"	d
perm	obj/kern/kernel.asm	/^	perm = perm | PTE_P;$/;"	d
perm	obj/kern/kernel.asm	/^	perm = perm|PTE_U|PTE_P;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/net/testinput.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/net/testoutput.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/forktree.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/pingpong.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/pingpongs.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/primes.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/spin.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perm	obj/user/stresssched.asm	/^	perm = pte & PTE_SYSCALL;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/fs/fs.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/net/ns.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/net/testinput.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/divzero.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/echotest.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/evilhello2.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/evilhello2.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/fairness.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultread.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/forktree.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/hello.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/httpd.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/icode.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/idle.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/init.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/primes.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/softint.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/spin.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/testbss.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/testfile.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/testtime.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/writemotd.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/writemotd.asm	/^		pg = (void*)UTOP;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void*)UTOP; $/;"	d
pg	obj/user/yield.asm	/^		pg = (void*)UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) hdr + hdr->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
popts	kern/e1000_hw.h	/^            uint8_t popts;      \/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon53::__anon54
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon26::__anon29
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon26::__anon28
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = chunck_list.pp_link;$/;"	d
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);$/;"	d
pp	obj/kern/kernel.asm	/^	pp =  page_alloc(0);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_alloc_4pages(0);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_lookup(pgdir,va,&pte);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = pp0 = 0;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = page_alloc(0);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = page_alloc_4pages(ALLOC_ZERO);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/writemotd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/writemotd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/writemotd.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	fs/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = (struct tcp_pcb *)lpcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/writemotd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon26::__anon27
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = (pte_t *)KADDR(PTE_ADDR(*pde));$/;"	d
pte	obj/kern/kernel.asm	/^		pte = page2kva(pp);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk (env->env_pgdir, (void*)idx_va, 0);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk (pgdir, (void*)(va+base), 1);$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, va, perm); \/\/perm create$/;"	d
pte	obj/kern/kernel.asm	/^	pte = pgdir_walk(pgdir, va, 0);$/;"	d
pte	obj/kern/kernel.asm	/^	pte = pgdir_walk(pgdir,va,0);$/;"	d
pte	obj/net/ns.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello2.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/writemotd.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/fs/fs.asm	/^    ptr = &f->f_direct[filebno];$/;"	d
ptr	obj/fs/fs.asm	/^    ptr = diskaddr(f->f_indirect) + 4 * (filebno - NDIRECT);$/;"	d
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
qnext	fs/buf.h	/^  struct buf *qnext; \/\/ disk queue$/;"	m	struct:buf	typeref:struct:buf::buf
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::__anon31
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/fs/fs.asm	/^  r = file_write(o->o_file, req->req_buf,$/;"	d
r	obj/fs/fs.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/fs/fs.asm	/^  r = ide_read(blockno * BLKSECTS, addr, BLKSECTS);$/;"	d
r	obj/fs/fs.asm	/^  r = ide_write(blockno * BLKSECTS, addr, BLKSECTS);$/;"	d
r	obj/fs/fs.asm	/^  r = sys_page_alloc(thisenv->env_id, addr, PTE_U|PTE_W|PTE_P);$/;"	d
r	obj/fs/fs.asm	/^  r = sys_page_map(thisenv->env_id, addr, thisenv->env_id, addr, PTE_SYSCALL);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_cgetc (); $/;"	d
r	obj/kern/kernel.asm	/^		r = sys_env_set_pgfault_upcall((envid_t)a1,(void*)a2);$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_env_set_trapframe((envid_t)a1,(struct Trapframe*)a2);$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_getenvid (); $/;"	d
r	obj/kern/kernel.asm	/^		r = sys_ipc_recv((void*)a1);$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_ipc_try_send((envid_t)a1,a2,(void*)a3,(int)a4);$/;"	d
r	obj/kern/kernel.asm	/^		r = sys_time_msec();$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(curenv->env_pgdir, p, va, PTE_U | PTE_W);$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^        r = sys_ipc_recv(&nsipcbuf);$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/net/ns.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^        r = sys_ipc_recv(&nsipcbuf);$/;"	d
r	obj/net/testinput.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/net/testinput.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^        r = sys_ipc_recv(&nsipcbuf);$/;"	d
r	obj/net/testoutput.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/net/testoutput.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/badsegment.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/breakpoint.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/buggyhello.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/buggyhello2.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/divzero.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/dumbfork.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/echosrv.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/echotest.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/evilhello.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/evilhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello2.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello2.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/evilhello2.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/fairness.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultalloc.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultallocbad.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultdie.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultnostack.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultread.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultregs.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultwrite.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/forktree.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/hello.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/httpd.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/httpd.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/icode.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/idle.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/init.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/pingpong.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/pingpongs.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/primes.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/softint.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/spin.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/stresssched.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/testbss.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/testfile.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/testtime.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/writemotd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/writemotd.asm	/^			r = 0;$/;"	d
r	obj/user/writemotd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/writemotd.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/writemotd.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^  r = fd_alloc(&fd);$/;"	d
r	obj/user/yield.asm	/^  r = fsipc(FSREQ_OPEN, fd);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon16	typeref:struct:netconn::__anon16::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/writemotd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_pretaddr	kern/monitor.c	/^read_pretaddr() {$/;"	f	file:
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
remove	lib/file.c	/^remove(const char *path)$/;"	f
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^			result = first_free;$/;"	d
result	obj/kern/kernel.asm	/^		result = page_free_list;$/;"	d
result	obj/kern/kernel.asm	/^	result = NULL;$/;"	d
result	obj/kern/kernel.asm	/^	result = ROUNDUP(nextfree,PGSIZE);$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/writemotd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/writemotd.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
ring0_call	user/evilhello2.c	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	f
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon56	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/evilhello2.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/writemotd.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
sector	fs/buf.h	/^  uint sector;$/;"	m	struct:buf
sector	fs/log.c	/^  int sector[LOGSIZE];$/;"	m	struct:logheader	file:
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_remove	fs/serv.c	/^serve_remove(envid_t envid, struct Fsreq_remove *req)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sgdt	user/evilhello2.c	/^sgdt(struct Pseudodesc* gdtd)$/;"	f	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	fs/log.c	/^  int size;$/;"	m	struct:log	file:
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/evilhello2.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/writemotd.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000_hw.h	/^            uint16_t special;   \/* *\/$/;"	m	struct:e1000_data_desc::__anon53::__anon54
special	kern/e1000_hw.h	/^            uint16_t special;$/;"	m	struct:e1000_tx_desc::__anon43::__anon44
special	kern/e1000_hw.h	/^    uint16_t special;$/;"	m	struct:e1000_rx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/writemotd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon40
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	fs/log.c	/^  int start;$/;"	m	struct:log	file:
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_overflow	kern/monitor.c	/^start_overflow(void)$/;"	f
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon17::__anon18
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static int32_t$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static int32_t$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static int32_t$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static int32_t$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static int32_t$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static int32_t$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello2.asm	/^static __inline void$/;"	l
static	obj/user/evilhello2.asm	/^static int$/;"	l
static	obj/user/evilhello2.asm	/^static int32_t$/;"	l
static	obj/user/evilhello2.asm	/^static long long$/;"	l
static	obj/user/evilhello2.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello2.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static int32_t$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static int32_t$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static int32_t$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static int32_t$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static int32_t$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static int32_t$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static int32_t$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static int32_t$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static int32_t$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static int32_t$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/writemotd.asm	/^static int$/;"	l
static	obj/user/writemotd.asm	/^static int32_t$/;"	l
static	obj/user/writemotd.asm	/^static long long$/;"	l
static	obj/user/writemotd.asm	/^static ssize_t$/;"	l
static	obj/user/writemotd.asm	/^static unsigned long long$/;"	l
static	obj/user/writemotd.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon49::__anon50
status	kern/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon53::__anon54
status	kern/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon43::__anon44
status	kern/e1000_hw.h	/^    uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_map_kernel_page	kern/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	file:
sys_map_kernel_page	lib/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_net_try_send	kern/syscall.c	/^sys_net_try_send(void* data, size_t len)$/;"	f	file:
sys_net_try_send	lib/syscall.c	/^sys_net_try_send(void *data, size_t len)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
sysenter_handler	obj/kern/kernel.asm	/^sysenter_handler:$/;"	l
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon16	typeref:struct:netconn::__anon16::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_config	kern/e1000_hw.h	/^        uint32_t tcp_config;$/;"	m	union:e1000_context_desc::__anon47
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_fields	kern/e1000_hw.h	/^        } tcp_fields;$/;"	m	union:e1000_context_desc::__anon47	typeref:struct:e1000_context_desc::__anon47::__anon48
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_seg_setup	kern/e1000_hw.h	/^    } tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon49
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
test_writemotd1	grade-lab5	/^def test_writemotd1():$/;"	f
test_writemotd2	grade-lab5	/^def test_writemotd2():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	39;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/evilhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/writemotd.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid ());$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon38	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon22	typeref:struct:tcpip_msg::__anon22::__anon25
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmp	user/evilhello2.c	/^char tmp[2*PGSIZE];$/;"	v
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tucse	kern/e1000_hw.h	/^            uint16_t tucse;     \/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon47::__anon48
tucso	kern/e1000_hw.h	/^            uint8_t tucso;      \/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon47::__anon48
tucss	kern/e1000_hw.h	/^            uint8_t tucss;      \/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon47::__anon48
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_desc_head	kern/e1000.h	/^uint32_t *tx_desc_head;				\/\/head and tail are offset.can be up to 64k desc$/;"	v
tx_desc_head	obj/kern/kernel.asm	/^	tx_desc_head = (uint32_t*)(&e1000[E1000_TDH]);$/;"	d
tx_desc_ring	kern/e1000.h	/^struct e1000_tx_desc tx_desc_ring[TX_DESC_RING_SIZE];$/;"	v	typeref:struct:e1000_tx_desc
tx_desc_tail	kern/e1000.h	/^uint32_t *tx_desc_tail;$/;"	v
tx_desc_tail	obj/kern/kernel.asm	/^	tx_desc_tail = (uint32_t*)(&e1000[E1000_TDT]);$/;"	d
typ_len_ext	kern/e1000_hw.h	/^            uint8_t typ_len_ext;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon51::__anon52
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon16	typeref:struct:netconn::__anon16::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/writemotd.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
upper	kern/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon53
upper	kern/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon43
upper_setup	kern/e1000_hw.h	/^    } upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon47
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = idx_va;		$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = idx_va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof (struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(tf->tf_esp - sizeof (struct UTrapframe) - 4);$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon36	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/kern/kernel.asm	/^	va = ROUNDDOWN(va,PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon14
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello2.asm	/^void *$/;"	l
void	obj/user/evilhello2.asm	/^void evil()$/;"	l
void	obj/user/evilhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello2.asm	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	l
void	obj/user/evilhello2.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/writemotd.asm	/^void *$/;"	l
void	obj/user/writemotd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/writemotd.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon17::__anon19
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon26	typeref:struct:api_msg_msg::__anon26::__anon30
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon36::__anon37	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello2.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello2.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/writemotd.asm	/^				width = 0;$/;"	d
width	obj/user/writemotd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/writemotd.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon56	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrmsr	kern/trap.c	18;"	d	file:
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
